{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/contexts/orgContext.js\";\nvar __jsx = React.createElement;\nimport React, { createContext, useState, useEffect } from 'react';\nexport var OrgContext = createContext();\n\nvar OrgContextProvider = function OrgContextProvider(props) {\n  var _useState = useState({}),\n      org = _useState[0],\n      setOrg = _useState[1];\n\n  var getOrg =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(orgID) {\n      var request, _org;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('in get org', orgID);\n              _context.prev = 1;\n              _context.next = 4;\n              return fetch(\"http://localhost:8000/orgs/\".concat(orgID), {\n                method: 'GET',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json',\n                  'Authorization': \"Bearer \".concat(localStorage.getItem('bingo_token'))\n                }\n              });\n\n            case 4:\n              request = _context.sent;\n              _context.next = 7;\n              return request.json();\n\n            case 7:\n              _org = _context.sent;\n              console.log({\n                org: _org\n              });\n              setOrg(_org);\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](1);\n              alert(_context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 12]]);\n    }));\n\n    return function getOrg(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(OrgContext.Provider, {\n    value: {\n      org: org,\n      updateOrg: setOrg,\n      getOrg: getOrg\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default OrgContextProvider;","map":{"version":3,"sources":["/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/contexts/orgContext.js"],"names":["React","createContext","useState","useEffect","OrgContext","OrgContextProvider","props","org","setOrg","getOrg","orgID","console","log","fetch","method","headers","localStorage","getItem","request","json","alert","updateOrg","children"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AAEA,OAAO,IAAMC,UAAU,GAAGH,aAAa,EAAhC;;AAEP,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AAAA,kBACVJ,QAAQ,CAAC,EAAD,CADE;AAAA,MAC1BK,GAD0B;AAAA,MACrBC,MADqB;;AAIlC,MAAMC,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,iBAAOC,KAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACXC,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;AADW;AAAA;AAAA,qBAGeG,KAAK,sCAA+BH,KAA/B,GAAwC;AAC/DI,gBAAAA,MAAM,EAAE,KADuD;AAE/DC,gBAAAA,OAAO,EAAE;AACP,4BAAU,kBADH;AAEP,kCAAgB,kBAFT;AAGP,oDAA2BC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAA3B;AAHO;AAFsD,eAAxC,CAHpB;;AAAA;AAGDC,cAAAA,OAHC;AAAA;AAAA,qBAWaA,OAAO,CAACC,IAAR,EAXb;;AAAA;AAWCZ,cAAAA,IAXD;AAYLI,cAAAA,OAAO,CAACC,GAAR,CAAY;AAACL,gBAAAA,GAAG,EAAHA;AAAD,eAAZ;AACAC,cAAAA,MAAM,CAACD,IAAD,CAAN;AAbK;AAAA;;AAAA;AAAA;AAAA;AAcOa,cAAAA,KAAK,aAAL;;AAdP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAANX,MAAM;AAAA;AAAA;AAAA,KAAZ;;AAiBA,SACI,MAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAAEF,MAAAA,GAAG,EAAHA,GAAF;AAAOc,MAAAA,SAAS,EAAEb,MAAlB;AAA0BC,MAAAA,MAAM,EAAEA;AAAlC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACgB,QADX,CADJ;AAKH,CA1BD;;AA4BA,eAAejB,kBAAf","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const OrgContext = createContext();\n\nconst OrgContextProvider = (props) => {\n    const [ org, setOrg ] = useState({})\n\n\n    const getOrg = async (orgID) => {\n        console.log('in get org', orgID)\n        try {\n            const request = await fetch(`http://localhost:8000/orgs/${orgID}`, {\n                method: 'GET',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${localStorage.getItem('bingo_token')}`\n                },\n              })\n              const org = await request.json();\n              console.log({org})\n              setOrg(org);\n            } catch(err) {alert(err)}\n    }\n\n    return (\n        <OrgContext.Provider value={{ org, updateOrg: setOrg, getOrg: getOrg }}>\n            {props.children}\n        </OrgContext.Provider>\n    )\n}\n\nexport default OrgContextProvider;"]},"metadata":{},"sourceType":"module"}