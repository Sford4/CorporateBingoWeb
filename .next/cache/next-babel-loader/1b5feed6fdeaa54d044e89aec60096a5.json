{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/components/Play/Tasks/TaskCode.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react'; // context imports\n// Style imports\n\nimport { MASTER, COLORS } from '../../../styles/masterStyles';\n\nconst TaskClick = props => {\n  const {\n    0: code,\n    1: setCode\n  } = useState(props.task.task.answer);\n\n  const submitCode = code => {\n    if (props.task.codes.codeList.includes(code)) {\n      setComplete(code, true);\n    } else {\n      alert('That wasn\\'t what we\\'re looking for... check your code and try again!');\n    }\n\n    setCode('');\n  };\n\n  const setComplete = (code, bool) => {\n    props.updateTask(_objectSpread({}, props.task, {\n      complete: bool,\n      task: {\n        taskType: 'code',\n        answer: code\n      }\n    }));\n    props.completeSquare(bool);\n  };\n\n  return __jsx(\"div\", {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    style: MASTER.wideRoundInput,\n    placeholder: 'Enter code here',\n    value: code,\n    onChange: e => setCode(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    style: MASTER.wideRoundBtn,\n    onClick: () => submitCode(code),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: MASTER.wideRoundBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"SUBMIT CODE\")));\n};\n\nconst styles = {\n  container: {\n    height: 400,\n    width: '100%',\n    backgroundColor: '#fff',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center' // justifyContent: 'center',\n\n  }\n};\nexport default TaskClick;","map":{"version":3,"sources":["/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/components/Play/Tasks/TaskCode.js"],"names":["React","useState","useEffect","MASTER","COLORS","TaskClick","props","code","setCode","task","answer","submitCode","codes","codeList","includes","setComplete","alert","bool","updateTask","complete","taskType","completeSquare","styles","container","wideRoundInput","e","target","value","wideRoundBtn","wideRoundBtnText","height","width","backgroundColor","display","flexDirection","alignItems"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAGA;AAEA;;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,8BAA/B;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAEzB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBP,QAAQ,CAACK,KAAK,CAACG,IAAN,CAAWA,IAAX,CAAgBC,MAAjB,CAAhC;;AAEA,QAAMC,UAAU,GAAGJ,IAAI,IAAI;AACvB,QAAGD,KAAK,CAACG,IAAN,CAAWG,KAAX,CAAiBC,QAAjB,CAA0BC,QAA1B,CAAmCP,IAAnC,CAAH,EAA4C;AACxCQ,MAAAA,WAAW,CAACR,IAAD,EAAO,IAAP,CAAX;AACH,KAFD,MAEO;AACHS,MAAAA,KAAK,CAAC,wEAAD,CAAL;AACH;;AACDR,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAPD;;AASA,QAAMO,WAAW,GAAG,CAACR,IAAD,EAAOU,IAAP,KAAgB;AAChCX,IAAAA,KAAK,CAACY,UAAN,mBACOZ,KAAK,CAACG,IADb;AAEIU,MAAAA,QAAQ,EAAEF,IAFd;AAGIR,MAAAA,IAAI,EAAE;AACFW,QAAAA,QAAQ,EAAE,MADR;AAEFV,QAAAA,MAAM,EAAEH;AAFN;AAHV;AAQAD,IAAAA,KAAK,CAACe,cAAN,CAAqBJ,IAArB;AACH,GAVD;;AAYF,SACE;AAAK,IAAA,KAAK,EAAEK,MAAM,CAACC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,KAAK,EAAEpB,MAAM,CAACqB,cADlB;AAEI,IAAA,WAAW,EAAE,iBAFjB;AAGI,IAAA,KAAK,EAAEjB,IAHX;AAII,IAAA,QAAQ,EAAGkB,CAAD,IAAOjB,OAAO,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI;AACI,IAAA,KAAK,EAAExB,MAAM,CAACyB,YADlB;AAEI,IAAA,OAAO,EAAE,MAAMjB,UAAU,CAACJ,IAAD,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AAAK,IAAA,KAAK,EAAEJ,MAAM,CAAC0B,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,CAPJ,CADF;AAgBD,CAzCD;;AA2CA,MAAMP,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE;AACTO,IAAAA,MAAM,EAAE,GADC;AAETC,IAAAA,KAAK,EAAE,MAFE;AAGTC,IAAAA,eAAe,EAAE,MAHR;AAITC,IAAAA,OAAO,EAAE,MAJA;AAKTC,IAAAA,aAAa,EAAE,QALN;AAMTC,IAAAA,UAAU,EAAE,QANH,CAOT;;AAPS;AADE,CAAf;AAYA,eAAe9B,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n\n// context imports\n\n// Style imports\nimport { MASTER, COLORS } from '../../../styles/masterStyles';\n\nconst TaskClick = (props) => {\n\n    const [code, setCode] = useState(props.task.task.answer);\n\n    const submitCode = code => {\n        if(props.task.codes.codeList.includes(code)){\n            setComplete(code, true);\n        } else {\n            alert('That wasn\\'t what we\\'re looking for... check your code and try again!');\n        }\n        setCode('');\n    }\n\n    const setComplete = (code, bool) => {\n        props.updateTask({\n            ...props.task,\n            complete: bool,\n            task: {\n                taskType: 'code',\n                answer: code,\n            }\n        })\n        props.completeSquare(bool);\n    } \n\n  return (\n    <div style={styles.container}>\n        <input \n            style={MASTER.wideRoundInput}\n            placeholder={'Enter code here'} \n            value={code} \n            onChange={(e) => setCode(e.target.value)} \n        />\n        <button \n            style={MASTER.wideRoundBtn} \n            onClick={() => submitCode(code)}\n        >\n            <div style={MASTER.wideRoundBtnText}>SUBMIT CODE</div>\n        </button>\n    </div>\n  );\n}\n  \nconst styles = {\n  container: {\n    height: 400,\n    width: '100%',\n    backgroundColor: '#fff',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    // justifyContent: 'center',\n  },\n};\n\nexport default TaskClick;"]},"metadata":{},"sourceType":"module"}