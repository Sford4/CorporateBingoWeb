{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar _jsxFileName = \"/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/pages/manageBoards/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport moment from 'moment'; // context imports\n// Style imports\n\nimport { MASTER, COLORS } from '../../styles/masterStyles'; // component imports\n\nimport Link from 'next/link';\nimport Layout from '../../components/Layout'; // Material UI\n\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableSortLabel from '@material-ui/core/TableSortLabel'; // context imports\n\nimport { OrgContext } from '../../contexts/orgContext';\nimport { ManageBoardsContext } from '../../contexts/manageBoardsContext';\nimport { UserContext } from '../../contexts/userContext';\nimport { SUPPORTS_PERFORMANCE_USER_TIMING } from '../../node_modules/next/dist/next-server/lib/utils';\n\nconst ManageBoardsHome = props => {\n  const headCells = [{\n    id: 'name',\n    numeric: false,\n    disablePadding: false,\n    label: 'NAME'\n  }, {\n    id: 'tasks',\n    numeric: false,\n    disablePadding: false,\n    label: 'TASKS'\n  }, {\n    id: 'created',\n    numeric: false,\n    disablePadding: false,\n    label: 'CREATED'\n  }, {\n    id: 'modified',\n    numeric: false,\n    disablePadding: false,\n    label: 'LAST MODIFIED'\n  }];\n  const router = useRouter();\n  const {\n    contextOrg,\n    getOrg\n  } = useContext(OrgContext);\n  const {\n    newBoard\n  } = useContext(ManageBoardsContext);\n  const {\n    user,\n    storeUser,\n    logout\n  } = useContext(UserContext);\n  const {\n    0: boards,\n    1: setBoards\n  } = useState(contextOrg.boards || []); // table state\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('name');\n  const {\n    0: rows,\n    1: setRows\n  } = useState(boards);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const {\n    0: searchText,\n    1: setSearchText\n  } = useState('');\n\n  const searchForBoard = () => {\n    setSearchText('');\n    setBoards(dummyBoards);\n  };\n\n  useEffect(() => {\n    if (!user) {\n      if (localStorage.getItem('bingo_user')) {\n        storeUser(JSON.parse(localStorage.getItem('bingo_user')));\n      } else {\n        logout();\n      }\n    }\n\n    if (!contextOrg.id && user && !user.org) {\n      router.push('/joinGame');\n    } else if (!contextOrg.id && user && user.org) {\n      getOrg(user.org);\n    }\n\n    if (contextOrg && contextOrg.boards && contextOrg.boards.length !== boards.length) {\n      setBoards(contextOrg.boards);\n    }\n  }, [contextOrg, user]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(_parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  function desc(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  function stableSort(array, cmp) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = cmp(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n  }\n\n  function getSorting(order, orderBy) {\n    return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n  }\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    console.log({\n      isAsc\n    });\n    console.log({\n      property\n    });\n  };\n\n  const createSortHandler = property => event => {\n    handleRequestSort(event, property);\n  };\n\n  const generateBoardRows = () => {\n    if (rows.length) {\n      return stableSort(rows, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((board, index) => {\n        return __jsx(Link, {\n          key: board.id,\n          href: `manageBoards/[boardID]`,\n          as: `manageBoards/${board.id}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, __jsx(TableRow, {\n          style: {\n            cursor: 'pointer'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, __jsx(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, board.title), __jsx(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, board.numSquares), __jsx(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, moment(board.created).format(\"MMM Do, YYYY\")), __jsx(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, moment(board.modified).format(\"MMM Do, YYYY\"))));\n      });\n    }\n\n    return __jsx(TableRow, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"No boards yet... click NEW BOARD to make one!\"), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }));\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: MASTER.pageTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"MANAGE BOARDS\"), __jsx(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      padding: '1% 3%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    style: _objectSpread({}, MASTER.wideRoundInput, {\n      maxWidth: 300\n    }),\n    value: searchText,\n    onChange: e => setSearchText(e.target.value),\n    placeholder: 'Search by name or access code ',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    style: _objectSpread({}, MASTER.wideRoundBtn, {\n      width: 100\n    }),\n    onClick: () => searchForBoard(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: MASTER.wideRoundBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"SEARCH\"))), __jsx(Table, {\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, __jsx(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, __jsx(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, headCells.map(headCell => __jsx(TableCell, {\n    key: headCell.id,\n    align: headCell.numeric ? 'right' : 'left',\n    padding: headCell.disablePadding ? 'none' : 'default',\n    sortDirection: orderBy === headCell.id ? order : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, __jsx(TableSortLabel, {\n    active: orderBy === headCell.id,\n    direction: orderBy === headCell.id ? order : 'asc',\n    onClick: createSortHandler(headCell.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, headCell.label))))), __jsx(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, generateBoardRows())), __jsx(TablePagination, {\n    rowsPerPageOptions: [5, 10, 20, 40, 60],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }))), __jsx(\"button\", {\n    style: _objectSpread({}, MASTER.wideRoundBtn, {\n      width: 150,\n      position: 'absolute',\n      bottom: 30,\n      right: 20,\n      height: 45\n    }),\n    onClick: () => newBoard(contextOrg.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: MASTER.wideRoundBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"NEW BOARD\"))));\n};\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#fff'\n  }\n};\nexport default ManageBoardsHome;","map":{"version":3,"sources":["/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/pages/manageBoards/index.js"],"names":["React","useState","useEffect","useContext","useRouter","moment","MASTER","COLORS","Link","Layout","Paper","Table","TableBody","TableCell","TableHead","TableRow","TablePagination","TableSortLabel","OrgContext","ManageBoardsContext","UserContext","SUPPORTS_PERFORMANCE_USER_TIMING","ManageBoardsHome","props","headCells","id","numeric","disablePadding","label","router","contextOrg","getOrg","newBoard","user","storeUser","logout","boards","setBoards","order","setOrder","orderBy","setOrderBy","rows","setRows","page","setPage","rowsPerPage","setRowsPerPage","searchText","setSearchText","searchForBoard","dummyBoards","localStorage","getItem","JSON","parse","org","push","length","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","desc","a","b","stableSort","array","cmp","stabilizedThis","map","el","index","sort","getSorting","handleRequestSort","property","isAsc","console","log","createSortHandler","generateBoardRows","slice","board","cursor","title","numSquares","created","format","modified","width","styles","container","pageTitle","padding","display","wideRoundInput","maxWidth","e","wideRoundBtn","wideRoundBtnText","headCell","position","bottom","right","height","flexDirection","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport moment from 'moment';\n\n// context imports\n\n// Style imports\nimport { MASTER, COLORS } from '../../styles/masterStyles';\n\n// component imports\nimport Link from 'next/link';\nimport Layout from '../../components/Layout';\n\n// Material UI\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\n// context imports\nimport { OrgContext } from '../../contexts/orgContext';\nimport { ManageBoardsContext } from '../../contexts/manageBoardsContext';\nimport { UserContext } from '../../contexts/userContext';\nimport { SUPPORTS_PERFORMANCE_USER_TIMING } from '../../node_modules/next/dist/next-server/lib/utils';\n\nconst ManageBoardsHome = (props) => {\n\n    const headCells = [\n        { id: 'name', numeric: false, disablePadding: false, label: 'NAME' },\n        { id: 'tasks', numeric: false, disablePadding: false, label: 'TASKS' },\n        { id: 'created', numeric: false, disablePadding: false, label: 'CREATED' },\n        { id: 'modified', numeric: false, disablePadding: false, label: 'LAST MODIFIED' },\n      ];\n\n    const router = useRouter();\n\n    const { contextOrg, getOrg } = useContext(OrgContext);\n    const { newBoard } = useContext(ManageBoardsContext);\n    const { user, storeUser, logout } = useContext(UserContext);\n    const [boards, setBoards] = useState(contextOrg.boards || []);\n\n    // table state\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('name');\n    const [rows, setRows] = useState(boards);\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const [searchText, setSearchText] = useState('');\n  \n\n  const searchForBoard = () => {\n    setSearchText('');\n    setBoards(dummyBoards)\n  }\n\n  useEffect(() => {\n    if(!user){\n        if(localStorage.getItem('bingo_user')){\n            storeUser(JSON.parse(localStorage.getItem('bingo_user')));\n        } else {\n            logout();\n        }\n    }\n    if(!contextOrg.id && user && !user.org){\n        router.push('/joinGame');\n    }else if(!contextOrg.id && user && user.org){\n        getOrg(user.org);\n    }\n    if(contextOrg && contextOrg.boards && contextOrg.boards.length !== boards.length){\n        setBoards(contextOrg.boards);\n    }\n  }, [contextOrg, user]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  function desc(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n  \n  function stableSort(array, cmp) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = cmp(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n  }\n  \n  function getSorting(order, orderBy) {\n    return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n  }\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    console.log({isAsc})\n    console.log({property})\n  };\n\n  const createSortHandler = property => event => {\n    handleRequestSort(event, property);\n  };\n\n  const generateBoardRows = () => {\n\t\tif(rows.length){\n            return stableSort(rows, getSorting(order, orderBy))\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map((board, index) => {\n\t\t\t\treturn (\n                    <Link key={board.id} href={`manageBoards/[boardID]`} as={`manageBoards/${board.id}`}>\n                        <TableRow style={{ cursor: 'pointer' }}>\n                            <TableCell>{board.title}</TableCell>\n                            <TableCell>{board.numSquares}</TableCell>\n                            <TableCell>{moment(board.created).format(\"MMM Do, YYYY\")}</TableCell>\n                            <TableCell>{moment(board.modified).format(\"MMM Do, YYYY\")}</TableCell>\n                        </TableRow>\n                    </Link>\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\t\treturn <TableRow style={{width: '100%'}}><TableCell>No boards yet... click NEW BOARD to make one!</TableCell><TableCell></TableCell><TableCell></TableCell><TableCell></TableCell></TableRow>\n  }\n\n  return (\n      <Layout>\n        <div style={styles.container}>\n            <div style={MASTER.pageTitle}>MANAGE BOARDS</div>\n            <Paper>\n                <div style={{ padding: '1% 3%' }}>\n                    <div style={{ display: 'flex' }}>\n                        <input \n                            style={{ ...MASTER.wideRoundInput, maxWidth: 300 }} \n                            value={searchText} \n                            onChange={(e) => setSearchText(e.target.value)} \n                            placeholder={'Search by name or access code '}\n                        />\n                        <button \n                            style={{ ...MASTER.wideRoundBtn, width: 100 }} \n                            onClick={() => searchForBoard()}\n                        >\n                            <div style={MASTER.wideRoundBtnText}>SEARCH</div>\n                        </button>\n                    </div>\n                    <Table style={{ width:\"100%\" }}>\n                        <TableHead>\n                            <TableRow>\n                                {headCells.map(headCell => (\n                                    <TableCell\n                                        key={headCell.id}\n                                        align={headCell.numeric ? 'right' : 'left'}\n                                        padding={headCell.disablePadding ? 'none' : 'default'}\n                                        sortDirection={orderBy === headCell.id ? order : false}\n                                    >\n                                        <TableSortLabel\n                                            active={orderBy === headCell.id}\n                                            direction={orderBy === headCell.id ? order : 'asc'}\n                                            onClick={createSortHandler(headCell.id)}\n                                        >\n                                        {headCell.label}\n                                        {/* {orderBy === headCell.id ? (\n                                            <span>\n                                            {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                            </span>\n                                        ) : null} */}\n                                        </TableSortLabel>\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {generateBoardRows()}\n                        </TableBody>\n                    </Table>\n                    <TablePagination\n                        rowsPerPageOptions={[5, 10, 20, 40, 60]}\n                        component=\"div\"\n                        count={rows.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onChangePage={handleChangePage}\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                    />\n                </div>\n            </Paper>\n            <button \n                style={{ ...MASTER.wideRoundBtn, width: 150, position: 'absolute', bottom: 30, right: 20, height: 45 }} \n                onClick={() => newBoard(contextOrg.id)}\n            >\n                <div style={MASTER.wideRoundBtnText}>NEW BOARD</div>\n            </button>\n        </div>\n    </Layout>\n  );\n}\n  \nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#fff',\n  },\n};\n\nexport default ManageBoardsHome;"]},"metadata":{},"sourceType":"module"}