{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/contexts/orgContext.js\";\nvar __jsx = React.createElement;\nimport React, { createContext, useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport FULL_URL from '../constants/constants';\nexport const OrgContext = createContext();\n\nconst OrgContextProvider = props => {\n  const {\n    0: org,\n    1: setOrg\n  } = useState({});\n  const {\n    0: users,\n    1: setUsers\n  } = useState([]);\n  const {\n    0: boards,\n    1: setBoards\n  } = useState([]);\n  const {\n    0: stuffToSave,\n    1: setStuffToSave\n  } = useState(false);\n\n  const getOrg = async orgID => {\n    console.log('in get org', orgID);\n\n    try {\n      const request = await fetch(`${FULL_URL}/orgs/${orgID}`, {\n        method: 'POST' // headers: {\n        //   'Accept': 'application/json',\n        //   'Content-Type': 'application/json',\n        //   'Authorization': `Bearer ${localStorage.getItem('bingo_token')}`\n        // },\n\n      });\n      const org = await request.json();\n      console.log('GOT ORG', org);\n      setUsers(org.userList);\n      setBoards(org.boards);\n      setOrg(org);\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const saveOrg = async orgToSave => {\n    console.log('in save org', orgToSave);\n\n    try {\n      const request = await fetch(`${FULL_URL}/orgs/update/${orgToSave.id}`, {\n        method: 'POST',\n        // headers: {\n        //   'Accept': 'application/json',\n        //   'Content-Type': 'application/json',\n        //   'Authorization': `Bearer ${localStorage.getItem('bingo_token')}`\n        // },\n        body: _JSON$stringify(orgToSave)\n      });\n      const org = await request.json();\n      setOrg(org);\n      setStuffToSave(false);\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  return __jsx(OrgContext.Provider, {\n    value: {\n      contextOrg: org,\n      updateOrg: setOrg,\n      getOrg: getOrg,\n      saveOrg,\n      setStuffToSave,\n      stuffToSave\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default OrgContextProvider;","map":{"version":3,"sources":["/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/contexts/orgContext.js"],"names":["React","createContext","useState","useEffect","fetch","FULL_URL","OrgContext","OrgContextProvider","props","org","setOrg","users","setUsers","boards","setBoards","stuffToSave","setStuffToSave","getOrg","orgID","console","log","request","method","json","userList","err","alert","saveOrg","orgToSave","id","body","contextOrg","updateOrg","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,OAAO,MAAMC,UAAU,GAAGL,aAAa,EAAhC;;AAEP,MAAMM,kBAAkB,GAAIC,KAAD,IAAW;AAClC,QAAM;AAAA,OAAEC,GAAF;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACS,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACW,MAAD;AAAA,OAASC;AAAT,MAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAAEa,WAAF;AAAA,OAAeC;AAAf,MAAkCd,QAAQ,CAAC,KAAD,CAAhD;;AAGA,QAAMe,MAAM,GAAG,MAAOC,KAAP,IAAiB;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;;AACA,QAAI;AACA,YAAMG,OAAO,GAAG,MAAMjB,KAAK,CAAE,GAAEC,QAAS,SAAQa,KAAM,EAA3B,EAA8B;AACrDI,QAAAA,MAAM,EAAE,MAD6C,CAErD;AACA;AACA;AACA;AACA;;AANqD,OAA9B,CAA3B;AAQE,YAAMb,GAAG,GAAG,MAAMY,OAAO,CAACE,IAAR,EAAlB;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBX,GAAvB;AACAG,MAAAA,QAAQ,CAACH,GAAG,CAACe,QAAL,CAAR;AACAV,MAAAA,SAAS,CAACL,GAAG,CAACI,MAAL,CAAT;AACAH,MAAAA,MAAM,CAACD,GAAD,CAAN;AACD,KAdL,CAcM,OAAMgB,GAAN,EAAW;AAACC,MAAAA,KAAK,CAACD,GAAD,CAAL;AAAW;AAChC,GAjBD;;AAmBA,QAAME,OAAO,GAAG,MAAOC,SAAP,IAAqB;AACjCT,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BQ,SAA3B;;AACA,QAAI;AACA,YAAMP,OAAO,GAAG,MAAMjB,KAAK,CAAE,GAAEC,QAAS,gBAAeuB,SAAS,CAACC,EAAG,EAAzC,EAA4C;AACnEP,QAAAA,MAAM,EAAE,MAD2D;AAEnE;AACA;AACA;AACA;AACA;AACAQ,QAAAA,IAAI,EAAE,gBAAeF,SAAf;AAP6D,OAA5C,CAA3B;AASE,YAAMnB,GAAG,GAAG,MAAMY,OAAO,CAACE,IAAR,EAAlB;AACAb,MAAAA,MAAM,CAACD,GAAD,CAAN;AACAO,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD,KAbL,CAaM,OAAMS,GAAN,EAAW;AAACC,MAAAA,KAAK,CAACD,GAAD,CAAL;AAAW;AAChC,GAhBD;;AAkBA,SACI,MAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AACxBM,MAAAA,UAAU,EAAEtB,GADY;AAExBuB,MAAAA,SAAS,EAAEtB,MAFa;AAGxBO,MAAAA,MAAM,EAAEA,MAHgB;AAIxBU,MAAAA,OAJwB;AAKxBX,MAAAA,cALwB;AAMxBD,MAAAA;AANwB,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKP,KAAK,CAACyB,QARX,CADJ;AAYH,CAxDD;;AA0DA,eAAe1B,kBAAf","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport FULL_URL from '../constants/constants';\n\nexport const OrgContext = createContext();\n\nconst OrgContextProvider = (props) => {\n    const [ org, setOrg ] = useState({});\n    const [users, setUsers] = useState([]);\n    const [boards, setBoards] = useState([]);\n    const [ stuffToSave, setStuffToSave ] = useState(false);\n\n\n    const getOrg = async (orgID) => {\n        console.log('in get org', orgID)\n        try {\n            const request = await fetch(`${FULL_URL}/orgs/${orgID}`, {\n                method: 'POST',\n                // headers: {\n                //   'Accept': 'application/json',\n                //   'Content-Type': 'application/json',\n                //   'Authorization': `Bearer ${localStorage.getItem('bingo_token')}`\n                // },\n              })\n              const org = await request.json();\n              console.log('GOT ORG', org)\n              setUsers(org.userList);\n              setBoards(org.boards);\n              setOrg(org);\n            } catch(err) {alert(err)}\n    }\n\n    const saveOrg = async (orgToSave) => {\n        console.log('in save org', orgToSave)\n        try {\n            const request = await fetch(`${FULL_URL}/orgs/update/${orgToSave.id}`, {\n                method: 'POST',\n                // headers: {\n                //   'Accept': 'application/json',\n                //   'Content-Type': 'application/json',\n                //   'Authorization': `Bearer ${localStorage.getItem('bingo_token')}`\n                // },\n                body: JSON.stringify(orgToSave),\n              })\n              const org = await request.json();\n              setOrg(org);\n              setStuffToSave(false);\n            } catch(err) {alert(err)}\n    }\n\n    return (\n        <OrgContext.Provider value={{ \n            contextOrg: org, \n            updateOrg: setOrg, \n            getOrg: getOrg, \n            saveOrg, \n            setStuffToSave,\n            stuffToSave,\n        }}>\n            {props.children}\n        </OrgContext.Provider>\n    )\n}\n\nexport default OrgContextProvider;"]},"metadata":{},"sourceType":"module"}