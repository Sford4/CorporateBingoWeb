{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/components/orgAndUsers/usersDetails.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport moment from 'moment'; // context imports\n// Style imports\n\nimport { MASTER, COLORS } from '../../styles/masterStyles'; // component imports\n\nimport EditUser from './editUser'; // Material UI\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close'; // context imports\n\nimport { OrgContext } from '../../contexts/orgContext';\nimport { UserContext } from '../../contexts/userContext';\n\nconst materialStyles = theme => ({\n  root: {\n    margin: 0,\n    padding: 20,\n    fontSize: 32,\n    color: COLORS.primary\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(materialStyles)(props => {\n  const {\n    children,\n    classes,\n    onClose\n  } = props;\n  return __jsx(MuiDialogTitle, {\n    disableTypography: true,\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, children), __jsx(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })));\n});\n\nconst UsersDetails = props => {\n  const {\n    contextOrg,\n    getOrg,\n    contextOrgUsers,\n    contextSetUsers\n  } = useContext(OrgContext);\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    0: searchText,\n    1: setSearchText\n  } = useState('');\n  const {\n    0: users,\n    1: setUsers\n  } = useState(contextOrgUsers || []);\n  const {\n    0: userToEdit,\n    1: setUserToEdit\n  } = useState(false);\n  const {\n    0: newUser,\n    1: setNewUser\n  } = useState(false);\n\n  const openUserPopup = (user, isNew) => {\n    setNewUser(isNew);\n    setUserToEdit(user);\n  };\n\n  const searchForBoard = () => {\n    setSearchText('');\n    setUsers(dummyBoards);\n  };\n\n  const updateUsers = (type, user) => {\n    if (type === 'delete') {\n      console.log(user);\n      contextSetUsers(users.filter(oldUser => oldUser.id !== user));\n    } else if (type === 'new') {\n      const users = contextOrgUsers;\n      users.push(user);\n      contextSetUsers(users);\n    } else if (type === 'edit') {\n      console.log('updating user', user);\n      let usersToSave = contextOrgUsers.map(oldUser => {\n        if (oldUser.id === user.id) {\n          return user;\n        }\n\n        return oldUser;\n      });\n      contextSetUsers(usersToSave);\n    }\n  };\n\n  useEffect(() => {\n    if (!contextOrg.id && user && user.org) {\n      getOrg(user.org);\n    }\n\n    if (contextOrg && contextOrg.id && contextOrgUsers) {\n      console.log('users after update', contextOrgUsers);\n      setUsers(contextOrgUsers);\n    }\n  }, [contextOrg, contextOrgUsers, user]);\n\n  const generateBoardRows = () => {\n    if (users.length) {\n      return users.map((user, index) => {\n        return __jsx(TableRow, {\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: () => setUserToEdit(user, false),\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, __jsx(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, user.userAlias), __jsx(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, user.email), __jsx(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, moment(user.modified).format(\"MMM Do, YYYY\")));\n      });\n    }\n\n    return __jsx(TableRow, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"No users yet... click NEW USER to make one!\"), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }));\n  };\n\n  return __jsx(\"div\", {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: MASTER.pageTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Admins for \", contextOrg.orgName, \" (click to edit)\"), __jsx(Table, {\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, __jsx(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, __jsx(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"USER NAME\"), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"EMAIL\"), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"MODIFIED\"))), __jsx(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, generateBoardRows())), __jsx(\"button\", {\n    style: _objectSpread({}, MASTER.wideRoundBtn, {\n      width: 150,\n      position: 'absolute',\n      bottom: 30,\n      right: 20,\n      height: 45\n    }),\n    onClick: () => openUserPopup(true, true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: MASTER.wideRoundBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"NEW USER\")), __jsx(Dialog, {\n    open: !!userToEdit,\n    onBackdropClick: () => openUserPopup(false, false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, __jsx(DialogTitle, {\n    onClose: () => openUserPopup(false, false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, newUser ? 'New User' : `Editing User: ${userToEdit && userToEdit.userAlias}`), __jsx(EditUser, {\n    user: userToEdit,\n    openPopup: openUserPopup,\n    newUser: newUser,\n    org: contextOrg,\n    updateUsers: updateUsers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  })));\n};\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#fff',\n    width: '100%',\n    padding: 20\n  }\n};\nexport default UsersDetails;","map":{"version":3,"sources":["/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/components/orgAndUsers/usersDetails.js"],"names":["React","useState","useEffect","useContext","moment","MASTER","COLORS","EditUser","Table","TableBody","TableCell","TableHead","TableRow","withStyles","Dialog","MuiDialogActions","MuiDialogTitle","Typography","IconButton","CloseIcon","OrgContext","UserContext","materialStyles","theme","root","margin","padding","fontSize","color","primary","closeButton","position","right","spacing","top","palette","grey","DialogTitle","props","children","classes","onClose","UsersDetails","contextOrg","getOrg","contextOrgUsers","contextSetUsers","user","searchText","setSearchText","users","setUsers","userToEdit","setUserToEdit","newUser","setNewUser","openUserPopup","isNew","searchForBoard","dummyBoards","updateUsers","type","console","log","filter","oldUser","id","push","usersToSave","map","org","generateBoardRows","length","index","cursor","userAlias","email","modified","format","width","styles","container","pageTitle","orgName","wideRoundBtn","bottom","height","wideRoundBtnText","display","flexDirection","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;AAEA;;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,2BAA/B,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,WAAT,QAA4B,4BAA5B;;AAEE,MAAMC,cAAc,GAAGC,KAAK,KAAK;AAC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,CADJ;AAEJC,IAAAA,OAAO,EAAE,EAFL;AAGJC,IAAAA,QAAQ,EAAE,EAHN;AAIJC,IAAAA,KAAK,EAAEtB,MAAM,CAACuB;AAJV,GADyB;AAO/BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,QAAQ,EAAE,UADC;AAEXC,IAAAA,KAAK,EAAET,KAAK,CAACU,OAAN,CAAc,CAAd,CAFI;AAGXC,IAAAA,GAAG,EAAEX,KAAK,CAACU,OAAN,CAAc,CAAd,CAHM;AAIXL,IAAAA,KAAK,EAAEL,KAAK,CAACY,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AAJI;AAPkB,CAAL,CAA5B;;AAeA,MAAMC,WAAW,GAAGxB,UAAU,CAACS,cAAD,CAAV,CAA2BgB,KAAK,IAAI;AACtD,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA;AAArB,MAAiCH,KAAvC;AACA,SACE,MAAC,cAAD;AAAgB,IAAA,iBAAiB,MAAjC;AAAkC,IAAA,SAAS,EAAEE,OAAO,CAAChB,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0Be,QAA1B,CADF,EAEI,MAAC,UAAD;AAAY,kBAAW,OAAvB;AAA+B,IAAA,SAAS,EAAEC,OAAO,CAACV,WAAlD;AAA+D,IAAA,OAAO,EAAEW,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CADF;AAQD,CAVmB,CAApB;;AAYF,MAAMC,YAAY,GAAIJ,KAAD,IAAW;AAE5B,QAAM;AAAEK,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,eAAtB;AAAuCC,IAAAA;AAAvC,MAA4D3C,UAAU,CAACiB,UAAD,CAA5E;AACA,QAAM;AAAE2B,IAAAA;AAAF,MAAY5C,UAAU,CAACkB,WAAD,CAA5B;AAEF,QAAM;AAAA,OAAC2B,UAAD;AAAA,OAAaC;AAAb,MAA8BhD,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAA,OAACiD,KAAD;AAAA,OAAQC;AAAR,MAAoBlD,QAAQ,CAAC4C,eAAe,IAAI,EAApB,CAAlC;AACA,QAAM;AAAA,OAACO,UAAD;AAAA,OAAaC;AAAb,MAA8BpD,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAA,OAACqD,OAAD;AAAA,OAAUC;AAAV,MAAwBtD,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMuD,aAAa,GAAG,CAACT,IAAD,EAAOU,KAAP,KAAiB;AACnCF,IAAAA,UAAU,CAACE,KAAD,CAAV;AACAJ,IAAAA,aAAa,CAACN,IAAD,CAAb;AACH,GAHD;;AAKA,QAAMW,cAAc,GAAG,MAAM;AAC3BT,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,QAAQ,CAACQ,WAAD,CAAR;AACD,GAHD;;AAKA,QAAMC,WAAW,GAAG,CAACC,IAAD,EAAOd,IAAP,KAAgB;AAClC,QAAGc,IAAI,KAAK,QAAZ,EAAqB;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAZ;AACAD,MAAAA,eAAe,CAACI,KAAK,CAACc,MAAN,CAAaC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAenB,IAAvC,CAAD,CAAf;AACH,KAHD,MAGO,IAAGc,IAAI,KAAK,KAAZ,EAAkB;AACrB,YAAMX,KAAK,GAAGL,eAAd;AACAK,MAAAA,KAAK,CAACiB,IAAN,CAAWpB,IAAX;AACAD,MAAAA,eAAe,CAACI,KAAD,CAAf;AACH,KAJM,MAIA,IAAGW,IAAI,KAAK,MAAZ,EAAmB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BhB,IAA7B;AACA,UAAIqB,WAAW,GAAGvB,eAAe,CAACwB,GAAhB,CAAoBJ,OAAO,IAAI;AAC7C,YAAGA,OAAO,CAACC,EAAR,KAAenB,IAAI,CAACmB,EAAvB,EAA0B;AACtB,iBAAOnB,IAAP;AACH;;AACD,eAAOkB,OAAP;AACH,OALiB,CAAlB;AAMAnB,MAAAA,eAAe,CAACsB,WAAD,CAAf;AACH;AACF,GAlBD;;AAoBAlE,EAAAA,SAAS,CAAC,MAAM;AACd,QAAG,CAACyC,UAAU,CAACuB,EAAZ,IAAkBnB,IAAlB,IAA0BA,IAAI,CAACuB,GAAlC,EAAsC;AAClC1B,MAAAA,MAAM,CAACG,IAAI,CAACuB,GAAN,CAAN;AACH;;AACD,QAAG3B,UAAU,IAAIA,UAAU,CAACuB,EAAzB,IAA+BrB,eAAlC,EAAkD;AAC9CiB,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkClB,eAAlC;AACAM,MAAAA,QAAQ,CAACN,eAAD,CAAR;AACH;AACF,GARQ,EAQN,CAACF,UAAD,EAAaE,eAAb,EAA8BE,IAA9B,CARM,CAAT;;AAUA,QAAMwB,iBAAiB,GAAG,MAAM;AAChC,QAAGrB,KAAK,CAACsB,MAAT,EAAgB;AACf,aAAOtB,KAAK,CAACmB,GAAN,CAAU,CAACtB,IAAD,EAAO0B,KAAP,KAAiB;AACjC,eACgB,MAAC,QAAD;AAAU,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAAjB;AAAwC,UAAA,OAAO,EAAE,MAAMrB,aAAa,CAACN,IAAD,EAAO,KAAP,CAApE;AAAmF,UAAA,GAAG,EAAE0B,KAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAY1B,IAAI,CAAC4B,SAAjB,CADJ,EAEI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAY5B,IAAI,CAAC6B,KAAjB,CAFJ,EAGI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAYxE,MAAM,CAAC2C,IAAI,CAAC8B,QAAN,CAAN,CAAsBC,MAAtB,CAA6B,cAA7B,CAAZ,CAHJ,CADhB;AAOA,OARM,CAAP;AASA;;AACD,WAAO,MAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAAlC,EAAoG,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApG,EAA2H,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3H,EAAkJ,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlJ,CAAP;AACC,GAbD;;AAeA,SACM;AAAK,IAAA,KAAK,EAAEC,MAAM,CAACC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAE5E,MAAM,CAAC6E,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA0CvC,UAAU,CAACwC,OAArD,qBADJ,EAQI,MAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEJ,MAAAA,KAAK,EAAC;AAAR,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,EAGI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CADJ,CADJ,EAQI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,iBAAiB,EADtB,CARJ,CARJ,EAoBI;AACI,IAAA,KAAK,oBAAOlE,MAAM,CAAC+E,YAAd;AAA4BL,MAAAA,KAAK,EAAE,GAAnC;AAAwChD,MAAAA,QAAQ,EAAE,UAAlD;AAA8DsD,MAAAA,MAAM,EAAE,EAAtE;AAA0ErD,MAAAA,KAAK,EAAE,EAAjF;AAAqFsD,MAAAA,MAAM,EAAE;AAA7F,MADT;AAEI,IAAA,OAAO,EAAE,MAAM9B,aAAa,CAAC,IAAD,EAAO,IAAP,CAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AAAK,IAAA,KAAK,EAAEnD,MAAM,CAACkF,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CApBJ,EA0BI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,CAAC,CAACnC,UAAhB;AAA4B,IAAA,eAAe,EAAE,MAAMI,aAAa,CAAC,KAAD,EAAQ,KAAR,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAa,IAAA,OAAO,EAAE,MAAMA,aAAa,CAAC,KAAD,EAAQ,KAAR,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,OAAO,GAAG,UAAH,GAAiB,iBAAgBF,UAAU,IAAIA,UAAU,CAACuB,SAAU,EADhF,CADJ,EAII,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEvB,UAAhB;AAA4B,IAAA,SAAS,EAAEI,aAAvC;AAAsD,IAAA,OAAO,EAAEF,OAA/D;AAAwE,IAAA,GAAG,EAAEX,UAA7E;AAAyF,IAAA,WAAW,EAAEiB,WAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CA1BJ,CADN;AAmCD,CApGD;;AAsGA,MAAMoB,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE;AACTO,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,aAAa,EAAE,QAFN;AAGTC,IAAAA,eAAe,EAAE,MAHR;AAITX,IAAAA,KAAK,EAAE,MAJE;AAKTrD,IAAAA,OAAO,EAAE;AALA;AADE,CAAf;AAUA,eAAegB,YAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport moment from 'moment';\n\n// context imports\n\n// Style imports\nimport { MASTER, COLORS } from '../../styles/masterStyles';\n\n// component imports\nimport EditUser from './editUser';\n\n// Material UI\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\n// context imports\nimport { OrgContext } from '../../contexts/orgContext';\nimport { UserContext } from '../../contexts/userContext';\n  \n  const materialStyles = theme => ({\n    root: {\n      margin: 0,\n      padding: 20,\n      fontSize: 32,\n      color: COLORS.primary,\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n  });\n  \n  const DialogTitle = withStyles(materialStyles)(props => {\n    const { children, classes, onClose } = props;\n    return (\n      <MuiDialogTitle disableTypography className={classes.root}>\n        <Typography variant=\"h6\">{children}</Typography>\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n      </MuiDialogTitle>\n    );\n  });\n\nconst UsersDetails = (props) => {\n\n    const { contextOrg, getOrg, contextOrgUsers, contextSetUsers, } = useContext(OrgContext);\n    const { user, } = useContext(UserContext);\n\n  const [searchText, setSearchText] = useState('');\n  const [users, setUsers] = useState(contextOrgUsers || []);\n  const [userToEdit, setUserToEdit] = useState(false);\n  const [newUser, setNewUser] = useState(false);\n\n  const openUserPopup = (user, isNew) => {\n      setNewUser(isNew);\n      setUserToEdit(user)\n  }\n\n  const searchForBoard = () => {\n    setSearchText('');\n    setUsers(dummyBoards)\n  }\n\n  const updateUsers = (type, user) => {\n    if(type === 'delete'){\n        console.log(user)\n        contextSetUsers(users.filter(oldUser => oldUser.id !== user))\n    } else if(type === 'new'){\n        const users = contextOrgUsers;\n        users.push(user);\n        contextSetUsers(users);\n    } else if(type === 'edit'){\n        console.log('updating user', user)\n        let usersToSave = contextOrgUsers.map(oldUser => {\n            if(oldUser.id === user.id){\n                return user;\n            } \n            return oldUser;\n        })\n        contextSetUsers(usersToSave);\n    }\n  }\n\n  useEffect(() => {\n    if(!contextOrg.id && user && user.org){\n        getOrg(user.org);\n    }\n    if(contextOrg && contextOrg.id && contextOrgUsers){\n        console.log('users after update', contextOrgUsers)\n        setUsers(contextOrgUsers);\n    }\n  }, [contextOrg, contextOrgUsers, user])\n\n  const generateBoardRows = () => {\n\t\tif(users.length){\n\t\t\treturn users.map((user, index) => {\n\t\t\t\treturn (\n                    <TableRow style={{ cursor: 'pointer' }} onClick={() => setUserToEdit(user, false)} key={index}>\n                        <TableCell>{user.userAlias}</TableCell>\n                        <TableCell>{user.email}</TableCell>\n                        <TableCell>{moment(user.modified).format(\"MMM Do, YYYY\")}</TableCell>\n                    </TableRow>\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\t\treturn <TableRow style={{width: '100%'}}><TableCell>No users yet... click NEW USER to make one!</TableCell><TableCell></TableCell><TableCell></TableCell><TableCell></TableCell></TableRow>\n  }\n\n  return (\n        <div style={styles.container}>\n            <div style={MASTER.pageTitle}>Admins for {contextOrg.orgName} (click to edit)</div>\n            {/* <input \n                style={{ ...MASTER.wideRoundInput, maxWidth: 300 }} \n                value={searchText} \n                onChange={(e) => setSearchText(e.target.value)} \n                placeholder={'Search by user name or email'}\n            /> */}\n            <Table style={{ width:\"100%\" }}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>USER NAME</TableCell>\n                        <TableCell>EMAIL</TableCell>\n                        <TableCell>MODIFIED</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {generateBoardRows()}\n                </TableBody>\n            </Table>\n            <button \n                style={{ ...MASTER.wideRoundBtn, width: 150, position: 'absolute', bottom: 30, right: 20, height: 45 }} \n                onClick={() => openUserPopup(true, true)}\n            >\n                <div style={MASTER.wideRoundBtnText}>NEW USER</div>\n            </button>\n            <Dialog open={!!userToEdit} onBackdropClick={() => openUserPopup(false, false)}>\n                <DialogTitle onClose={() => openUserPopup(false, false)}>\n                    {newUser ? 'New User' : `Editing User: ${userToEdit && userToEdit.userAlias}`}\n                </DialogTitle>\n                <EditUser user={userToEdit} openPopup={openUserPopup} newUser={newUser} org={contextOrg} updateUsers={updateUsers} />\n            </Dialog>\n        </div>\n  );\n}\n  \nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#fff',\n    width: '100%',\n    padding: 20,\n  },\n};\n\nexport default UsersDetails;"]},"metadata":{},"sourceType":"module"}