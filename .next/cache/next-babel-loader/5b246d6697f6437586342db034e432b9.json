{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/pages/playGame/[findID]/[userID]/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useRouter } from 'next/router'; // context imports\n\nimport { PlayContext } from '../../../../contexts/playContext'; // Style imports\n\nimport { MASTER, COLORS } from '../../../../styles/masterStyles'; // Component imports\n\nimport Layout from '../../../../components/Layout';\nimport PlayBoard from '../../../../components/Play/PlayBoard';\nimport RewardDetail from '../../../../components/Play/RewardDetail'; // Material ui\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nvar DialogActions = withStyles(function (theme) {\n  return {\n    root: {\n      margin: 0,\n      padding: theme.spacing(1),\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  };\n})(MuiDialogActions);\n\nvar materialStyles = function materialStyles(theme) {\n  return {\n    root: {\n      margin: 0,\n      padding: theme.spacing(2),\n      fontSize: 32,\n      color: COLORS.primary\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500]\n    }\n  };\n};\n\nvar DialogTitle = withStyles(materialStyles)(function (props) {\n  var children = props.children,\n      classes = props.classes,\n      onClose = props.onClose;\n  return __jsx(MuiDialogTitle, {\n    disableTypography: true,\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, children), __jsx(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })));\n});\n\nvar PlayHome = function PlayHome(props) {\n  // const router = useRouter();\n  // const findID = router.query;\n  var _useContext = useContext(PlayContext),\n      getGame = _useContext.getGame,\n      contextGame = _useContext.contextGame;\n\n  var _useState = useState(contextGame),\n      game = _useState[0],\n      setGame = _useState[1];\n\n  var _useState2 = useState(false),\n      rewardDialogOpen = _useState2[0],\n      setRewardDialogOpen = _useState2[1];\n\n  var _useState3 = useState({}),\n      reward = _useState3[0],\n      setReward = _useState3[1];\n\n  useEffect(function () {\n    if (!contextGame._id) {\n      console.log(props.findID);\n      getGame(props.findID, props.userID);\n    } else {\n      setGame(contextGame);\n    }\n  }, [contextGame]);\n\n  var updateGame = function updateGame(game) {};\n\n  var openToRewardDetailPopup = function openToRewardDetailPopup(reward) {\n    setRewardDialogOpen(true);\n    setReward(reward);\n  };\n\n  var generateWholeBoardRewardIcon = function generateWholeBoardRewardIcon(reward) {\n    return __jsx(\"img\", {\n      alt: \"Whole board completion reward\",\n      onClick: function onClick() {\n        return openToRewardDetailPopup(reward);\n      },\n      style: {\n        width: '10vw',\n        height: '10vw',\n        maxHeight: 200,\n        maxWidth: 200,\n        cursor: 'pointer'\n      },\n      src: reward.earned ? '../../../static/gift_green.png' : '../../../static/gift_gray.png',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    });\n  };\n\n  if (game && game._id) {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: MASTER.pageTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Playing \", game.title), __jsx(\"div\", {\n      style: {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Created by \", game.org.name), __jsx(\"div\", {\n      style: {\n        marginBottom: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Organized by \", game.organizer.name)), game.rewards.length && game.rewards[game.rewards.length - 1].position.includes('wholeBoard') && game.rewards[game.rewards.length - 1].title ? generateWholeBoardRewardIcon(game.rewards[game.rewards.length - 1]) : null, __jsx(PlayBoard, {\n      board: game,\n      navigation: props.navigation,\n      size: \"size\".concat(game.numSquares),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), __jsx(Dialog, {\n      open: rewardDialogOpen,\n      onBackdropClick: function onBackdropClick() {\n        return setRewardDialogOpen(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, __jsx(DialogTitle, {\n      onClose: function onClose() {\n        return setRewardDialogOpen(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"REWARD\"), __jsx(RewardDetail, {\n      reward: reward,\n      openPopup: setRewardDialogOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })));\n  }\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"NO GAME\"));\n};\n\nPlayHome.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var query;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref.query;\n            return _context.abrupt(\"return\", {\n              findID: query.findID,\n              userID: query.userID\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar styles = {\n  container: _defineProperty({\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    backgroundColor: '#fff',\n    alignItems: 'center'\n  }, \"justifyContent\", 'center')\n};\nexport default PlayHome;","map":{"version":3,"sources":["/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/pages/playGame/[findID]/[userID]/index.js"],"names":["React","useState","useEffect","useContext","useRouter","PlayContext","MASTER","COLORS","Layout","PlayBoard","RewardDetail","withStyles","Dialog","MuiDialogActions","MuiDialogTitle","Typography","IconButton","CloseIcon","DialogActions","theme","root","margin","padding","spacing","display","justifyContent","alignItems","materialStyles","fontSize","color","primary","closeButton","position","right","top","palette","grey","DialogTitle","props","children","classes","onClose","PlayHome","getGame","contextGame","game","setGame","rewardDialogOpen","setRewardDialogOpen","reward","setReward","_id","console","log","findID","userID","updateGame","openToRewardDetailPopup","generateWholeBoardRewardIcon","width","height","maxHeight","maxWidth","cursor","earned","styles","container","pageTitle","title","org","name","marginBottom","organizer","rewards","length","includes","navigation","numSquares","getInitialProps","query","flexDirection","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useRouter } from 'next/router';\n\n// context imports\nimport { PlayContext } from '../../../../contexts/playContext';\n\n// Style imports\nimport { MASTER, COLORS } from '../../../../styles/masterStyles';\n\n// Component imports\nimport Layout from '../../../../components/Layout';\nimport PlayBoard from '../../../../components/Play/PlayBoard';\nimport RewardDetail from '../../../../components/Play/RewardDetail';\n\n// Material ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}))(MuiDialogActions);\n\nconst materialStyles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n    fontSize: 32,\n    color: COLORS.primary,\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(materialStyles)(props => {\n  const { children, classes, onClose } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root}>\n      <Typography variant=\"h6\">{children}</Typography>\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n    </MuiDialogTitle>\n  );\n});\n\n\n\n\nconst PlayHome = (props) => { \n  // const router = useRouter();\n  // const findID = router.query;\n\n  const { getGame, contextGame } = useContext(PlayContext);\n\n  const [game, setGame] = useState(contextGame);\n  const [rewardDialogOpen, setRewardDialogOpen] = useState(false);\n  const [reward, setReward] = useState({});\n\n  useEffect(() => {\n    if(!contextGame._id){\n      console.log(props.findID)\n        getGame(props.findID, props.userID);\n    } else {\n        setGame(contextGame);\n    }\n}, [contextGame]);\n\nconst updateGame = game => {\n\n}\n  \n  const openToRewardDetailPopup = (reward) => {\n    setRewardDialogOpen(true);\n    setReward(reward);\n  }\n\n  const generateWholeBoardRewardIcon = (reward) => {\n      return (\n          <img \n            alt=\"Whole board completion reward\" \n            onClick={() => openToRewardDetailPopup(reward)} \n            style={{width: '10vw', height: '10vw', maxHeight: 200, maxWidth: 200, cursor: 'pointer', }} \n            src={reward.earned ? '../../../static/gift_green.png' : '../../../static/gift_gray.png'} \n          />\n      );\n  }\n\n  if(game && game._id){\n    return (\n      <Layout>\n        <div style={styles.container}>\n          <div style={{width: '100%'}}> \n            <div style={MASTER.pageTitle}>Playing {game.title}</div>\n            <div style={{  }}>Created by {game.org.name}</div>\n            <div style={{ marginBottom: 20 }}>Organized by {game.organizer.name}</div>\n          </div>\n          {game.rewards.length && game.rewards[game.rewards.length - 1].position.includes('wholeBoard') && game.rewards[game.rewards.length - 1].title ? generateWholeBoardRewardIcon(game.rewards[game.rewards.length - 1]) : null}\n          <PlayBoard \n            board={game}\n            navigation={props.navigation}\n            size={`size${game.numSquares}`}\n          />\n        </div>\n        <Dialog open={rewardDialogOpen} onBackdropClick={() => setRewardDialogOpen(false)}>\n          <DialogTitle onClose={() => setRewardDialogOpen(false)}>\n              REWARD\n            </DialogTitle>\n          <RewardDetail reward={reward} openPopup={setRewardDialogOpen} />\n        </Dialog>\n      </Layout>\n    );\n\n  }\n  return (\n    <Layout>\n        <div>NO GAME</div>\n    </Layout>\n  )\n}\n\nPlayHome.getInitialProps = async ({ query }) => {\n  return { findID: query.findID, userID: query.userID }\n}\n  \nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n};\n\nexport default PlayHome;"]},"metadata":{},"sourceType":"module"}