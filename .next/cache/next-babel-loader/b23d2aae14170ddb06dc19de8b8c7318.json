{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/pages/manageBoards/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport moment from 'moment'; // context imports\n// Style imports\n\nimport { MASTER, COLORS } from '../../styles/masterStyles'; // component imports\n\nimport Link from 'next/link';\nimport Layout from '../../components/Layout'; // Material UI\n\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination'; // context imports\n\nimport { OrgContext } from '../../contexts/orgContext';\nimport { ManageBoardsContext } from '../../contexts/manageBoardsContext';\nimport { UserContext } from '../../contexts/userContext';\nimport { SUPPORTS_PERFORMANCE_USER_TIMING } from '../../node_modules/next/dist/next-server/lib/utils';\n\nvar ManageBoardsHome = function ManageBoardsHome(props) {\n  var router = useRouter();\n\n  var _useContext = useContext(OrgContext),\n      contextOrg = _useContext.contextOrg,\n      getOrg = _useContext.getOrg;\n\n  var _useContext2 = useContext(ManageBoardsContext),\n      newBoard = _useContext2.newBoard;\n\n  var _useContext3 = useContext(UserContext),\n      user = _useContext3.user,\n      storeUser = _useContext3.storeUser,\n      logout = _useContext3.logout; // table state\n  // const [order, setOrder] = React.useState('asc');\n  // const [orderBy, setOrderBy] = React.useState('calories');\n\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(5),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      rowsPerPage = _React$useState4[0],\n      setRowsPerPage = _React$useState4[1];\n\n  var _useState = useState(''),\n      searchText = _useState[0],\n      setSearchText = _useState[1];\n\n  var _useState2 = useState(contextOrg.boards || []),\n      boards = _useState2[0],\n      setBoards = _useState2[1];\n\n  var searchForBoard = function searchForBoard() {\n    setSearchText('');\n    setBoards(dummyBoards);\n  };\n\n  useEffect(function () {\n    if (!user) {\n      if (localStorage.getItem('bingo_user')) {\n        storeUser(JSON.parse(localStorage.getItem('bingo_user')));\n      } else {\n        logout();\n      }\n    }\n\n    if (!contextOrg.id && user && !user.org) {\n      router.push('/joinGame');\n    } else if (!contextOrg.id && user && user.org) {\n      getOrg(user.org);\n    }\n\n    if (contextOrg && contextOrg.boards && contextOrg.boards.length !== boards.length) {\n      setBoards(contextOrg.boards);\n    }\n  }, [contextOrg, user]);\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(_parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  var generateBoardRows = function generateBoardRows() {\n    if (boards.length) {\n      return boards.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (board, index) {\n        return __jsx(Link, {\n          key: board.id,\n          href: \"manageBoards/[boardID]\",\n          as: \"manageBoards/\".concat(board.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, __jsx(TableRow, {\n          style: {\n            cursor: 'pointer'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, __jsx(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, board.title), __jsx(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, board.numSquares), __jsx(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, moment(board.created).format(\"MMM Do, YYYY\")), __jsx(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, moment(board.modified).format(\"MMM Do, YYYY\"))));\n      });\n    }\n\n    return __jsx(TableRow, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"No boards yet... click NEW BOARD to make one!\"), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }));\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: MASTER.pageTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"MANAGE BOARDS\"), __jsx(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      padding: '1% 3%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    style: _objectSpread({}, MASTER.wideRoundInput, {\n      maxWidth: 300\n    }),\n    value: searchText,\n    onChange: function onChange(e) {\n      return setSearchText(e.target.value);\n    },\n    placeholder: 'Search by name or access code ',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    style: _objectSpread({}, MASTER.wideRoundBtn, {\n      width: 100\n    }),\n    onClick: function onClick() {\n      return searchForBoard();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: MASTER.wideRoundBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"SEARCH\"))), __jsx(Table, {\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, __jsx(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, __jsx(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"NAME\"), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"TASKS\"), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"CREATED\"), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"LAST MODIFIED\"))), __jsx(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, generateBoardRows())), __jsx(TablePagination, {\n    rowsPerPageOptions: [5, 10, 20, 40, 60],\n    component: \"div\",\n    count: boards.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }))), __jsx(\"button\", {\n    style: _objectSpread({}, MASTER.wideRoundBtn, {\n      width: 150,\n      position: 'absolute',\n      bottom: 30,\n      right: 20,\n      height: 45\n    }),\n    onClick: function onClick() {\n      return newBoard(contextOrg.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: MASTER.wideRoundBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"NEW BOARD\"))));\n};\n\nvar styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#fff'\n  }\n};\nexport default ManageBoardsHome;","map":{"version":3,"sources":["/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/pages/manageBoards/index.js"],"names":["React","useState","useEffect","useContext","useRouter","moment","MASTER","COLORS","Link","Layout","Paper","Table","TableBody","TableCell","TableHead","TableRow","TablePagination","OrgContext","ManageBoardsContext","UserContext","SUPPORTS_PERFORMANCE_USER_TIMING","ManageBoardsHome","props","router","contextOrg","getOrg","newBoard","user","storeUser","logout","page","setPage","rowsPerPage","setRowsPerPage","searchText","setSearchText","boards","setBoards","searchForBoard","dummyBoards","localStorage","getItem","JSON","parse","id","org","push","length","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","generateBoardRows","slice","map","board","index","cursor","title","numSquares","created","format","modified","width","styles","container","pageTitle","padding","display","wideRoundInput","maxWidth","e","wideRoundBtn","wideRoundBtnText","position","bottom","right","height","flexDirection","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport moment from 'moment';\n\n// context imports\n\n// Style imports\nimport { MASTER, COLORS } from '../../styles/masterStyles';\n\n// component imports\nimport Link from 'next/link';\nimport Layout from '../../components/Layout';\n\n// Material UI\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\n\n// context imports\nimport { OrgContext } from '../../contexts/orgContext';\nimport { ManageBoardsContext } from '../../contexts/manageBoardsContext';\nimport { UserContext } from '../../contexts/userContext';\nimport { SUPPORTS_PERFORMANCE_USER_TIMING } from '../../node_modules/next/dist/next-server/lib/utils';\n\nconst ManageBoardsHome = (props) => {\n\n    const router = useRouter();\n\n    const { contextOrg, getOrg } = useContext(OrgContext);\n    const { newBoard } = useContext(ManageBoardsContext);\n    const { user, storeUser, logout } = useContext(UserContext);\n\n    // table state\n    // const [order, setOrder] = React.useState('asc');\n    // const [orderBy, setOrderBy] = React.useState('calories');\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const [searchText, setSearchText] = useState('');\n  const [boards, setBoards] = useState(contextOrg.boards || []);\n\n  const searchForBoard = () => {\n    setSearchText('');\n    setBoards(dummyBoards)\n  }\n\n  useEffect(() => {\n    if(!user){\n        if(localStorage.getItem('bingo_user')){\n            storeUser(JSON.parse(localStorage.getItem('bingo_user')));\n        } else {\n            logout();\n        }\n    }\n    if(!contextOrg.id && user && !user.org){\n        router.push('/joinGame');\n    }else if(!contextOrg.id && user && user.org){\n        getOrg(user.org);\n    }\n    if(contextOrg && contextOrg.boards && contextOrg.boards.length !== boards.length){\n        setBoards(contextOrg.boards);\n    }\n  }, [contextOrg, user]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const generateBoardRows = () => {\n\t\tif(boards.length){\n            return boards\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map((board, index) => {\n\t\t\t\treturn (\n                    <Link key={board.id} href={`manageBoards/[boardID]`} as={`manageBoards/${board.id}`}>\n                        <TableRow style={{ cursor: 'pointer' }}>\n                            <TableCell>{board.title}</TableCell>\n                            <TableCell>{board.numSquares}</TableCell>\n                            <TableCell>{moment(board.created).format(\"MMM Do, YYYY\")}</TableCell>\n                            <TableCell>{moment(board.modified).format(\"MMM Do, YYYY\")}</TableCell>\n                        </TableRow>\n                    </Link>\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\t\treturn <TableRow style={{width: '100%'}}><TableCell>No boards yet... click NEW BOARD to make one!</TableCell><TableCell></TableCell><TableCell></TableCell><TableCell></TableCell></TableRow>\n  }\n\n  return (\n      <Layout>\n        <div style={styles.container}>\n            <div style={MASTER.pageTitle}>MANAGE BOARDS</div>\n            <Paper>\n                <div style={{ padding: '1% 3%' }}>\n                    <div style={{ display: 'flex' }}>\n                        <input \n                            style={{ ...MASTER.wideRoundInput, maxWidth: 300 }} \n                            value={searchText} \n                            onChange={(e) => setSearchText(e.target.value)} \n                            placeholder={'Search by name or access code '}\n                        />\n                        <button \n                            style={{ ...MASTER.wideRoundBtn, width: 100 }} \n                            onClick={() => searchForBoard()}\n                        >\n                            <div style={MASTER.wideRoundBtnText}>SEARCH</div>\n                        </button>\n                    </div>\n                    <Table style={{ width:\"100%\" }}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>NAME</TableCell>\n                                <TableCell>TASKS</TableCell>\n                                <TableCell>CREATED</TableCell>\n                                <TableCell>LAST MODIFIED</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {generateBoardRows()}\n                        </TableBody>\n                    </Table>\n                    <TablePagination\n                        rowsPerPageOptions={[5, 10, 20, 40, 60]}\n                        component=\"div\"\n                        count={boards.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onChangePage={handleChangePage}\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                    />\n                </div>\n            </Paper>\n            <button \n                style={{ ...MASTER.wideRoundBtn, width: 150, position: 'absolute', bottom: 30, right: 20, height: 45 }} \n                onClick={() => newBoard(contextOrg.id)}\n            >\n                <div style={MASTER.wideRoundBtnText}>NEW BOARD</div>\n            </button>\n        </div>\n    </Layout>\n  );\n}\n  \nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#fff',\n  },\n};\n\nexport default ManageBoardsHome;"]},"metadata":{},"sourceType":"module"}