{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/pages/resetPassword/[userID]/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport FULL_URL from '../../../constants/constants'; // Style imports\n\nimport { MASTER, COLORS } from '../../../styles/masterStyles';\n\nvar ResetPassword = function ResetPassword(props) {\n  var router = useRouter();\n\n  var _useState = useState(props.userID),\n      userID = _useState[0];\n\n  var _useState2 = useState(true),\n      checkingCurrPasswordMatch = _useState2[0],\n      setCheckingCurrPasswordMatch = _useState2[1];\n\n  var _useState3 = useState(false),\n      incorrectPassword = _useState3[0],\n      setIncorrectPassword = _useState3[1];\n\n  var _useState4 = useState(''),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      confirmPassword = _useState5[0],\n      setConfirmPassword = _useState5[1];\n\n  useEffect(function () {\n    checkCurrPassword(props.userID, props.currPassword);\n  }, []);\n\n  var openWarning = function openWarning(message) {\n    alert(\"Woah there! \".concat(message));\n  };\n\n  var updateUser =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var request, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (password) {\n                _context.next = 3;\n                break;\n              }\n\n              openWarning('Password cannot be empty!');\n              return _context.abrupt(\"return\");\n\n            case 3:\n              if (!(password && password !== confirmPassword)) {\n                _context.next = 6;\n                break;\n              }\n\n              openWarning('Passwords must match!');\n              return _context.abrupt(\"return\");\n\n            case 6:\n              console.log({\n                userID: userID\n              });\n              _context.prev = 7;\n              _context.next = 10;\n              return fetch(\"\".concat(FULL_URL, \"/users/\").concat(userID, \"/passwordReset\"), {\n                method: 'PATCH',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: _JSON$stringify({\n                  password: password\n                })\n              });\n\n            case 10:\n              request = _context.sent;\n              _context.next = 13;\n              return request.json();\n\n            case 13:\n              res = _context.sent;\n              console.log('from backend', {\n                res: res\n              });\n\n              if (res && res.success) {\n                router.push('/login');\n              } else {\n                alert('There was a problem saving your password...');\n              }\n\n              _context.next = 21;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](7);\n              alert(_context.t0);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[7, 18]]);\n    }));\n\n    return function updateUser() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var checkCurrPassword =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(userID, currPassword) {\n      var request, res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(!currPassword || !userID)) {\n                _context2.next = 4;\n                break;\n              }\n\n              setCheckingCurrPasswordMatch(false);\n              setIncorrectPassword(true);\n              return _context2.abrupt(\"return\");\n\n            case 4:\n              console.log({\n                userID: userID\n              });\n              console.log({\n                currPassword: currPassword\n              });\n              _context2.prev = 6;\n              _context2.next = 9;\n              return fetch(\"\".concat(FULL_URL, \"/users/checkResetCredentials\"), {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: _JSON$stringify({\n                  password: currPassword,\n                  userID: userID\n                })\n              });\n\n            case 9:\n              request = _context2.sent;\n              _context2.next = 12;\n              return request.json();\n\n            case 12:\n              res = _context2.sent;\n              console.log('from backend', {\n                res: res\n              });\n\n              if (!(res && !res.success)) {\n                _context2.next = 20;\n                break;\n              }\n\n              setCheckingCurrPasswordMatch(false);\n              setIncorrectPassword(true);\n              return _context2.abrupt(\"return\");\n\n            case 20:\n              setCheckingCurrPasswordMatch(false);\n              setIncorrectPassword(false);\n\n            case 22:\n              _context2.next = 27;\n              break;\n\n            case 24:\n              _context2.prev = 24;\n              _context2.t0 = _context2[\"catch\"](6);\n              alert(_context2.t0);\n\n            case 27:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[6, 24]]);\n    }));\n\n    return function checkCurrPassword(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var goToLogin = function goToLogin() {\n    router.push('/login');\n  };\n\n  if (checkingCurrPasswordMatch) {\n    return __jsx(\"div\", {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: styles.subcontainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Just making sure you've come to the right place...\")));\n  }\n\n  if (incorrectPassword) {\n    return __jsx(\"div\", {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: styles.subcontainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Looks like you came here with a bad link.\")));\n  }\n\n  return __jsx(\"div\", {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: styles.subcontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: MASTER.pageTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"RESET PASSWORD\"), __jsx(\"input\", {\n    style: MASTER.wideRoundInput,\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    type: \"password\",\n    placeholder: 'Password',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    style: MASTER.wideRoundInput,\n    value: confirmPassword,\n    onChange: function onChange(e) {\n      return setConfirmPassword(e.target.value);\n    },\n    type: \"password\",\n    placeholder: 'Confirm Password (passwords must match!)',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    style: _objectSpread({}, MASTER.wideRoundBtn, {\n      marginTop: 20\n    }),\n    onClick: function onClick() {\n      return updateUser();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    style: MASTER.wideRoundBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Save Password\")), __jsx(\"button\", {\n    style: _objectSpread({}, MASTER.wideRoundBtn, {\n      marginTop: 20\n    }),\n    onClick: function onClick() {\n      return goToLogin();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    style: MASTER.wideRoundBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Remembered your password? Login!\"))));\n};\n\nResetPassword.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(_ref3) {\n    var query;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            query = _ref3.query;\n            return _context3.abrupt(\"return\", {\n              userID: query.userID,\n              currPassword: query.code\n            });\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x3) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n    paddingTop: 40\n  },\n  subcontainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n    maxWidth: 400\n  }\n};\nexport default ResetPassword;","map":{"version":3,"sources":["/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/pages/resetPassword/[userID]/index.js"],"names":["useState","useEffect","useRouter","fetch","FULL_URL","MASTER","COLORS","ResetPassword","props","router","userID","checkingCurrPasswordMatch","setCheckingCurrPasswordMatch","incorrectPassword","setIncorrectPassword","password","setPassword","confirmPassword","setConfirmPassword","checkCurrPassword","currPassword","openWarning","message","alert","updateUser","console","log","method","headers","body","request","json","res","success","push","goToLogin","styles","container","subcontainer","pageTitle","wideRoundInput","e","target","value","wideRoundBtn","marginTop","wideRoundBtnText","getInitialProps","query","code","display","flexDirection","justifyContent","alignItems","width","height","paddingTop","maxWidth"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport FULL_URL from '../../../constants/constants';\n\n// Style imports\nimport { MASTER, COLORS } from '../../../styles/masterStyles';\n\nconst ResetPassword = (props) => {\n\n    const router = useRouter()\n\n    const [userID] = useState(props.userID);\n    const [ checkingCurrPasswordMatch, setCheckingCurrPasswordMatch ] = useState(true);\n    const [ incorrectPassword, setIncorrectPassword ] = useState(false);\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    useEffect(() => {\n        checkCurrPassword(props.userID, props.currPassword);\n    }, [])\n\n    const openWarning = (message) => {\n        alert(\n            `Woah there! ${message}`,\n        );\n    }\n\n    const updateUser = async () => {\n        if(!password){\n            openWarning('Password cannot be empty!');\n            return;\n        }\n        if(password && password !== confirmPassword){\n            openWarning('Passwords must match!');\n            return;\n        }\n        console.log({userID})\n        try {\n            const request = await fetch(`${FULL_URL}/users/${userID}/passwordReset`, {\n                method: 'PATCH',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    password,\n                })\n              })\n              const res = await request.json();\n              console.log('from backend', {res})\n              if(res && res.success){\n                router.push('/login');\n              } else {\n                  alert('There was a problem saving your password...');\n              }\n        } catch (err) { alert( err ) }\n    }\n\n    const checkCurrPassword = async (userID, currPassword) => {\n        if(!currPassword || !userID){\n            setCheckingCurrPasswordMatch(false);\n            setIncorrectPassword(true);\n            return;\n        }\n        console.log({userID})\n        console.log({currPassword})\n        try {\n            const request = await fetch(`${FULL_URL}/users/checkResetCredentials`, {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    password: currPassword,\n                    userID\n                })\n              })\n              const res = await request.json();\n              console.log('from backend', {res})\n              if(res && !res.success){\n                setCheckingCurrPasswordMatch(false);\n                setIncorrectPassword(true);\n                return;\n              } else {\n                setCheckingCurrPasswordMatch(false);\n                setIncorrectPassword(false);\n              }\n        } catch (err) { alert( err ) }\n    }\n\n    const goToLogin = () => {\n        router.push('/login');\n    }\n\n    if(checkingCurrPasswordMatch){\n        return (<div style={styles.container}>\n            <div style={styles.subcontainer}>\n                <div>Just making sure you've come to the right place...</div>\n            </div>\n        </div>)\n    }\n\n    if(incorrectPassword){\n        return (<div style={styles.container}>\n            <div style={styles.subcontainer}>\n                <div>Looks like you came here with a bad link.</div>\n            </div>\n        </div>)\n    }\n\n\n    return (\n        <div style={styles.container}>\n            <div style={styles.subcontainer}>\n                <div style={MASTER.pageTitle}>RESET PASSWORD</div>\n                <input \n                    style={MASTER.wideRoundInput} \n                    value={password} \n                    onChange={e => setPassword(e.target.value)} \n                    type='password'\n                    placeholder={'Password'}\n                />\n                <input \n                    style={MASTER.wideRoundInput} \n                    value={confirmPassword} \n                    onChange={e => setConfirmPassword(e.target.value)} \n                    type='password'\n                    placeholder={'Confirm Password (passwords must match!)'}\n                />\n                <button \n                    style={{ ...MASTER.wideRoundBtn, marginTop: 20 }} \n                    onClick={() => updateUser()}\n                >\n                    <span style={MASTER.wideRoundBtnText}>Save Password</span>\n                </button>\n                <button \n                    style={{ ...MASTER.wideRoundBtn, marginTop: 20 }} \n                    onClick={() => goToLogin()}\n                >\n                    <span style={MASTER.wideRoundBtnText}>Remembered your password? Login!</span>\n                </button>\n            </div>\n        </div>\n    )\n  };\n\n  ResetPassword.getInitialProps = async ({ query }) => {\n    return { userID: query.userID, currPassword: query.code }\n  }\n\n  const styles = {\n      container: {\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          width: '100%',\n          height: '100%',\n          paddingTop: 40,\n      },\n      subcontainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n        maxWidth: 400,\n    }\n  }\n  \n  export default ResetPassword;"]},"metadata":{},"sourceType":"module"}