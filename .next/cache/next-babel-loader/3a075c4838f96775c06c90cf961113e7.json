{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/components/ManageBoard/TeamOrPlayers/BoardTeamsOrPlayers.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useContext } from 'react';\nimport moment from 'moment'; // Context imports\n\nimport { ManageBoardsContext } from '../../../contexts/manageBoardsContext'; // Style imports\n\nimport { MASTER, COLORS } from '../../../styles/masterStyles'; // Material UI\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nvar BoardTeamOrPlayers = function BoardTeamOrPlayers(props) {\n  var materialStyles = function materialStyles(theme) {\n    return {\n      root: {\n        margin: 0,\n        padding: 20,\n        fontSize: 32,\n        color: COLORS.primary\n      },\n      closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500]\n      }\n    };\n  };\n\n  var DialogTitle = withStyles(materialStyles)(function (props) {\n    var children = props.children,\n        classes = props.classes,\n        onClose = props.onClose;\n    return __jsx(MuiDialogTitle, {\n      disableTypography: true,\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(Typography, {\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, children), __jsx(IconButton, {\n      \"aria-label\": \"close\",\n      className: classes.closeButton,\n      onClick: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })));\n  });\n\n  var _useState = useState([]),\n      games = _useState[0],\n      setGames = _useState[1];\n\n  var _useState2 = useState(null),\n      gameToView = _useState2[0],\n      setGameToView = _useState2[1];\n\n  var _useState3 = useState(null),\n      slideShow = _useState3[0],\n      setSlideShow = _useState3[1];\n\n  var _useState4 = useState(true),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useContext = useContext(ManageBoardsContext),\n      getAllGamesForBoard = _useContext.getAllGamesForBoard,\n      gamesForBoard = _useContext.gamesForBoard;\n\n  useEffect(function () {\n    if (!gamesForBoard.length) {\n      setLoading(true);\n      getAllGamesForBoard(props.boardID);\n    } else {\n      setLoading(false);\n      setGames(gamesForBoard[0] === 'none' ? [] : gamesForBoard);\n    }\n  }, [gamesForBoard]);\n\n  var getNumTasksComplete = function getNumTasksComplete(tasks) {\n    var completedTasks = [];\n    tasks.map(function (task) {\n      if (task.complete && !task.freeSquare) {\n        completedTasks.push(task);\n      }\n    });\n    return completedTasks.length;\n  };\n\n  var getNumRewardsEarned = function getNumRewardsEarned(rewards) {\n    var earnedRewards = [];\n    rewards.map(function (reward) {\n      if (reward.earned) {\n        earnedRewards.push(reward);\n      }\n    });\n    return earnedRewards.length;\n  };\n\n  var generateGameRows = function generateGameRows() {\n    if (games.length) {\n      return games.map(function (game, index) {\n        return __jsx(TableRow, {\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: function onClick() {\n            return setGameToView(game);\n          },\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, __jsx(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, game.organizer.team && 'Team ', game.organizer.name), __jsx(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, getNumTasksComplete(game.squares)), __jsx(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, getNumRewardsEarned(game.rewards)), __jsx(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, moment(game.modified).format(\"MMM Do, YYYY\")));\n      });\n    }\n\n    return __jsx(TableRow, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"No games yet... go get people playing!\"), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }));\n  };\n\n  if (loading) {\n    __jsx(\"div\", {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: styles.subcontainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: MASTER.pageTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"LOADING...\")));\n  }\n\n  return __jsx(\"div\", {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, console.log({\n    games: games\n  }), __jsx(\"div\", {\n    style: {\n      width: '100%',\n      maxWidth: 700\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, __jsx(Table, {\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, __jsx(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, __jsx(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"ORGANIZER\"), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"TASKS COMPLETE\"), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"REWARDS EARNED\"), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"LAST PLAYED\"))), __jsx(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, generateGameRows()))), __jsx(\"button\", {\n    style: _objectSpread({}, MASTER.wideRoundBtn, {\n      width: 150,\n      position: 'absolute',\n      bottom: 30,\n      right: 20,\n      height: 45\n    }),\n    onClick: function onClick() {\n      return setSlideShow(games);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: MASTER.wideRoundBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"SLIDESHOW VIEW\")), __jsx(Dialog, {\n    open: !!gameToView,\n    onBackdropClick: function onBackdropClick() {\n      return setGameToView(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(DialogTitle, {\n    onClose: function onClose() {\n      return setGameToView(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, gameToView && \"Organizer: \".concat(gameToView.organizer.name)), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"VIEWING GAME\")), __jsx(Dialog, {\n    open: !!slideShow,\n    onBackdropClick: function onBackdropClick() {\n      return setSlideShow(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, __jsx(DialogTitle, {\n    onClose: function onClose() {\n      return setSlideShow(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"SLIDESHOW\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"VIEWING SLIDESHOW\")));\n};\n\nvar styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n    paddingTop: 40\n  }\n};\nexport default BoardTeamOrPlayers;","map":{"version":3,"sources":["/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/components/ManageBoard/TeamOrPlayers/BoardTeamsOrPlayers.js"],"names":["useState","useEffect","useContext","moment","ManageBoardsContext","MASTER","COLORS","Table","TableBody","TableCell","TableHead","TableRow","withStyles","Dialog","MuiDialogActions","MuiDialogTitle","Typography","IconButton","CloseIcon","BoardTeamOrPlayers","props","materialStyles","theme","root","margin","padding","fontSize","color","primary","closeButton","position","right","spacing","top","palette","grey","DialogTitle","children","classes","onClose","games","setGames","gameToView","setGameToView","slideShow","setSlideShow","loading","setLoading","getAllGamesForBoard","gamesForBoard","length","boardID","getNumTasksComplete","tasks","completedTasks","map","task","complete","freeSquare","push","getNumRewardsEarned","rewards","earnedRewards","reward","earned","generateGameRows","game","index","cursor","organizer","team","name","squares","modified","format","width","styles","container","subcontainer","pageTitle","console","log","maxWidth","wideRoundBtn","bottom","height","wideRoundBtnText","display","flexDirection","justifyContent","alignItems","paddingTop"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;;AACA,SAASC,mBAAT,QAAoC,uCAApC,C,CAEA;;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,8BAA/B,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AAElC,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK;AAAA,WAAK;AAC7BC,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAE,CADJ;AAEJC,QAAAA,OAAO,EAAE,EAFL;AAGJC,QAAAA,QAAQ,EAAE,EAHN;AAIJC,QAAAA,KAAK,EAAErB,MAAM,CAACsB;AAJV,OADuB;AAO7BC,MAAAA,WAAW,EAAE;AACXC,QAAAA,QAAQ,EAAE,UADC;AAEXC,QAAAA,KAAK,EAAET,KAAK,CAACU,OAAN,CAAc,CAAd,CAFI;AAGXC,QAAAA,GAAG,EAAEX,KAAK,CAACU,OAAN,CAAc,CAAd,CAHM;AAIXL,QAAAA,KAAK,EAAEL,KAAK,CAACY,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AAJI;AAPgB,KAAL;AAAA,GAA5B;;AAeE,MAAMC,WAAW,GAAGxB,UAAU,CAACS,cAAD,CAAV,CAA2B,UAAAD,KAAK,EAAI;AAAA,QAC9CiB,QAD8C,GACfjB,KADe,CAC9CiB,QAD8C;AAAA,QACpCC,OADoC,GACflB,KADe,CACpCkB,OADoC;AAAA,QAC3BC,OAD2B,GACfnB,KADe,CAC3BmB,OAD2B;AAEtD,WACE,MAAC,cAAD;AAAgB,MAAA,iBAAiB,MAAjC;AAAkC,MAAA,SAAS,EAAED,OAAO,CAACf,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0Bc,QAA1B,CADF,EAEI,MAAC,UAAD;AAAY,oBAAW,OAAvB;AAA+B,MAAA,SAAS,EAAEC,OAAO,CAACT,WAAlD;AAA+D,MAAA,OAAO,EAAEU,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ,CADF;AAQD,GAVmB,CAApB;;AAjBgC,kBA8BRvC,QAAQ,CAAC,EAAD,CA9BA;AAAA,MA8B3BwC,KA9B2B;AAAA,MA8BpBC,QA9BoB;;AAAA,mBA+BEzC,QAAQ,CAAC,IAAD,CA/BV;AAAA,MA+B3B0C,UA/B2B;AAAA,MA+BfC,aA/Be;;AAAA,mBAgCA3C,QAAQ,CAAC,IAAD,CAhCR;AAAA,MAgC3B4C,SAhC2B;AAAA,MAgChBC,YAhCgB;;AAAA,mBAiCJ7C,QAAQ,CAAC,IAAD,CAjCJ;AAAA,MAiC3B8C,OAjC2B;AAAA,MAiClBC,UAjCkB;;AAAA,oBAmCa7C,UAAU,CAACE,mBAAD,CAnCvB;AAAA,MAmC1B4C,mBAnC0B,eAmC1BA,mBAnC0B;AAAA,MAmCLC,aAnCK,eAmCLA,aAnCK;;AAqClChD,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAG,CAACgD,aAAa,CAACC,MAAlB,EAAyB;AACrBH,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,MAAAA,mBAAmB,CAAC5B,KAAK,CAAC+B,OAAP,CAAnB;AACH,KAHD,MAGO;AACHJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAN,MAAAA,QAAQ,CAACQ,aAAa,CAAC,CAAD,CAAb,KAAqB,MAArB,GAA8B,EAA9B,GAAmCA,aAApC,CAAR;AACH;AACF,GARM,EAQJ,CAACA,aAAD,CARI,CAAT;;AAUE,MAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,KAAK,EAAI;AACnC,QAAIC,cAAc,GAAG,EAArB;AACAD,IAAAA,KAAK,CAACE,GAAN,CAAU,UAAAC,IAAI,EAAI;AACd,UAAGA,IAAI,CAACC,QAAL,IAAiB,CAACD,IAAI,CAACE,UAA1B,EAAqC;AACjCJ,QAAAA,cAAc,CAACK,IAAf,CAAoBH,IAApB;AACH;AACJ,KAJD;AAKA,WAAOF,cAAc,CAACJ,MAAtB;AACH,GARC;;AAUA,MAAMU,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,OAAO,EAAI;AACnC,QAAIC,aAAa,GAAG,EAApB;AACAD,IAAAA,OAAO,CAACN,GAAR,CAAY,UAAAQ,MAAM,EAAI;AAClB,UAAGA,MAAM,CAACC,MAAV,EAAiB;AACbF,QAAAA,aAAa,CAACH,IAAd,CAAmBI,MAAnB;AACH;AACJ,KAJD;AAKA,WAAOD,aAAa,CAACZ,MAArB;AACH,GARD;;AAUA,MAAMe,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,QAAGzB,KAAK,CAACU,MAAT,EAAgB;AACrB,aAAOV,KAAK,CAACe,GAAN,CAAU,UAACW,IAAD,EAAOC,KAAP,EAAiB;AACjC,eACgB,MAAC,QAAD;AAAU,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAAjB;AAAwC,UAAA,OAAO,EAAE;AAAA,mBAAMzB,aAAa,CAACuB,IAAD,CAAnB;AAAA,WAAjD;AAA4E,UAAA,GAAG,EAAEC,KAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAYD,IAAI,CAACG,SAAL,CAAeC,IAAf,IAAuB,OAAnC,EAA4CJ,IAAI,CAACG,SAAL,CAAeE,IAA3D,CADJ,EAEI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAYnB,mBAAmB,CAACc,IAAI,CAACM,OAAN,CAA/B,CAFJ,EAGI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAYZ,mBAAmB,CAACM,IAAI,CAACL,OAAN,CAA/B,CAHJ,EAII,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAY1D,MAAM,CAAC+D,IAAI,CAACO,QAAN,CAAN,CAAsBC,MAAtB,CAA6B,cAA7B,CAAZ,CAJJ,CADhB;AAQA,OATM,CAAP;AAUA;;AACD,WAAO,MAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAlC,EAA+F,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/F,EAAsH,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtH,EAA6I,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7I,CAAP;AACK,GAdD;;AAgBA,MAAG7B,OAAH,EAAW;AACT;AAAK,MAAA,KAAK,EAAE8B,MAAM,CAACC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAED,MAAM,CAACE,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAEzE,MAAM,CAAC0E,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ;AAKD;;AAEH,SACI;AAAK,IAAA,KAAK,EAAEH,MAAM,CAACC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,OAAO,CAACC,GAAR,CAAY;AAACzC,IAAAA,KAAK,EAALA;AAAD,GAAZ,CADL,EAEI;AAAK,IAAA,KAAK,EAAE;AAAEmC,MAAAA,KAAK,EAAE,MAAT;AAAiBO,MAAAA,QAAQ,EAAE;AAA3B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEP,MAAAA,KAAK,EAAC;AAAR,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,EAGI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,EAII,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,CADJ,CADJ,EASI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,gBAAgB,EADrB,CATJ,CADJ,CAFJ,EAiBI;AACI,IAAA,KAAK,oBAAO5D,MAAM,CAAC8E,YAAd;AAA4BR,MAAAA,KAAK,EAAE,GAAnC;AAAwC7C,MAAAA,QAAQ,EAAE,UAAlD;AAA8DsD,MAAAA,MAAM,EAAE,EAAtE;AAA0ErD,MAAAA,KAAK,EAAE,EAAjF;AAAqFsD,MAAAA,MAAM,EAAE;AAA7F,MADT;AAEI,IAAA,OAAO,EAAE;AAAA,aAAMxC,YAAY,CAACL,KAAD,CAAlB;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AAAK,IAAA,KAAK,EAAEnC,MAAM,CAACiF,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,CAjBJ,EAuBI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,CAAC,CAAC5C,UAAhB;AAA4B,IAAA,eAAe,EAAE;AAAA,aAAMC,aAAa,CAAC,IAAD,CAAnB;AAAA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAa,IAAA,OAAO,EAAE;AAAA,aAAMA,aAAa,CAAC,IAAD,CAAnB;AAAA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,UAAU,yBAAkBA,UAAU,CAAC2B,SAAX,CAAqBE,IAAvC,CADf,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,CAvBJ,EA8BI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,CAAC,CAAC3B,SAAhB;AAA2B,IAAA,eAAe,EAAE;AAAA,aAAMC,YAAY,CAAC,IAAD,CAAlB;AAAA,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAa,IAAA,OAAO,EAAE;AAAA,aAAMA,YAAY,CAAC,IAAD,CAAlB;AAAA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJJ,CA9BJ,CADJ;AAwCD,CAnIH;;AAqIE,IAAM+B,MAAM,GAAG;AACXC,EAAAA,SAAS,EAAE;AACPU,IAAAA,OAAO,EAAE,MADF;AAEPC,IAAAA,aAAa,EAAE,QAFR;AAGPC,IAAAA,cAAc,EAAE,QAHT;AAIPC,IAAAA,UAAU,EAAE,QAJL;AAKPf,IAAAA,KAAK,EAAE,MALA;AAMPU,IAAAA,MAAM,EAAE,MAND;AAOPM,IAAAA,UAAU,EAAE;AAPL;AADA,CAAf;AAYA,eAAexE,kBAAf","sourcesContent":["import { useState, useEffect, useContext } from 'react';\nimport moment from 'moment';\n\n// Context imports\nimport { ManageBoardsContext } from '../../../contexts/manageBoardsContext';\n\n// Style imports\nimport { MASTER, COLORS } from '../../../styles/masterStyles';\n\n// Material UI\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst BoardTeamOrPlayers = (props) => {\n\n    const materialStyles = theme => ({\n        root: {\n          margin: 0,\n          padding: 20,\n          fontSize: 32,\n          color: COLORS.primary,\n        },\n        closeButton: {\n          position: 'absolute',\n          right: theme.spacing(1),\n          top: theme.spacing(1),\n          color: theme.palette.grey[500],\n        },\n      });\n      \n      const DialogTitle = withStyles(materialStyles)(props => {\n        const { children, classes, onClose } = props;\n        return (\n          <MuiDialogTitle disableTypography className={classes.root}>\n            <Typography variant=\"h6\">{children}</Typography>\n              <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                <CloseIcon />\n              </IconButton>\n          </MuiDialogTitle>\n        );\n      });\n    \n\n    const [games, setGames] = useState([]);\n    const [gameToView, setGameToView] = useState(null);\n    const [slideShow, setSlideShow] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    const { getAllGamesForBoard, gamesForBoard } = useContext(ManageBoardsContext);\n\n    useEffect(() => {\n        if(!gamesForBoard.length){\n            setLoading(true);\n            getAllGamesForBoard(props.boardID);\n        } else {\n            setLoading(false);\n            setGames(gamesForBoard[0] === 'none' ? [] : gamesForBoard);\n        }\n      }, [gamesForBoard])\n\n      const getNumTasksComplete = tasks => {\n        let completedTasks = [];\n        tasks.map(task => {\n            if(task.complete && !task.freeSquare){\n                completedTasks.push(task)\n            }\n        });\n        return completedTasks.length;\n    }\n\n      const getNumRewardsEarned = rewards => {\n          let earnedRewards = [];\n          rewards.map(reward => {\n              if(reward.earned){\n                  earnedRewards.push(reward)\n              }\n          });\n          return earnedRewards.length;\n      }\n\n      const generateGameRows = () => {\n        if(games.length){\n\t\t\treturn games.map((game, index) => {\n\t\t\t\treturn (\n                    <TableRow style={{ cursor: 'pointer' }} onClick={() => setGameToView(game)} key={index}>\n                        <TableCell>{game.organizer.team && 'Team '}{game.organizer.name}</TableCell>\n                        <TableCell>{getNumTasksComplete(game.squares)}</TableCell>\n                        <TableCell>{getNumRewardsEarned(game.rewards)}</TableCell>\n                        <TableCell>{moment(game.modified).format(\"MMM Do, YYYY\")}</TableCell>\n                    </TableRow>\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\t\treturn <TableRow style={{width: '100%'}}><TableCell>No games yet... go get people playing!</TableCell><TableCell></TableCell><TableCell></TableCell><TableCell></TableCell></TableRow>\n      }\n\n      if(loading){\n        <div style={styles.container}>\n            <div style={styles.subcontainer}>\n                <div style={MASTER.pageTitle}>LOADING...</div>\n            </div>\n        </div>\n      }\n\n    return (\n        <div style={styles.container}>\n            {console.log({games})}\n            <div style={{ width: '100%', maxWidth: 700 }}>\n                <Table style={{ width:\"100%\" }}>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>ORGANIZER</TableCell>\n                            <TableCell>TASKS COMPLETE</TableCell>\n                            <TableCell>REWARDS EARNED</TableCell>\n                            <TableCell>LAST PLAYED</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {generateGameRows()}\n                    </TableBody>\n                </Table>\n            </div>\n            <button \n                style={{ ...MASTER.wideRoundBtn, width: 150, position: 'absolute', bottom: 30, right: 20, height: 45 }} \n                onClick={() => setSlideShow(games)}\n            >\n                <div style={MASTER.wideRoundBtnText}>SLIDESHOW VIEW</div>\n            </button>\n            <Dialog open={!!gameToView} onBackdropClick={() => setGameToView(null)}>\n                <DialogTitle onClose={() => setGameToView(null)}>\n                    {gameToView && `Organizer: ${gameToView.organizer.name}`}\n                </DialogTitle>\n                <div>VIEWING GAME</div>\n                {/* <ViewGame user={gameToView} openPopup={openUserPopup} newUser={newUser} orgID={contextOrg._id} updateUsers={updateUsers} /> */}\n            </Dialog>\n            <Dialog open={!!slideShow} onBackdropClick={() => setSlideShow(null)}>\n                <DialogTitle onClose={() => setSlideShow(null)}>\n                    {`SLIDESHOW`}\n                </DialogTitle>\n                <div>VIEWING SLIDESHOW</div>\n                {/* <SlideShow games={games} /> */}\n            </Dialog>\n        </div>\n    )\n  };\n\n  const styles = {\n      container: {\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          width: '100%',\n          height: '100%',\n          paddingTop: 40,\n      },\n  }\n  \n  export default BoardTeamOrPlayers;"]},"metadata":{},"sourceType":"module"}