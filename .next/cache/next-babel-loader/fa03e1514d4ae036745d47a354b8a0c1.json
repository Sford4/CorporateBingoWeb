{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/components/ManageBoard/BoardBuilder/BuildSquareComponents/BuildCodeTask.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react'; // Material UI\n\nimport Switch from '@material-ui/core/Switch';\nimport Chip from '@material-ui/core/Chip'; // Style imports\n\nimport { MASTER, COLORS } from '../../../../styles/masterStyles';\n\nvar BuildCodeTask = function BuildCodeTask(props) {\n  var _useState = useState(props.task.codes.codeList),\n      codes = _useState[0],\n      setCodes = _useState[1];\n\n  var _useState2 = useState(''),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState(props.task.codes.useOnce),\n      useOnce = _useState3[0],\n      setUseOnce = _useState3[1];\n\n  var handleCodeDelete = function handleCodeDelete(deadCode) {\n    setCodes(codes.filter(function (code) {\n      return code !== deadCode;\n    }));\n  };\n\n  var addCode = function addCode(text) {\n    var codeList = codes;\n\n    if (!codeList.includes(text)) {\n      codeList.push(text);\n      console.log({\n        codeList: codeList\n      });\n      setCodes(codeList);\n      setText('');\n    } else {\n      alert(\"Cannot have two identical codes!\");\n    }\n  };\n\n  var generateCodes = function generateCodes() {\n    console.log('generating codes', codes);\n    return codes.map(function (code, index) {\n      return __jsx(Chip, {\n        key: \"code\".concat(index),\n        label: code,\n        onDelete: function onDelete() {\n          return handleCodeDelete(code);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    });\n  };\n\n  return __jsx(\"div\", {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: styles.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(Switch, {\n    onChange: function onChange() {\n      return setUseOnce(!useOnce);\n    },\n    value: useOnce,\n    checked: useOnce,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), __jsx(\"span\", {\n    style: _objectSpread({}, styles.inputLabel, {\n      marginLeft: 5\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Each code used only once\")), __jsx(\"div\", {\n    style: styles.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    style: _objectSpread({}, MASTER.wideRoundInput, {\n      width: 200\n    }),\n    value: text,\n    onChange: function onChange(e) {\n      return setText(e.target.value);\n    },\n    placeholder: 'e.g. foundIt5',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    style: _objectSpread({}, MASTER.wideRoundBtn),\n    onClick: function onClick() {\n      return addCode(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    style: MASTER.wideRoundBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"+ Add\"))), generateCodes());\n};\n\nvar styles = {\n  row: {\n    display: 'flex',\n    alignItems: 'center',\n    maxWidth: '90%',\n    justifyContent: 'center'\n  }\n};\nexport default BuildCodeTask;","map":{"version":3,"sources":["/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/components/ManageBoard/BoardBuilder/BuildSquareComponents/BuildCodeTask.js"],"names":["React","useState","Switch","Chip","MASTER","COLORS","BuildCodeTask","props","task","codes","codeList","setCodes","text","setText","useOnce","setUseOnce","handleCodeDelete","deadCode","filter","code","addCode","includes","push","console","log","alert","generateCodes","map","index","styles","container","row","inputLabel","marginLeft","wideRoundInput","width","e","target","value","wideRoundBtn","wideRoundBtnText","display","alignItems","maxWidth","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, } from 'react';\n\n// Material UI\nimport Switch from '@material-ui/core/Switch';\nimport Chip from '@material-ui/core/Chip';\n\n// Style imports\nimport { MASTER, COLORS } from '../../../../styles/masterStyles';\n\n\nconst BuildCodeTask = (props) => {\n\n    const [codes, setCodes] = useState(props.task.codes.codeList);\n    const [text, setText] = useState('');\n    const [useOnce, setUseOnce] = useState(props.task.codes.useOnce)\n\n\n    const handleCodeDelete = deadCode => {\n        setCodes(codes.filter(code => code !== deadCode));\n    }\n\n    const addCode = text => {\n        const codeList = codes;\n        if(!codeList.includes(text)){\n            codeList.push(text);\n            console.log({codeList})\n            setCodes(codeList);\n            setText('');\n        } else {\n            alert(\"Cannot have two identical codes!\");\n        }\n    }\n\n  const generateCodes = () => {\n      console.log('generating codes', codes)\n    return codes.map((code, index) => {\n        return (\n            <Chip\n                key={`code${index}`}\n                label={code}\n                onDelete={() => handleCodeDelete(code)}\n            />\n        )\n    })\n  }\n\n  return (\n    <div style={styles.container}>\n        <div style={styles.row}>\n            <Switch\n                onChange = {() => setUseOnce(!useOnce)}\n                value = {useOnce}\n                checked={useOnce}\n            />\n            <span style={{ ...styles.inputLabel,  marginLeft: 5}}>Each code used only once</span>\n        </div>\n        <div style={styles.row}>\n            <input \n                style={{ ...MASTER.wideRoundInput, width: 200 }} \n                value={text} \n                onChange={e => setText(e.target.value)} \n                placeholder={'e.g. foundIt5'}\n            />\n            <button \n                style={{ ...MASTER.wideRoundBtn }} \n                onClick={() => addCode(text)}\n            >\n                <span style={MASTER.wideRoundBtnText}>+ Add</span>\n            </button>\n        </div>\n        {generateCodes()}\n    </div>\n  );\n}\n  \nconst styles = {\n  row: {\n      display: 'flex',\n      alignItems: 'center',\n      maxWidth: '90%',\n      justifyContent: 'center',\n  }\n};\n\nexport default BuildCodeTask;"]},"metadata":{},"sourceType":"module"}