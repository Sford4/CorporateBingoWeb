{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/components/orgAndUsers/orgDetails.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useCallback, useContext } from 'react'; // Context imports\n\nimport { OrgContext } from '../../contexts/orgContext'; // Style imports\n\nimport { MASTER, COLORS } from '../../styles/masterStyles'; // Component Imports\n\nimport { ChromePicker } from 'react-color';\nimport { useDropzone } from 'react-dropzone'; // Material UI\n\nconst OrgDetails = props => {\n  const {\n    contextOrg,\n    updateOrg,\n    setStuffToSave\n  } = useContext(OrgContext);\n  const {\n    0: org,\n    1: setOrg\n  } = useState(contextOrg);\n  useEffect(() => {\n    if (!contextOrg.id) {\n      setOrg(props.org);\n    } else {\n      setOrg(contextOrg);\n    }\n  }, [contextOrg]);\n\n  const changeRegularValues = (name, val) => {\n    updateOrg(_objectSpread({}, org, {\n      [name]: val\n    }));\n    setStuffToSave(true);\n  };\n\n  const onDrop = useCallback(acceptedFiles => {\n    const reader = new FileReader();\n\n    reader.onabort = () => alert('file reading was aborted');\n\n    reader.onerror = () => alert('file reading has failed');\n\n    const file = acceptedFiles[0]; // if(!supportedFileTypes.includes(file.type)){\n    //     this.openSnackBar(<FormattedMessage {...UserMessages.wrongFileType} />);\n    // } else if (file.size > 10000000){\n    //     this.openSnackBar(<FormattedMessage {...UserMessages.picTooBig} />);\n    // } else {\n\n    reader.addEventListener('load', () => changeRegularValues('freeSquareIcon', reader.result));\n    reader.readAsDataURL(file); // }\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n\n  if (!org.id) {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"LOADING\");\n  }\n\n  return __jsx(\"div\", {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: styles.subcontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: styles.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: _objectSpread({}, styles.labelColumn, {\n      width: '100%'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    style: styles.inputLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Org Name\"), __jsx(\"input\", {\n    style: _objectSpread({}, MASTER.wideRoundInput, {\n      marginTop: 5,\n      width: 'auto',\n      padding: '0 20px 0 20px',\n      maxWidth: 700\n    }),\n    value: org.name,\n    onChange: e => {\n      changeRegularValues('name', e.target.value);\n      setOrg(_objectSpread({}, org, {\n        name: e.target.value\n      }));\n    },\n    placeholder: 'e.g. Example Co',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    style: _objectSpread({}, styles.row, {\n      justifyContent: 'flex-start'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    style: styles.inputLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Default Square Colors\")), __jsx(\"div\", {\n    style: styles.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: _objectSpread({}, styles.labelColumn, {\n      alignItems: 'center',\n      flexDirection: 'row'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(ChromePicker, {\n    color: org.incompleteColor,\n    onChange: (color, e) => changeRegularValues('incompleteColor', color.hex.substring(1, color.hex.length)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), __jsx(\"span\", {\n    className: \"incomplete-color\",\n    style: _objectSpread({}, styles.exampleSquare, {\n      color: 'white',\n      backgroundColor: `#${org.incompleteColor}`,\n      textAlign: 'center'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Incomplete Square Example\")), __jsx(\"div\", {\n    style: _objectSpread({}, styles.labelColumn, {\n      alignItems: 'center',\n      flexDirection: 'row'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(ChromePicker, {\n    color: org.completeColor,\n    onChange: (color, e) => changeRegularValues('completeColor', color.hex.substring(1, color.hex.length)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), __jsx(\"span\", {\n    className: \"complete-color\",\n    style: _objectSpread({}, styles.exampleSquare, {\n      color: 'white',\n      backgroundColor: `#${org.completeColor}`,\n      textAlign: 'center'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Complete Square Example\"))), __jsx(\"div\", {\n    style: _objectSpread({}, styles.row, {\n      justifyContent: 'flex-start'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    style: _objectSpread({}, styles.inputLabel, {\n      marginTop: 20\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Default \\\"Free Square\\\" Image\")), __jsx(\"div\", {\n    style: _objectSpread({}, styles.row, {\n      alignItems: 'center',\n      marginTop: 0\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      width: '50%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, __jsx(\"div\", _extends({}, getRootProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), __jsx(\"input\", _extends({}, getInputProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })), isDragActive ? __jsx(\"div\", {\n    style: styles.dropzone,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Click or drag to upload an image\"), __jsx(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Images must be square, and images with a transparent background work best.\")) : __jsx(\"div\", {\n    style: styles.dropzone,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Click or drag here to change image\"), __jsx(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Images must be square, and images with a transparent background work best.\"))), __jsx(\"div\", {\n    style: _objectSpread({}, styles.exampleSquare, {\n      backgroundColor: `#${org.completeColor}`\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    style: styles.image,\n    src: !org.freeSquareIcon ? '../../static/circle_check.png' : org.freeSquareIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    style: _objectSpread({}, styles.labelColumn, {\n      alignItems: 'center',\n      flexDirection: 'row'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, __jsx(ChromePicker, {\n    color: org.primaryColor,\n    onChange: (color, e) => changeRegularValues('primaryColor', color.hex.substring(1, color.hex.length)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), __jsx(\"span\", {\n    className: \"complete-color\",\n    style: _objectSpread({}, styles.exampleSquare, {\n      color: 'white',\n      backgroundColor: `#${org.primaryColor}`\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Branding Primary Color\")))));\n};\n\nconst styles = {\n  container: {\n    width: '100%',\n    height: '100%',\n    maxHeight: 700,\n    overflowY: 'scroll',\n    overflowX: 'overlay',\n    paddingBottom: 10,\n    padding: '3% 5%'\n  },\n  subcontainer: {},\n  row: {\n    display: 'flex',\n    //   flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    width: '100%',\n    marginTop: 15\n  },\n  labelColumn: {\n    width: '50%',\n    minWidth: 300,\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  inputLabel: {\n    marginLeft: 15,\n    color: COLORS.primary,\n    fontSize: 17\n  },\n  exampleSquare: {\n    width: 200,\n    height: 200,\n    minWidth: 200,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    border: '1px solid black',\n    marginRight: 10\n  },\n  image: {\n    width: '80%',\n    height: '80%'\n  },\n  dropzone: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 200,\n    height: 200,\n    border: '2px dotted black',\n    marginRight: 10,\n    cursor: 'pointer',\n    outline: 'none'\n  }\n};\nexport default OrgDetails;","map":{"version":3,"sources":["/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/components/orgAndUsers/orgDetails.js"],"names":["useState","useEffect","useCallback","useContext","OrgContext","MASTER","COLORS","ChromePicker","useDropzone","OrgDetails","props","contextOrg","updateOrg","setStuffToSave","org","setOrg","id","changeRegularValues","name","val","onDrop","acceptedFiles","reader","FileReader","onabort","alert","onerror","file","addEventListener","result","readAsDataURL","getRootProps","getInputProps","isDragActive","styles","container","subcontainer","row","labelColumn","width","inputLabel","wideRoundInput","marginTop","padding","maxWidth","e","target","value","justifyContent","alignItems","flexDirection","incompleteColor","color","hex","substring","length","exampleSquare","backgroundColor","textAlign","completeColor","display","dropzone","image","freeSquareIcon","primaryColor","height","maxHeight","overflowY","overflowX","paddingBottom","minWidth","marginLeft","primary","fontSize","border","marginRight","cursor","outline"],"mappings":"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","sourcesContent":["import { useState, useEffect, useCallback, useContext } from 'react';\n\n// Context imports\nimport { OrgContext } from '../../contexts/orgContext';\n\n// Style imports\nimport { MASTER, COLORS } from '../../styles/masterStyles';\n\n// Component Imports\nimport { ChromePicker } from 'react-color';\nimport {useDropzone} from 'react-dropzone';\n\n// Material UI\n\nconst OrgDetails = (props) => {\n\n    const { contextOrg, updateOrg, setStuffToSave } = useContext(OrgContext);\n\n    const [org, setOrg] = useState(contextOrg);\n\n    useEffect(() => {\n        if(!contextOrg.id){\n            setOrg(props.org);\n        } else {\n            setOrg(contextOrg);\n        }\n    }, [contextOrg])\n\n    const changeRegularValues = (name, val) => {\n        updateOrg({\n            ...org,\n            [name]: val\n        })\n        setStuffToSave(true);\n    }\n\n    const onDrop = useCallback(acceptedFiles => {\n        const reader = new FileReader();\n        reader.onabort = () => alert('file reading was aborted')\n        reader.onerror = () => alert('file reading has failed')\n        const file = acceptedFiles[0];\n        // if(!supportedFileTypes.includes(file.type)){\n        //     this.openSnackBar(<FormattedMessage {...UserMessages.wrongFileType} />);\n        // } else if (file.size > 10000000){\n        //     this.openSnackBar(<FormattedMessage {...UserMessages.picTooBig} />);\n        // } else {\n            reader.addEventListener('load', () =>\n                changeRegularValues('freeSquareIcon', reader.result)\n            );\n            reader.readAsDataURL(file);\n        // }\n    }, []);\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n\n    if(!org.id){\n        return <div>LOADING</div>\n    }\n\n    return (\n        <div style={styles.container}>\n            <div style={styles.subcontainer}>\n                <div style={styles.row}>\n                    <div style={{ ...styles.labelColumn, width: '100%',}}>\n                        <span style={styles.inputLabel}>Org Name</span>\n                        <input \n                            style={{ ...MASTER.wideRoundInput, marginTop: 5, width: 'auto', padding: '0 20px 0 20px', maxWidth: 700 }} \n                            value={org.name} \n                            onChange={e => {\n                                changeRegularValues('name', e.target.value);\n                                setOrg({...org, name: e.target.value });\n                            }} \n                            placeholder={'e.g. Example Co'}\n                        />\n                    </div>\n                </div>\n                <div style={{ ...styles.row, justifyContent: 'flex-start' }}>\n                    <span style={styles.inputLabel}>Default Square Colors</span>\n                </div>\n                <div style={styles.row}>\n                    <div style={{ ...styles.labelColumn, alignItems: 'center', flexDirection: 'row' }}>\n                        <ChromePicker color={org.incompleteColor} onChange={(color, e) => changeRegularValues('incompleteColor', color.hex.substring(1, color.hex.length))} />\n                        <span className='incomplete-color' style={{ ...styles.exampleSquare, color: 'white', backgroundColor: `#${org.incompleteColor}`, textAlign: 'center'}}>Incomplete Square Example</span>\n                    </div>\n                    <div style={{ ...styles.labelColumn, alignItems: 'center', flexDirection: 'row' }}>\n                        <ChromePicker color={org.completeColor} onChange={(color, e) => changeRegularValues('completeColor', color.hex.substring(1, color.hex.length))} />\n                        <span className='complete-color' style={{ ...styles.exampleSquare, color: 'white', backgroundColor: `#${org.completeColor}`, textAlign: 'center'}}>Complete Square Example</span>\n                    </div>\n                </div>\n                <div style={{ ...styles.row, justifyContent: 'flex-start' }}>\n                    <span style={{ ...styles.inputLabel, marginTop: 20 }}>Default \"Free Square\" Image</span>\n                </div>\n                <div style={{ ...styles.row, alignItems: 'center', marginTop: 0 }}>\n                    <div style={{ display: 'flex', width: '50%' }}>\n                        <div {...getRootProps()}>\n                            <input {...getInputProps()} />\n                            {\n                            isDragActive ?\n                                <div style={styles.dropzone}>\n                                    <p style={{textAlign: 'center'}}>Click or drag to upload an image</p>\n                                    <p style={{textAlign: 'center'}}>Images must be square, and images with a transparent background work best.</p>\n                                </div> : \n                                <div style={styles.dropzone}>\n                                    <p style={{textAlign: 'center'}}>Click or drag here to change image</p>\n                                    <p style={{textAlign: 'center'}}>Images must be square, and images with a transparent background work best.</p>\n                                </div>\n                            }\n                        </div>\n                        <div style={{ ...styles.exampleSquare, backgroundColor: `#${org.completeColor}`}}>\n                            <img style={styles.image} src={!org.freeSquareIcon ? '../../static/circle_check.png'  : org.freeSquareIcon}  />\n                        </div>\n                    </div>\n                    <div style={{ ...styles.labelColumn, alignItems: 'center', flexDirection: 'row' }}>\n                        <ChromePicker color={org.primaryColor} onChange={(color, e) => changeRegularValues('primaryColor', color.hex.substring(1, color.hex.length))} />\n                        <span className='complete-color' style={{ ...styles.exampleSquare, color: 'white', backgroundColor: `#${org.primaryColor}`}}>Branding Primary Color</span>\n                    </div>\n                </div>    \n            </div>\n        </div>\n    )\n  };\n\n  const styles = {\n      container: {\n          width: '100%',\n          height: '100%',\n          maxHeight: 700,\n          overflowY: 'scroll',\n          overflowX: 'overlay',\n          paddingBottom: 10,\n          padding: '3% 5%',\n      },\n      subcontainer: {\n      },\n      row: {\n          display: 'flex',\n        //   flexWrap: 'wrap',\n          justifyContent: 'space-around',\n          width: '100%',\n          marginTop: 15\n      },\n      labelColumn: {\n          width: '50%',\n          minWidth: 300,\n          display: 'flex',\n          flexDirection: 'column',\n      },\n      inputLabel: {\n          marginLeft: 15,\n          color: COLORS.primary,\n          fontSize: 17,\n      },\n      exampleSquare: {\n          width: 200,\n          height: 200,\n          minWidth: 200,\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          border: '1px solid black',\n          marginRight: 10\n      },\n      image: {\n          width: '80%',\n          height: '80%',\n      },\n      dropzone: {\n          display: 'flex', \n          flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 200,\n        height: 200,\n        border: '2px dotted black',\n        marginRight: 10,\n        cursor: 'pointer',\n        outline: 'none',\n    }\n  }\n  \n  export default OrgDetails;"]},"metadata":{},"sourceType":"module"}