{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/components/orgAndUsers/editUser.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useContext } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport FULL_URL from '../../constants/constants'; // context imports\n// Style imports\n\nimport { MASTER, COLORS } from '../../styles/masterStyles';\n\nconst EditUser = props => {\n  const {\n    0: userAlias,\n    1: setUserName\n  } = useState(props.user.userAlias);\n  const {\n    0: email,\n    1: setEmail\n  } = useState(props.user.email);\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: confirmPassword,\n    1: setConfirmPassword\n  } = useState('');\n\n  const openWarning = message => {\n    alert(`Woah there! ${message}`);\n  };\n\n  const validEmail = email => {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  const signup = async () => {\n    if (!userAlias) {\n      openWarning('Must have a user name!');\n      return;\n    }\n\n    if (!email || !validEmail(email)) {\n      openWarning('Must have a valid email!');\n      return;\n    }\n\n    if (!password || password !== confirmPassword) {\n      openWarning('Passwords must match!');\n      return;\n    }\n\n    try {\n      const request = await fetch(`${FULL_URL}/users/signup`, {\n        method: 'POST',\n        // headers: {\n        //   'Accept': 'application/json',\n        //   'Content-Type': 'application/json'\n        // },\n        body: _JSON$stringify({\n          userAlias,\n          email,\n          password,\n          roleLevel: 2,\n          org: props.org.id,\n          orgName: props.org.orgName\n        })\n      });\n      const user = await request.json();\n\n      if (user && user.id) {\n        props.openPopup(false, false);\n        props.updateUsers('new', user);\n      } else {\n        alert('There was a problem creating this user...');\n      }\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const updateUser = async () => {\n    if (!userAlias) {\n      openWarning('Must have a user name!');\n      return;\n    }\n\n    if (!email || !validEmail(email)) {\n      openWarning('Must have a valid email!');\n      return;\n    }\n\n    if (password && password !== confirmPassword) {\n      openWarning('Passwords must match!');\n      return;\n    }\n\n    console.log('user updating', props.user);\n\n    try {\n      const request = await fetch(`${FULL_URL}/users/update/${props.user.id}`, {\n        method: 'POST',\n        // headers: {\n        //   'Accept': 'application/json',\n        //   'Content-Type': 'application/json',\n        //   'Authorization': `Bearer ${localStorage.getItem('bingo_token')}`\n        // },\n        body: _JSON$stringify({\n          id: props.user.id,\n          userAlias,\n          email,\n          password,\n          org: props.org.id,\n          orgName: props.org.orgName,\n          roleLevel: 2\n        })\n      });\n      const user = await request.json();\n      console.log('from backend', {\n        user\n      });\n\n      if (user && user.id) {\n        props.openPopup(false, false);\n        props.updateUsers('edit', user);\n      } else {\n        alert('There was a problem updating this user...');\n      }\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const deleteUser = async id => {\n    if (confirm(`Are you sure? This will delete ${userAlias} forever!`)) {\n      try {\n        const request = await fetch(`${FULL_URL}/users/delete${props.user.id}`, {\n          method: 'POST' // headers: {\n          //   'Accept': 'application/json',\n          //   'Content-Type': 'application/json',\n          //   'Authorization': `Bearer ${localStorage.getItem('bingo_token')}`\n          // },\n\n        });\n        const response = await request.json();\n\n        if (response && response.id) {\n          props.updateUsers('delete', id);\n          props.openPopup(false, false);\n        } else {\n          alert('There was a problem deleting this user...');\n        }\n      } catch (err) {\n        alert(err);\n      }\n    }\n  };\n\n  return __jsx(\"div\", {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: styles.subcontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    style: MASTER.wideRoundInput,\n    value: userAlias || '',\n    onChange: e => setUserName(e.target.value),\n    placeholder: 'User Name',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    style: MASTER.wideRoundInput,\n    value: email || '',\n    onChange: e => setEmail(e.target.value),\n    placeholder: 'Email',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    style: MASTER.wideRoundInput,\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    type: \"password\",\n    placeholder: 'New Password',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    style: MASTER.wideRoundInput,\n    value: confirmPassword,\n    onChange: e => setConfirmPassword(e.target.value),\n    type: \"password\",\n    placeholder: 'Confirm New Password',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), props.newUser ? __jsx(\"button\", {\n    style: _objectSpread({}, MASTER.wideRoundBtn, {\n      marginTop: 20\n    }),\n    onClick: () => signup(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    style: MASTER.wideRoundBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Save\")) : __jsx(\"div\", {\n    style: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    style: _objectSpread({}, MASTER.wideRoundBtn, {\n      backgroundColor: 'red',\n      marginTop: 20\n    }),\n    onClick: () => deleteUser(props.user.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    style: MASTER.wideRoundBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"Delete User\")), __jsx(\"button\", {\n    style: _objectSpread({}, MASTER.wideRoundBtn, {\n      marginTop: 20\n    }),\n    onClick: () => updateUser(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    style: MASTER.wideRoundBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"Save\")))));\n};\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n    paddingBottom: 10,\n    minWidth: 300\n  },\n  subcontainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n    maxWidth: 400\n  }\n};\nexport default EditUser;","map":{"version":3,"sources":["/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/components/orgAndUsers/editUser.js"],"names":["useState","useEffect","useContext","fetch","FULL_URL","MASTER","COLORS","EditUser","props","userAlias","setUserName","user","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","openWarning","message","alert","validEmail","re","test","String","toLowerCase","signup","request","method","body","roleLevel","org","id","orgName","json","openPopup","updateUsers","err","updateUser","console","log","deleteUser","confirm","response","styles","container","subcontainer","wideRoundInput","e","target","value","newUser","wideRoundBtn","marginTop","wideRoundBtnText","width","display","flexDirection","alignItems","backgroundColor","justifyContent","height","paddingBottom","minWidth","maxWidth"],"mappings":"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","sourcesContent":["\n\nimport { useState, useEffect, useContext } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport FULL_URL from '../../constants/constants';\n\n// context imports\n\n// Style imports\nimport { MASTER, COLORS } from '../../styles/masterStyles';\n\nconst EditUser = (props) => {\n\n    const [userAlias, setUserName] = useState(props.user.userAlias);\n    const [email, setEmail] = useState(props.user.email);\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const openWarning = (message) => {\n            alert(\n                `Woah there! ${message}`,\n            );\n    }\n\n    const validEmail = email => {\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    }\n    \n    const signup = async () => {\n        if(!userAlias){\n            openWarning('Must have a user name!');\n            return;\n        }\n        if(!email || !validEmail(email)){\n            openWarning('Must have a valid email!');\n            return;\n        }\n        if(!password || password !== confirmPassword){\n            openWarning('Passwords must match!');\n            return;\n        }\n        try {\n            const request = await fetch(`${FULL_URL}/users/signup`, {\n                method: 'POST',\n                // headers: {\n                //   'Accept': 'application/json',\n                //   'Content-Type': 'application/json'\n                // },\n                body: JSON.stringify({\n                    userAlias,\n                    email,\n                    password,\n                    roleLevel: 2,\n                    org: props.org.id,\n                    orgName: props.org.orgName,\n                })\n              })\n              const user = await request.json();\n              if(user && user.id){\n                props.openPopup(false, false);\n                props.updateUsers('new', user);\n              } else {\n                  alert('There was a problem creating this user...');\n              }\n        } catch (err) { alert( err ) }\n    }\n\n    const updateUser = async () => {\n        if(!userAlias){\n            openWarning('Must have a user name!');\n            return;\n        }\n        if(!email || !validEmail(email)){\n            openWarning('Must have a valid email!');\n            return;\n        }\n        if(password && password !== confirmPassword){\n            openWarning('Passwords must match!');\n            return;\n        }\n        console.log('user updating', props.user)\n        try {\n            const request = await fetch(`${FULL_URL}/users/update/${props.user.id}`, {\n                method: 'POST',\n                // headers: {\n                //   'Accept': 'application/json',\n                //   'Content-Type': 'application/json',\n                //   'Authorization': `Bearer ${localStorage.getItem('bingo_token')}`\n                // },\n                body: JSON.stringify({\n                    id: props.user.id,\n                    userAlias,\n                    email,\n                    password,\n                    org: props.org.id,\n                    orgName: props.org.orgName,\n                    roleLevel: 2\n                })\n              })\n              const user = await request.json();\n              console.log('from backend', {user})\n              if(user && user.id){\n                props.openPopup(false, false);\n                props.updateUsers('edit', user);\n              } else {\n                  alert('There was a problem updating this user...');\n              }\n        } catch (err) { alert( err ) }\n    }\n\n    const deleteUser = async id => {\n        if(confirm(`Are you sure? This will delete ${userAlias} forever!`)){\n            try {\n                const request = await fetch(`${FULL_URL}/users/delete${props.user.id}`, {\n                    method: 'POST',\n                    // headers: {\n                    //   'Accept': 'application/json',\n                    //   'Content-Type': 'application/json',\n                    //   'Authorization': `Bearer ${localStorage.getItem('bingo_token')}`\n                    // },\n                  })\n                  const response = await request.json();\n                  if(response && response.id){\n                    props.updateUsers('delete', id);\n                    props.openPopup(false, false);\n                  } else {\n                      alert('There was a problem deleting this user...');\n                  }\n            } catch (err) { alert( err ) }\n        }\n    }\n\n\n    return (\n        <div style={styles.container}>\n            <div style={styles.subcontainer}>\n                <input \n                    style={MASTER.wideRoundInput} \n                    value={userAlias || ''} \n                    onChange={e => setUserName(e.target.value)} \n                    placeholder={'User Name'}\n                />\n                <input \n                    style={MASTER.wideRoundInput} \n                    value={email || ''} \n                    onChange={e => setEmail(e.target.value)} \n                    placeholder={'Email'}\n                />\n                <input \n                    style={MASTER.wideRoundInput} \n                    value={password} \n                    onChange={e => setPassword(e.target.value)} \n                    type='password'\n                    placeholder={'New Password'}\n                />\n                <input \n                    style={MASTER.wideRoundInput} \n                    value={confirmPassword} \n                    onChange={e => setConfirmPassword(e.target.value)} \n                    type='password'\n                    placeholder={'Confirm New Password'}\n                />\n                {props.newUser ?\n                    <button \n                        style={{ ...MASTER.wideRoundBtn, marginTop: 20 }} \n                        onClick={() => signup()}\n                    >\n                        <span style={MASTER.wideRoundBtnText}>Save</span>\n                    </button> :\n                    <div style={{ width: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                        <button \n                            style={{ ...MASTER.wideRoundBtn, backgroundColor: 'red', marginTop: 20 }} \n                            onClick={() => deleteUser(props.user.id)}\n                        >\n                            <span style={MASTER.wideRoundBtnText}>Delete User</span>\n                        </button>\n                        <button \n                            style={{ ...MASTER.wideRoundBtn, marginTop: 20 }} \n                            onClick={() => updateUser()}\n                        >\n                            <span style={MASTER.wideRoundBtnText}>Save</span>\n                        </button>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n  };\n\n  const styles = {\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n        paddingBottom: 10,\n        minWidth: 300\n    },\n    subcontainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n        maxWidth: 400,\n    }\n}\n  \n  export default EditUser;"]},"metadata":{},"sourceType":"module"}