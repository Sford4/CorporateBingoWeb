{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/components/Play/Tasks/TaskQRCode.js\";\nvar __jsx = React.createElement;\n// Must have generated a QR like {\"squareID\": \"8\"}\n// if the squareID prop in the object in the QR code matches the id of the task, task completed\nimport React, { useState, useEffect } from 'react'; // import QrReader from 'react-qr-reader';\n// context imports\n// Style imports\n\nimport { MASTER, COLORS } from '../../../styles/masterStyles';\n\nconst TaskQRCode = props => {\n  const {\n    0: hasQR,\n    1: setHasQR\n  } = useState(false);\n  const {\n    0: propComplete,\n    1: setPropComplete\n  } = useState(props.task.complete);\n\n  const setComplete = bool => {\n    props.updateTask(_objectSpread({}, props.task, {\n      complete: bool,\n      task: {\n        taskType: 'qrCode',\n        answer: bool\n      }\n    }));\n    props.completeSquare(bool);\n  };\n\n  return __jsx(\"div\", {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      fontWeight: 'bold',\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Note: This task requires scanning a QR code, which can only be done with our mobile app on a smart phone.\"));\n};\n\nconst styles = {\n  container: {\n    height: 400,\n    width: '100%',\n    backgroundColor: '#fff',\n    alignItems: 'center' // justifyContent: 'center',\n\n  }\n};\nexport default TaskQRCode;","map":{"version":3,"sources":["/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/components/Play/Tasks/TaskQRCode.js"],"names":["React","useState","useEffect","MASTER","COLORS","TaskQRCode","props","hasQR","setHasQR","propComplete","setPropComplete","task","complete","setComplete","bool","updateTask","taskType","answer","completeSquare","styles","container","fontWeight","color","height","width","backgroundColor","alignItems"],"mappings":";;;AAAA;AACA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA4C,OAA5C,C,CAEA;AAEA;AAEA;;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,8BAA/B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAE1B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAA,OAACQ,YAAD;AAAA,OAAeC;AAAf,MAAkCT,QAAQ,CAACK,KAAK,CAACK,IAAN,CAAWC,QAAZ,CAAhD;;AAEA,QAAMC,WAAW,GAAIC,IAAD,IAAU;AAC1BR,IAAAA,KAAK,CAACS,UAAN,mBACOT,KAAK,CAACK,IADb;AAEIC,MAAAA,QAAQ,EAAEE,IAFd;AAGIH,MAAAA,IAAI,EAAE;AACFK,QAAAA,QAAQ,EAAE,QADR;AAEFC,QAAAA,MAAM,EAAEH;AAFN;AAHV;AAQAR,IAAAA,KAAK,CAACY,cAAN,CAAqBJ,IAArB;AACH,GAVD;;AAYF,SACE;AAAK,IAAA,KAAK,EAAEK,MAAM,CAACC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE,MAAd;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iHADJ,CADF;AAKD,CAtBD;;AAwBA,MAAMH,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE;AACTG,IAAAA,MAAM,EAAE,GADC;AAETC,IAAAA,KAAK,EAAE,MAFE;AAGTC,IAAAA,eAAe,EAAE,MAHR;AAITC,IAAAA,UAAU,EAAE,QAJH,CAKT;;AALS;AADE,CAAf;AAUA,eAAerB,UAAf","sourcesContent":["// Must have generated a QR like {\"squareID\": \"8\"}\n// if the squareID prop in the object in the QR code matches the id of the task, task completed\n\nimport React, { useState, useEffect, } from 'react';\n\n// import QrReader from 'react-qr-reader';\n\n// context imports\n\n// Style imports\nimport { MASTER, COLORS } from '../../../styles/masterStyles';\n\nconst TaskQRCode = (props) => {\n    \n    const [hasQR, setHasQR] = useState(false);\n    const [propComplete, setPropComplete] = useState(props.task.complete);\n\n    const setComplete = (bool) => {\n        props.updateTask({\n            ...props.task,\n            complete: bool,\n            task: {\n                taskType: 'qrCode',\n                answer: bool,\n            }\n        })\n        props.completeSquare(bool);\n    } \n\n  return (\n    <div style={styles.container}> \n        <div style={{ fontWeight: 'bold', color: 'red' }}>Note: This task requires scanning a QR code, which can only be done with our mobile app on a smart phone.</div>\n    </div>\n  );\n}\n  \nconst styles = {\n  container: {\n    height: 400,\n    width: '100%',\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    // justifyContent: 'center',\n  },\n};\n\nexport default TaskQRCode;"]},"metadata":{},"sourceType":"module"}