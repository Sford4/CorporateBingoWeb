{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/pages/manageBoards/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport moment from 'moment'; // context imports\n// Style imports\n\nimport { MASTER, COLORS } from '../../styles/masterStyles'; // component imports\n\nimport Link from 'next/link';\nimport Layout from '../../components/Layout'; // Material UI\n\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow'; // context imports\n\nimport { OrgContext } from '../../contexts/orgContext';\nimport { ManageBoardsContext } from '../../contexts/manageBoardsContext';\nimport { UserContext } from '../../contexts/userContext';\nimport { SUPPORTS_PERFORMANCE_USER_TIMING } from '../../node_modules/next/dist/next-server/lib/utils';\n\nconst ManageBoardsHome = props => {\n  const router = useRouter();\n  const {\n    contextOrg,\n    getOrg\n  } = useContext(OrgContext);\n  const {\n    newBoard\n  } = useContext(ManageBoardsContext);\n  const {\n    user,\n    storeUser,\n    logout\n  } = useContext(UserContext);\n  const {\n    0: searchText,\n    1: setSearchText\n  } = useState('');\n  const {\n    0: boards,\n    1: setBoards\n  } = useState(contextOrg.boards || []);\n\n  const searchForBoard = () => {\n    setSearchText('');\n    setBoards(dummyBoards);\n  };\n\n  useEffect(() => {\n    if (!user) {\n      if (localStorage.getItem('bingo_user')) {\n        storeUser(JSON.parse(localStorage.getItem('bingo_user')));\n      } else {\n        logout();\n      }\n    }\n\n    if (!contextOrg.id && user && !user.org) {\n      router.push('/joinGame');\n    } else if (!contextOrg.id && user && user.org) {\n      getOrg(user.org);\n    }\n\n    if (contextOrg && contextOrg.boards && contextOrg.boards.length !== boards.length) {\n      setBoards(contextOrg.boards);\n    }\n  }, [contextOrg, user]);\n\n  const generateBoardRows = () => {\n    if (boards.length) {\n      return boards.map((board, index) => {\n        return __jsx(Link, {\n          key: board.id,\n          href: `manageBoards/[boardID]`,\n          as: `manageBoards/${board.id}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, __jsx(TableRow, {\n          style: {\n            cursor: 'pointer'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, __jsx(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, board.title), __jsx(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, board.numSquares), __jsx(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, moment(board.created).format(\"MMM Do, YYYY\")), __jsx(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, moment(board.modified).format(\"MMM Do, YYYY\"))));\n      });\n    }\n\n    return __jsx(TableRow, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"No boards yet... click NEW BOARD to make one!\"), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }));\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: MASTER.pageTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"MANAGE BOARDS\"), __jsx(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      padding: '1% 3%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    style: _objectSpread({}, MASTER.wideRoundInput, {\n      maxWidth: 300\n    }),\n    value: searchText,\n    onChange: e => setSearchText(e.target.value),\n    placeholder: 'Search by name or access code ',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    style: _objectSpread({}, MASTER.wideRoundBtn, {\n      width: 100\n    }),\n    onClick: () => searchForBoard(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: MASTER.wideRoundBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"SEARCH\"))), __jsx(Table, {\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"NAME\"), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"TASKS\"), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"CREATED\"), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"LAST MODIFIED\"))), __jsx(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, generateBoardRows())))), __jsx(\"button\", {\n    style: _objectSpread({}, MASTER.wideRoundBtn, {\n      width: 150,\n      position: 'absolute',\n      bottom: 30,\n      right: 20,\n      height: 45\n    }),\n    onClick: () => newBoard(contextOrg.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: MASTER.wideRoundBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"NEW BOARD\"))));\n};\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#fff'\n  }\n};\nexport default ManageBoardsHome;","map":{"version":3,"sources":["/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/pages/manageBoards/index.js"],"names":["React","useState","useEffect","useContext","useRouter","moment","MASTER","COLORS","Link","Layout","Paper","Table","TableBody","TableCell","TableHead","TableRow","OrgContext","ManageBoardsContext","UserContext","SUPPORTS_PERFORMANCE_USER_TIMING","ManageBoardsHome","props","router","contextOrg","getOrg","newBoard","user","storeUser","logout","searchText","setSearchText","boards","setBoards","searchForBoard","dummyBoards","localStorage","getItem","JSON","parse","id","org","push","length","generateBoardRows","map","board","index","cursor","title","numSquares","created","format","modified","width","styles","container","pageTitle","padding","display","wideRoundInput","maxWidth","e","target","value","wideRoundBtn","wideRoundBtnText","position","bottom","right","height","flexDirection","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport moment from 'moment';\n\n// context imports\n\n// Style imports\nimport { MASTER, COLORS } from '../../styles/masterStyles';\n\n// component imports\nimport Link from 'next/link';\nimport Layout from '../../components/Layout';\n\n// Material UI\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n// context imports\nimport { OrgContext } from '../../contexts/orgContext';\nimport { ManageBoardsContext } from '../../contexts/manageBoardsContext';\nimport { UserContext } from '../../contexts/userContext';\nimport { SUPPORTS_PERFORMANCE_USER_TIMING } from '../../node_modules/next/dist/next-server/lib/utils';\n\nconst ManageBoardsHome = (props) => {\n\n    const router = useRouter();\n\n    const { contextOrg, getOrg } = useContext(OrgContext);\n    const { newBoard } = useContext(ManageBoardsContext);\n    const { user, storeUser, logout } = useContext(UserContext);\n\n  const [searchText, setSearchText] = useState('');\n  const [boards, setBoards] = useState(contextOrg.boards || []);\n\n  const searchForBoard = () => {\n    setSearchText('');\n    setBoards(dummyBoards)\n  }\n\n  useEffect(() => {\n    if(!user){\n        if(localStorage.getItem('bingo_user')){\n            storeUser(JSON.parse(localStorage.getItem('bingo_user')));\n        } else {\n            logout();\n        }\n    }\n    if(!contextOrg.id && user && !user.org){\n        router.push('/joinGame');\n    }else if(!contextOrg.id && user && user.org){\n        getOrg(user.org);\n    }\n    if(contextOrg && contextOrg.boards && contextOrg.boards.length !== boards.length){\n        setBoards(contextOrg.boards);\n    }\n  }, [contextOrg, user])\n\n  const generateBoardRows = () => {\n\t\tif(boards.length){\n\t\t\treturn boards.map((board, index) => {\n\t\t\t\treturn (\n                    <Link key={board.id} href={`manageBoards/[boardID]`} as={`manageBoards/${board.id}`}>\n                        <TableRow style={{ cursor: 'pointer' }}>\n                            <TableCell>{board.title}</TableCell>\n                            <TableCell>{board.numSquares}</TableCell>\n                            <TableCell>{moment(board.created).format(\"MMM Do, YYYY\")}</TableCell>\n                            <TableCell>{moment(board.modified).format(\"MMM Do, YYYY\")}</TableCell>\n                        </TableRow>\n                    </Link>\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\t\treturn <TableRow style={{width: '100%'}}><TableCell>No boards yet... click NEW BOARD to make one!</TableCell><TableCell></TableCell><TableCell></TableCell><TableCell></TableCell></TableRow>\n  }\n\n  return (\n      <Layout>\n        <div style={styles.container}>\n            <div style={MASTER.pageTitle}>MANAGE BOARDS</div>\n            <Paper>\n                <div style={{ padding: '1% 3%' }}>\n                    <div style={{ display: 'flex' }}>\n                        <input \n                            style={{ ...MASTER.wideRoundInput, maxWidth: 300 }} \n                            value={searchText} \n                            onChange={(e) => setSearchText(e.target.value)} \n                            placeholder={'Search by name or access code '}\n                        />\n                        <button \n                            style={{ ...MASTER.wideRoundBtn, width: 100 }} \n                            onClick={() => searchForBoard()}\n                        >\n                            <div style={MASTER.wideRoundBtnText}>SEARCH</div>\n                        </button>\n                    </div>\n                    <Table style={{ width:\"100%\" }}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>NAME</TableCell>\n                                <TableCell>TASKS</TableCell>\n                                <TableCell>CREATED</TableCell>\n                                <TableCell>LAST MODIFIED</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {generateBoardRows()}\n                        </TableBody>\n                    </Table>\n                </div>\n            </Paper>\n            <button \n                style={{ ...MASTER.wideRoundBtn, width: 150, position: 'absolute', bottom: 30, right: 20, height: 45 }} \n                onClick={() => newBoard(contextOrg.id)}\n            >\n                <div style={MASTER.wideRoundBtnText}>NEW BOARD</div>\n            </button>\n        </div>\n    </Layout>\n  );\n}\n  \nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#fff',\n  },\n};\n\nexport default ManageBoardsHome;"]},"metadata":{},"sourceType":"module"}