{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/contexts/orgContext.js\";\nvar __jsx = React.createElement;\nimport React, { createContext, useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport FULL_URL from '../constants/constants';\nexport var OrgContext = createContext();\n\nvar OrgContextProvider = function OrgContextProvider(props) {\n  var _useState = useState({}),\n      org = _useState[0],\n      setOrg = _useState[1];\n\n  var _useState2 = useState([]),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  var _useState3 = useState([]),\n      boards = _useState3[0],\n      setBoards = _useState3[1];\n\n  var _useState4 = useState(false),\n      stuffToSave = _useState4[0],\n      setStuffToSave = _useState4[1];\n\n  var getOrg =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(orgID) {\n      var request, _org;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('in get org', orgID);\n              _context.prev = 1;\n              _context.next = 4;\n              return fetch(\"\".concat(FULL_URL, \"/orgs/\").concat(orgID), {\n                method: 'POST' // headers: {\n                //   'Accept': 'application/json',\n                //   'Content-Type': 'application/json',\n                //   'Authorization': `Bearer ${localStorage.getItem('bingo_token')}`\n                // },\n\n              });\n\n            case 4:\n              request = _context.sent;\n              _context.next = 7;\n              return request.json();\n\n            case 7:\n              _org = _context.sent;\n              console.log('GOT ORG', _org);\n              setUsers(_org.userList);\n              setBoards(_org.boards);\n              setOrg(_org);\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](1);\n              alert(_context.t0);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 14]]);\n    }));\n\n    return function getOrg(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var saveOrg =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(orgToSave) {\n      var request, _org2;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log('in save org', orgToSave);\n              _context2.prev = 1;\n              _context2.next = 4;\n              return fetch(\"\".concat(FULL_URL, \"/orgs/update/\").concat(orgToSave.id), {\n                method: 'POST',\n                // headers: {\n                //   'Accept': 'application/json',\n                //   'Content-Type': 'application/json',\n                //   'Authorization': `Bearer ${localStorage.getItem('bingo_token')}`\n                // },\n                body: _JSON$stringify(orgToSave)\n              });\n\n            case 4:\n              request = _context2.sent;\n              _context2.next = 7;\n              return request.json();\n\n            case 7:\n              _org2 = _context2.sent;\n              setOrg(_org2);\n              setStuffToSave(false);\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](1);\n              alert(_context2.t0);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 12]]);\n    }));\n\n    return function saveOrg(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(OrgContext.Provider, {\n    value: {\n      contextOrg: org,\n      contextOrgUsers: users,\n      contextOrgBoards: boards,\n      updateOrg: setOrg,\n      getOrg: getOrg,\n      saveOrg: saveOrg,\n      setStuffToSave: setStuffToSave,\n      stuffToSave: stuffToSave\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default OrgContextProvider;","map":{"version":3,"sources":["/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/contexts/orgContext.js"],"names":["React","createContext","useState","useEffect","fetch","FULL_URL","OrgContext","OrgContextProvider","props","org","setOrg","users","setUsers","boards","setBoards","stuffToSave","setStuffToSave","getOrg","orgID","console","log","method","request","json","userList","alert","saveOrg","orgToSave","id","body","contextOrg","contextOrgUsers","contextOrgBoards","updateOrg","children"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport FULL_URL from '../constants/constants';\n\nexport const OrgContext = createContext();\n\nconst OrgContextProvider = (props) => {\n    const [ org, setOrg ] = useState({});\n    const [users, setUsers] = useState([]);\n    const [boards, setBoards] = useState([]);\n    const [ stuffToSave, setStuffToSave ] = useState(false);\n\n\n    const getOrg = async (orgID) => {\n        console.log('in get org', orgID)\n        try {\n            const request = await fetch(`${FULL_URL}/orgs/${orgID}`, {\n                method: 'POST',\n                // headers: {\n                //   'Accept': 'application/json',\n                //   'Content-Type': 'application/json',\n                //   'Authorization': `Bearer ${localStorage.getItem('bingo_token')}`\n                // },\n              })\n              const org = await request.json();\n              console.log('GOT ORG', org)\n              setUsers(org.userList);\n              setBoards(org.boards);\n              setOrg(org);\n            } catch(err) {alert(err)}\n    }\n\n    const saveOrg = async (orgToSave) => {\n        console.log('in save org', orgToSave)\n        try {\n            const request = await fetch(`${FULL_URL}/orgs/update/${orgToSave.id}`, {\n                method: 'POST',\n                // headers: {\n                //   'Accept': 'application/json',\n                //   'Content-Type': 'application/json',\n                //   'Authorization': `Bearer ${localStorage.getItem('bingo_token')}`\n                // },\n                body: JSON.stringify(orgToSave),\n              })\n              const org = await request.json();\n              setOrg(org);\n              setStuffToSave(false);\n            } catch(err) {alert(err)}\n    }\n\n    return (\n        <OrgContext.Provider value={{ \n            contextOrg: org, \n            contextOrgUsers: users,\n            contextOrgBoards: boards,\n            updateOrg: setOrg, \n            getOrg: getOrg, \n            saveOrg, \n            setStuffToSave,\n            stuffToSave,\n        }}>\n            {props.children}\n        </OrgContext.Provider>\n    )\n}\n\nexport default OrgContextProvider;"]},"metadata":{},"sourceType":"module"}