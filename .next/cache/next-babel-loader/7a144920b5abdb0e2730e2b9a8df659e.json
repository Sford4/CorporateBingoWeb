{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/components/ManageBoard/BoardBuilder/BuildSquareComponents/TaskHints.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react'; // Component imports\n\nimport { CSVDownload } from \"react-csv\"; // Material UI\n// import Switch from '@material-ui/core/Switch';\n\nimport Chip from '@material-ui/core/Chip'; // Style imports\n\nimport { MASTER, COLORS } from '../../../../styles/masterStyles';\n\nvar BuildHintTask = function BuildHintTask(props) {\n  var _useState = useState(props.hints),\n      hints = _useState[0],\n      setHints = _useState[1];\n\n  var _useState2 = useState(''),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  useEffect(function () {\n    setHints(hints);\n  }, [props.hints]);\n\n  var handleHintDelete = function handleHintDelete(deadHint) {\n    var hintList = hints.filter(function (hint) {\n      return hint !== deadHint;\n    });\n    setHints(hintList);\n    props.updateTask('hints', hintList);\n  };\n\n  var addHint = function addHint(text) {\n    if (text) {\n      var hintList = hints;\n\n      if (!hintList.includes(text)) {\n        setText('');\n        hintList.push(text), props.updateTask('hints', hintList);\n      } else {\n        alert(\"Cannot have two identical hints!\");\n      }\n    } else {\n      alert('Can\\'t add a blank hint!');\n    }\n  };\n\n  var generateHints = function generateHints() {\n    return hints.map(function (hint, index) {\n      return __jsx(Chip, {\n        key: \"hint\".concat(index),\n        label: hint,\n        onDelete: function onDelete() {\n          return handleHintDelete(hint);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      });\n    });\n  };\n\n  return __jsx(\"div\", {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: styles.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    style: _objectSpread({}, MASTER.wideRoundInput, {\n      width: 300,\n      marginTop: 0\n    }),\n    value: text,\n    onChange: function onChange(e) {\n      return setText(e.target.value);\n    },\n    placeholder: 'e.g. Behind the mirror',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    style: _objectSpread({}, MASTER.wideRoundBtn, {\n      width: 80,\n      marginTop: 0\n    }),\n    onClick: function onClick() {\n      return addHint(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    style: MASTER.wideRoundBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"+ Add\"))), __jsx(\"div\", {\n    style: {\n      width: '90%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, generateHints()));\n};\n\nvar styles = {\n  container: {\n    marginTop: 5,\n    marginBottom: 10,\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap'\n  },\n  row: {\n    display: 'flex',\n    alignItems: 'center',\n    maxWidth: '90%',\n    justifyContent: 'center'\n  }\n};\nexport default BuildHintTask;","map":{"version":3,"sources":["/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/components/ManageBoard/BoardBuilder/BuildSquareComponents/TaskHints.js"],"names":["React","useState","useEffect","CSVDownload","Chip","MASTER","COLORS","BuildHintTask","props","hints","setHints","text","setText","handleHintDelete","deadHint","hintList","filter","hint","updateTask","addHint","includes","push","alert","generateHints","map","index","styles","container","row","wideRoundInput","width","marginTop","e","target","value","wideRoundBtn","wideRoundBtnText","marginBottom","display","justifyContent","flexWrap","alignItems","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, } from 'react';\n\n// Component imports\nimport { CSVDownload } from \"react-csv\";\n\n// Material UI\n// import Switch from '@material-ui/core/Switch';\nimport Chip from '@material-ui/core/Chip';\n\n// Style imports\nimport { MASTER, COLORS } from '../../../../styles/masterStyles';\n\n\nconst BuildHintTask = (props) => {\n\n    const [hints, setHints] = useState(props.hints);\n    const [text, setText] = useState('');\n\n    useEffect(() => {\n        setHints(hints)\n    }, [props.hints]);\n\n    const handleHintDelete = deadHint => {\n        const hintList = hints.filter(hint => hint !== deadHint);\n        setHints(hintList);\n        props.updateTask('hints', hintList);\n    }\n\n    const addHint = text => {\n        if(text){\n            const hintList = hints;\n            if(!hintList.includes(text)){\n                setText('');\n                hintList.push(text),\n                props.updateTask('hints', hintList);\n            } else {\n                alert(\"Cannot have two identical hints!\");\n            }\n        } else {\n            alert('Can\\'t add a blank hint!');\n        }\n    }\n\n  const generateHints = () => {\n    return hints.map((hint, index) => {\n        return (\n            <Chip\n                key={`hint${index}`}\n                label={hint}\n                onDelete={() => handleHintDelete(hint)}\n            />\n        )\n    })\n  }\n\n  return (\n    <div style={styles.container}>\n        <div style={styles.row}>\n            <input \n                style={{ ...MASTER.wideRoundInput, width: 300, marginTop: 0 }} \n                value={text} \n                onChange={e => setText(e.target.value)} \n                placeholder={'e.g. Behind the mirror'}\n            />\n            <button \n                style={{ ...MASTER.wideRoundBtn, width: 80, marginTop: 0 }} \n                onClick={() => addHint(text)}\n            >\n                <span style={MASTER.wideRoundBtnText}>+ Add</span>\n            </button>\n        </div>\n        <div style={{ width: '90%' }}>\n            {generateHints()}\n        </div>\n    </div>\n  );\n}\n  \nconst styles = {\n    container: {\n        marginTop: 5,\n        marginBottom: 10,\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n  row: {\n      display: 'flex',\n      alignItems: 'center',\n      maxWidth: '90%',\n      justifyContent: 'center',\n  }\n};\n\nexport default BuildHintTask;"]},"metadata":{},"sourceType":"module"}