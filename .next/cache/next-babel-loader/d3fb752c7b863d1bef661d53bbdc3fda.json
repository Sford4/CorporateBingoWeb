{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/components/ManageBoard/BoardBuilder/BuildSquareComponents/TaskHints.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react'; // Component imports\n\nimport { CSVDownload } from \"react-csv\"; // Style imports\n\nimport { MASTER, COLORS } from '../../../../styles/masterStyles';\n\nconst BuildHintTask = props => {\n  const {\n    0: hints,\n    1: setHints\n  } = useState(props.hints);\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  useEffect(() => {\n    setHints(hints);\n  }, [props.hints]);\n\n  const handleHintDelete = deadHint => {\n    const hintList = hints.filter(hint => hint !== deadHint);\n    setHints(hintList);\n    props.updateTask('hints', hintList);\n  };\n\n  const addHint = text => {\n    if (text) {\n      const hintList = hints;\n\n      if (hintList && !hintList.includes(text)) {\n        setText('');\n        hintList.push(text), props.updateTask('hints', hintList);\n      } else {\n        alert(\"Cannot have two identical hints!\");\n      }\n    } else {\n      alert('Can\\'t add a blank hint!');\n    }\n  };\n\n  const generateHints = () => {\n    if (hints && hints.length) {\n      return hints.map((hint, index) => {\n        let multilineHint = hint.replace('\\\\n', '\\n');\n        return __jsx(\"div\", {\n          style: {\n            display: 'flex',\n            maxWidth: '100%'\n          },\n          key: `hint${index}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, __jsx(\"span\", {\n          style: styles.deleteHintX,\n          onClick: () => handleHintDelete(hint),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"x\"), __jsx(\"div\", {\n          style: {\n            marginLeft: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, multilineHint));\n      });\n    }\n  };\n\n  return __jsx(\"div\", {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: styles.col,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(\"textarea\", {\n    style: _objectSpread({}, MASTER.wideRoundTextArea, {\n      width: '100%'\n    }),\n    value: text,\n    onChange: e => setText(e.target.value),\n    placeholder: 'e.g. Behind the mirror',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    style: _objectSpread({}, MASTER.wideRoundBtn, {\n      marginTop: 2\n    }),\n    onClick: () => addHint(text),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    style: MASTER.wideRoundBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"+ Add Hint\"))), __jsx(\"div\", {\n    style: {\n      width: '90%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, generateHints()));\n};\n\nconst styles = {\n  container: {\n    marginTop: 5,\n    marginBottom: 10,\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    width: '100%'\n  },\n  col: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '90%',\n    justifyContent: 'center'\n  },\n  deleteHintX: {\n    backgroundColor: 'gray',\n    width: 15,\n    height: 15,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 20,\n    paddingBottom: 2,\n    color: 'white',\n    cursor: 'pointer',\n    minWidth: 15,\n    minHeight: 15\n  }\n};\nexport default BuildHintTask;","map":{"version":3,"sources":["/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/components/ManageBoard/BoardBuilder/BuildSquareComponents/TaskHints.js"],"names":["React","useState","useEffect","CSVDownload","MASTER","COLORS","BuildHintTask","props","hints","setHints","text","setText","handleHintDelete","deadHint","hintList","filter","hint","updateTask","addHint","includes","push","alert","generateHints","length","map","index","multilineHint","replace","display","maxWidth","styles","deleteHintX","marginLeft","container","col","wideRoundTextArea","width","e","target","value","wideRoundBtn","marginTop","wideRoundBtnText","marginBottom","justifyContent","flexWrap","flexDirection","alignItems","backgroundColor","height","borderRadius","paddingBottom","color","cursor","minWidth","minHeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, } from 'react';\n\n// Component imports\nimport { CSVDownload } from \"react-csv\";\n\n// Style imports\nimport { MASTER, COLORS } from '../../../../styles/masterStyles';\n\n\nconst BuildHintTask = (props) => {\n\n    const [hints, setHints] = useState(props.hints);\n    const [text, setText] = useState('');\n\n    useEffect(() => {\n        setHints(hints)\n    }, [props.hints]);\n\n    const handleHintDelete = deadHint => {\n        const hintList = hints.filter(hint => hint !== deadHint);\n        setHints(hintList);\n        props.updateTask('hints', hintList);\n    }\n\n    const addHint = text => {\n        if(text){\n            const hintList = hints;\n            if(hintList && !hintList.includes(text)){\n                setText('');\n                hintList.push(text),\n                props.updateTask('hints', hintList);\n            } else {\n                alert(\"Cannot have two identical hints!\");\n            }\n        } else {\n            alert('Can\\'t add a blank hint!');\n        }\n    }\n\n  const generateHints = () => {\n      if(hints && hints.length){\n        return hints.map((hint, index) => {\n            let multilineHint = hint.replace('\\\\n', '\\n');\n            return (\n                <div style={{ display: 'flex', maxWidth: '100%' }} key={`hint${index}`}>\n                    <span style={ styles.deleteHintX } onClick={() => handleHintDelete(hint)}>x</span>\n                    <div style={{ marginLeft: 5 }}>{multilineHint}</div>\n                </div>\n            )\n        })\n      }\n  }\n\n  return (\n    <div style={styles.container}>\n        <div style={styles.col}>\n            <textarea \n                style={{ ...MASTER.wideRoundTextArea, width: '100%' }} \n                value={text} \n                onChange={e => setText(e.target.value)} \n                placeholder={'e.g. Behind the mirror'}\n            />\n            <button \n                style={{ ...MASTER.wideRoundBtn, marginTop: 2 }} \n                onClick={() => addHint(text)}\n            >\n                <span style={MASTER.wideRoundBtnText}>+ Add Hint</span>\n            </button>\n        </div>\n        <div style={{ width: '90%' }}>\n            {generateHints()}\n        </div>\n    </div>\n  );\n}\n  \nconst styles = {\n    container: {\n        marginTop: 5,\n        marginBottom: 10,\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        width: '100%',\n    },\n  col: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      width: '90%',\n      justifyContent: 'center',\n  },\n  deleteHintX: {\n    backgroundColor: 'gray',\n    width: 15,\n    height: 15,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 20,\n    paddingBottom: 2,\n    color: 'white',\n    cursor: 'pointer',\n    minWidth: 15,\n    minHeight: 15,\n  }\n};\n\nexport default BuildHintTask;"]},"metadata":{},"sourceType":"module"}