{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/contexts/playContext.js\";\nvar __jsx = React.createElement;\nimport React, { createContext, useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch'; // import FULL_URL from '../constants/constants';\n\nexport const PlayContext = createContext();\n\nconst PlayContextProvider = props => {\n  const {\n    0: contextGame,\n    1: setContextGame\n  } = useState({});\n\n  const getGame = async (gameID, userID) => {\n    if (gameID && contextGame._id === gameID) {\n      console.log('go with same game', contextGame, gameID);\n      return;\n    }\n\n    console.log({\n      gameID\n    });\n\n    if (gameID && userID) {\n      try {\n        const request = await fetch(`http://localhost:8000/games/${gameID}/${userID}`, {\n          method: 'GET',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('bingo_token')}`\n          }\n        });\n        const game = await request.json();\n        console.log({\n          game\n        });\n        setContextGame(game);\n      } catch (err) {\n        alert(err);\n      }\n    }\n  };\n\n  const saveGame = async game => {\n    setContextGame(game);\n    console.log('SAVING GAME');\n\n    try {\n      const request = await fetch(`http://localhost:8000/games/${contextGame._id}`, {\n        method: 'PATCH',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('bingo_token')}`\n        },\n        body: _JSON$stringify(_objectSpread({}, game))\n      });\n      const success = await request.json();\n      console.log({\n        success\n      });\n\n      if (success) {\n        setContextGame(success);\n      } else {\n        alert('There was a problem saving your board... please try again later!');\n      }\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  return __jsx(PlayContext.Provider, {\n    value: {\n      contextGame,\n      updateGame: setContextGame,\n      getGame,\n      saveGame\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default PlayContextProvider;","map":{"version":3,"sources":["/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/contexts/playContext.js"],"names":["React","createContext","useState","useEffect","fetch","PlayContext","PlayContextProvider","props","contextGame","setContextGame","getGame","gameID","userID","_id","console","log","request","method","headers","localStorage","getItem","game","json","err","alert","saveGame","body","success","updateGame","children"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;;AAEA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,EAAjC;;AAEP,MAAMK,mBAAmB,GAAIC,KAAD,IAAW;AAEnC,QAAM;AAAA,OAAEC,WAAF;AAAA,OAAeC;AAAf,MAAkCP,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMQ,OAAO,GAAG,OAAOC,MAAP,EAAeC,MAAf,KAA0B;AACtC,QAAGD,MAAM,IAAIH,WAAW,CAACK,GAAZ,KAAoBF,MAAjC,EAAwC;AACpCG,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCP,WAAjC,EAA8CG,MAA9C;AACA;AACH;;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACJ,MAAAA;AAAD,KAAZ;;AACA,QAAGA,MAAM,IAAIC,MAAb,EAAoB;AAChB,UAAI;AACA,cAAMI,OAAO,GAAG,MAAMZ,KAAK,CAAE,+BAA8BO,MAAO,IAAGC,MAAO,EAAjD,EAAoD;AAC3EK,UAAAA,MAAM,EAAE,KADmE;AAE3EC,UAAAA,OAAO,EAAE;AACL,sBAAU,kBADL;AAEL,4BAAgB,kBAFX;AAGL,6BAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoC;AAH1D;AAFkE,SAApD,CAA3B;AAQI,cAAMC,IAAI,GAAG,MAAML,OAAO,CAACM,IAAR,EAAnB;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAY;AAACM,UAAAA;AAAD,SAAZ;AACAZ,QAAAA,cAAc,CAACY,IAAD,CAAd;AACP,OAZD,CAYE,OAAME,GAAN,EAAW;AAACC,QAAAA,KAAK,CAACD,GAAD,CAAL;AAAW;AAC5B;AACJ,GArBD;;AAuBA,QAAME,QAAQ,GAAG,MAAOJ,IAAP,IAAgB;AAC7BZ,IAAAA,cAAc,CAACY,IAAD,CAAd;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AACA,QAAI;AACA,YAAMC,OAAO,GAAG,MAAMZ,KAAK,CAAE,+BAA8BI,WAAW,CAACK,GAAI,EAAhD,EAAmD;AAC1EI,QAAAA,MAAM,EAAE,OADkE;AAE1EC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB,kBAFT;AAGP,2BAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoC;AAHxD,SAFiE;AAO1EM,QAAAA,IAAI,EAAE,kCACCL,IADD;AAPoE,OAAnD,CAA3B;AAWE,YAAMM,OAAO,GAAG,MAAMX,OAAO,CAACM,IAAR,EAAtB;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACY,QAAAA;AAAD,OAAZ;;AACA,UAAGA,OAAH,EAAW;AACTlB,QAAAA,cAAc,CAACkB,OAAD,CAAd;AACD,OAFD,MAEO;AACHH,QAAAA,KAAK,CAAC,kEAAD,CAAL;AACH;AAEN,KApBD,CAoBE,OAAMD,GAAN,EAAW;AAACC,MAAAA,KAAK,CAACD,GAAD,CAAL;AAAW;AAE5B,GAzBD;;AA4BA,SACI,MAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHf,MAAAA,WADG;AAEHoB,MAAAA,UAAU,EAAEnB,cAFT;AAGHC,MAAAA,OAHG;AAIHe,MAAAA;AAJG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKlB,KAAK,CAACsB,QAPX,CADJ;AAWH,CAlED;;AAoEA,eAAevB,mBAAf","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\n// import FULL_URL from '../constants/constants';\n\nexport const PlayContext = createContext();\n\nconst PlayContextProvider = (props) => {\n\n    const [ contextGame, setContextGame ] = useState({});\n\n    const getGame = async (gameID, userID) => {\n        if(gameID && contextGame._id === gameID){\n            console.log('go with same game', contextGame, gameID)\n            return;\n        }\n        console.log({gameID})\n        if(gameID && userID){\n            try {\n                const request = await fetch(`http://localhost:8000/games/${gameID}/${userID}`, {\n                    method: 'GET',\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                        'Authorization': `Bearer ${localStorage.getItem('bingo_token')}`\n                    },\n                    })\n                    const game = await request.json();\n                    console.log({game})\n                    setContextGame(game);\n            } catch(err) {alert(err)}\n        }\n    }\n\n    const saveGame = async (game) => {\n        setContextGame(game);\n        console.log('SAVING GAME');\n        try {\n            const request = await fetch(`http://localhost:8000/games/${contextGame._id}`, {\n                method: 'PATCH',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${localStorage.getItem('bingo_token')}`\n                },\n                body: JSON.stringify({\n                    ...game\n                })\n              })\n              const success = await request.json();\n              console.log({success})\n              if(success){\n                setContextGame(success);\n              } else {\n                  alert('There was a problem saving your board... please try again later!')\n              }\n\n        } catch(err) {alert(err)}\n        \n    }\n\n\n    return (\n        <PlayContext.Provider \n            value={{ \n                contextGame, \n                updateGame: setContextGame, \n                getGame, \n                saveGame\n            }}>\n            {props.children}\n        </PlayContext.Provider>\n    )\n}\n\nexport default PlayContextProvider;"]},"metadata":{},"sourceType":"module"}