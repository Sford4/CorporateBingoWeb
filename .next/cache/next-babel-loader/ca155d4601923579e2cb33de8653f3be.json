{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/components/Play/Tasks/TaskPicture.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone'; // context imports\n// Style imports\n\nimport { MASTER, COLORS } from '../../../styles/masterStyles'; // Component imports\n\nvar TaskPicture = function TaskPicture(props) {\n  var _useState = useState(props.task.task.answer),\n      image = _useState[0],\n      setImage = _useState[1];\n\n  var _useState2 = useState(false),\n      cameraOpen = _useState2[0],\n      setCameraOpen = _useState2[1];\n\n  var _useState3 = useState(''),\n      cameraPermission = _useState3[0],\n      setCameraPermission = _useState3[1];\n\n  useEffect(function () {\n    if (!!image) {\n      setComplete(image, !!image);\n    }\n  }, [image]);\n\n  var setComplete = function setComplete(picture, bool) {\n    props.updateTask(_objectSpread({}, props.task, {\n      complete: bool,\n      task: {\n        taskType: 'picture',\n        answer: picture\n      }\n    }));\n    props.completeSquare(bool);\n  };\n\n  var onDrop = useCallback(function (acceptedFiles) {\n    var reader = new FileReader();\n\n    reader.onabort = function () {\n      return alert('file reading was aborted');\n    };\n\n    reader.onerror = function () {\n      return alert('file reading has failed');\n    };\n\n    var file = acceptedFiles[0]; // if(!supportedFileTypes.includes(file.type)){\n    //     this.openSnackBar(<FormattedMessage {...UserMessages.wrongFileType} />);\n    // } else if (file.size > 10000000){\n    //     this.openSnackBar(<FormattedMessage {...UserMessages.picTooBig} />);\n    // } else {\n\n    reader.addEventListener('load', function () {\n      return setImage(reader.result);\n    });\n    reader.readAsDataURL(file); // }\n  }, []);\n\n  var _useDropzone = useDropzone({\n    onDrop: onDrop\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps,\n      isDragActive = _useDropzone.isDragActive;\n\n  return __jsx(\"div\", {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, !!image && __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    style: styles.image,\n    src: image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    style: styles.removePhotoBtn,\n    onClick: function onClick() {\n      setImage('');\n      setComplete('', false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: _objectSpread({}, MASTER.wideRoundBtnText, {\n      fontSize: 30,\n      marginTop: -5\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"x\"))), !image && __jsx(\"div\", _extends({}, getRootProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), __jsx(\"input\", _extends({}, getInputProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), isDragActive ? __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Drop the files here ...\") : __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Drag 'n' drop some files here, or click to select files\"))));\n};\n\nvar styles = {\n  container: {\n    // height: '100%',\n    width: '100%',\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  image: {\n    height: 300,\n    width: 300\n  },\n  cheeseBtn: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: COLORS.primary,\n    width: 100,\n    borderRadius: 50,\n    height: 50,\n    marginBottom: 20\n  },\n  removePhotoBtn: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: COLORS.primary,\n    width: 30,\n    borderRadius: 50,\n    height: 30,\n    position: 'absolute',\n    bottom: 10,\n    right: 10\n  }\n};\nexport default TaskPicture;","map":{"version":3,"sources":["/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/components/Play/Tasks/TaskPicture.js"],"names":["React","useState","useEffect","useCallback","useDropzone","MASTER","COLORS","TaskPicture","props","task","answer","image","setImage","cameraOpen","setCameraOpen","cameraPermission","setCameraPermission","setComplete","picture","bool","updateTask","complete","taskType","completeSquare","onDrop","acceptedFiles","reader","FileReader","onabort","alert","onerror","file","addEventListener","result","readAsDataURL","getRootProps","getInputProps","isDragActive","styles","container","width","display","alignItems","removePhotoBtn","wideRoundBtnText","fontSize","marginTop","backgroundColor","justifyContent","height","cheeseBtn","primary","borderRadius","marginBottom","position","bottom","right"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport {useDropzone} from 'react-dropzone'\n\n// context imports\n\n// Style imports\nimport { MASTER, COLORS } from '../../../styles/masterStyles';\n\n// Component imports\n\nconst TaskPicture = (props) => {\n\n    const [image, setImage] = useState(props.task.task.answer);\n    const [cameraOpen, setCameraOpen] = useState(false);\n    const [cameraPermission, setCameraPermission] = useState('');\n\n    useEffect(() => {\n        if(!!image){\n            setComplete(image, !!image);\n        }\n    }, [image])\n\n    const setComplete = (picture, bool) => {\n        props.updateTask({\n            ...props.task,\n            complete: bool,\n            task: {\n                taskType: 'picture',\n                answer: picture,\n            }\n        })\n        props.completeSquare(bool);\n    } \n    \n    const onDrop = useCallback(acceptedFiles => {\n        const reader = new FileReader();\n        reader.onabort = () => alert('file reading was aborted')\n        reader.onerror = () => alert('file reading has failed')\n        const file = acceptedFiles[0];\n        // if(!supportedFileTypes.includes(file.type)){\n        //     this.openSnackBar(<FormattedMessage {...UserMessages.wrongFileType} />);\n        // } else if (file.size > 10000000){\n        //     this.openSnackBar(<FormattedMessage {...UserMessages.picTooBig} />);\n        // } else {\n            reader.addEventListener('load', () =>\n                setImage(reader.result)\n            );\n            reader.readAsDataURL(file);\n        // }\n    }, []);\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n  return (\n    <div style={styles.container}>\n        <div style={{width: '100%', display: 'flex', alignItems: 'center'}}>\n            {\n                !!image && \n                <div>\n                    <img style={styles.image} src={image}  />\n                    <button\n                        style={styles.removePhotoBtn}\n                        onClick={() => {\n                            setImage('');\n                            setComplete('', false);\n                        }}\n                    >\n                        <div style={{ ...MASTER.wideRoundBtnText, fontSize: 30, marginTop: -5 }}>x</div>\n                    </button>\n                </div>\n            }\n            {!image && \n            <div {...getRootProps()}>\n                <input {...getInputProps()} />\n                {\n                isDragActive ?\n                    <p>Drop the files here ...</p> :\n                    <p>Drag 'n' drop some files here, or click to select files</p>\n                }\n            </div>\n            }\n          </div>\n    </div>\n  );\n}\n  \nconst styles = {\n  container: {\n    // height: '100%',\n    width: '100%',\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  image: {\n    height: 300,\n    width: 300,\n  },\n  cheeseBtn: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: COLORS.primary,\n    width: 100,\n    borderRadius: 50,\n    height: 50,\n    marginBottom: 20,\n  },\n  removePhotoBtn: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: COLORS.primary,\n    width: 30,\n    borderRadius: 50,\n    height: 30,\n    position: 'absolute',\n    bottom: 10,\n    right: 10,\n  }\n};\n\nexport default TaskPicture;"]},"metadata":{},"sourceType":"module"}