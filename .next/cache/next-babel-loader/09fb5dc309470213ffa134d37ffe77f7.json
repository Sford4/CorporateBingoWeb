{"ast":null,"code":"var _jsxFileName = \"/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/components/ManageBoard/BoardBuilder/BoardBuilder.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react'; // context imports\n\nimport { ManageBoardsContext } from '../../../contexts/manageBoardsContext'; // Style imports\n\nimport { MASTER, COLORS } from '../../../styles/masterStyles'; // Component imports\n\nimport BoardBuilderBoard from './BoardBuilderBoard';\nimport RewardBuilder from './RewardBuilder'; // Material ui\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n}))(MuiDialogActions);\n\nconst materialStyles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n    fontSize: 32,\n    color: COLORS.primary\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(materialStyles)(props => {\n  const {\n    children,\n    classes,\n    onClose\n  } = props;\n  return __jsx(MuiDialogTitle, {\n    disableTypography: true,\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, children), __jsx(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })));\n});\n\nconst BoardBuilder = props => {\n  const {\n    contextBoard,\n    updateBoard\n  } = useContext(ManageBoardsContext);\n  const {\n    0: board,\n    1: setBoard\n  } = useState(contextBoard);\n  const {\n    0: rewardDialogOpen,\n    1: setRewardDialogOpen\n  } = useState(false);\n  const {\n    0: reward,\n    1: setReward\n  } = useState({});\n\n  const openRewardBuilderPopup = reward => {\n    setRewardDialogOpen(true);\n    setReward(reward);\n  };\n\n  const updateBoardBuilder = board => {\n    updateBoard(board);\n  };\n\n  useEffect(() => {\n    setBoard(contextBoard);\n  }, [contextBoard]);\n\n  const generateWholeBoardRewardIcon = reward => {\n    return __jsx(\"img\", {\n      alt: \"Whole board completion reward\",\n      onClick: () => openRewardBuilderPopup(reward),\n      style: {\n        width: '10vw',\n        height: '10vw',\n        maxHeight: 200,\n        maxWidth: 200,\n        cursor: 'pointer'\n      },\n      src: !reward.title && !reward.description && !reward.img ? '../../static/gift_light_gray.png' : '../../static/gift_gray.png',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    });\n  };\n\n  return __jsx(\"div\", {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, board.rewards.length && board.rewards[board.rewards.length - 1].position.includes('wholeBoard') ? generateWholeBoardRewardIcon(board.rewards[board.rewards.length - 1]) : null, __jsx(BoardBuilderBoard, {\n    board: board,\n    navigation: props.navigation,\n    size: `size${board.numSquares}`,\n    updateBoard: updateBoardBuilder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), __jsx(Dialog, {\n    open: rewardDialogOpen,\n    onBackdropClick: () => setRewardDialogOpen(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, __jsx(DialogTitle, {\n    onClose: () => setRewardDialogOpen(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"REWARD\"), __jsx(RewardBuilder, {\n    reward: reward,\n    openPopup: setRewardDialogOpen,\n    updateBoard: updateBoardBuilder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })));\n};\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    // maxHeight: 650,\n    overflowY: 'scroll',\n    overflowX: 'overlay',\n    width: '60vw',\n    maxWidth: 800,\n    minWidth: 300,\n    paddingHorizontal: 'auto',\n    padding: '3% 5%',\n    marginTop: 12\n  }\n};\nexport default BoardBuilder;","map":{"version":3,"sources":["/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/components/ManageBoard/BoardBuilder/BoardBuilder.js"],"names":["React","useState","useEffect","useContext","ManageBoardsContext","MASTER","COLORS","BoardBuilderBoard","RewardBuilder","withStyles","Dialog","MuiDialogActions","MuiDialogTitle","Typography","IconButton","CloseIcon","DialogActions","theme","root","margin","padding","spacing","display","justifyContent","alignItems","materialStyles","fontSize","color","primary","closeButton","position","right","top","palette","grey","DialogTitle","props","children","classes","onClose","BoardBuilder","contextBoard","updateBoard","board","setBoard","rewardDialogOpen","setRewardDialogOpen","reward","setReward","openRewardBuilderPopup","updateBoardBuilder","generateWholeBoardRewardIcon","width","height","maxHeight","maxWidth","cursor","title","description","img","styles","container","rewards","length","includes","navigation","numSquares","flexDirection","backgroundColor","overflowY","overflowX","minWidth","paddingHorizontal","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\n\n// context imports\nimport { ManageBoardsContext } from '../../../contexts/manageBoardsContext';\n\n// Style imports\nimport { MASTER, COLORS } from '../../../styles/masterStyles';\n\n// Component imports\nimport BoardBuilderBoard from './BoardBuilderBoard';\nimport RewardBuilder from './RewardBuilder';\n\n// Material ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}))(MuiDialogActions);\n\nconst materialStyles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n    fontSize: 32,\n    color: COLORS.primary,\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(materialStyles)(props => {\n  const { children, classes, onClose } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root}>\n      <Typography variant=\"h6\">{children}</Typography>\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n    </MuiDialogTitle>\n  );\n});\n\n\nconst BoardBuilder = (props) => { \n\n  const { contextBoard, updateBoard } = useContext(ManageBoardsContext);\n\n  const [board, setBoard] = useState(contextBoard);\n  const [rewardDialogOpen, setRewardDialogOpen] = useState(false);\n  const [reward, setReward] = useState({});\n  \n  const openRewardBuilderPopup = (reward) => {\n    setRewardDialogOpen(true);\n    setReward(reward);\n  }\n\n  const updateBoardBuilder = (board) => {\n    updateBoard(board);\n  }\n\n  useEffect(() => {\n    setBoard(contextBoard)\n  }, [contextBoard])\n\n  const generateWholeBoardRewardIcon = (reward) => {\n\n      return (\n          <img \n            alt=\"Whole board completion reward\" \n            onClick={() => openRewardBuilderPopup(reward)} \n            style={{width: '10vw', height: '10vw', maxHeight: 200, maxWidth: 200, cursor: 'pointer', }} \n            src={!reward.title && !reward.description && !reward.img ? '../../static/gift_light_gray.png' : '../../static/gift_gray.png'}\n          />\n      );\n  }\n\n  return (\n      <div style={styles.container}>\n        {board.rewards.length && board.rewards[board.rewards.length - 1].position.includes('wholeBoard') ? generateWholeBoardRewardIcon(board.rewards[board.rewards.length - 1]) : null}\n        <BoardBuilderBoard \n          board={board}\n          navigation={props.navigation}\n          size={`size${board.numSquares}`}\n          updateBoard={updateBoardBuilder}\n        />\n        <Dialog open={rewardDialogOpen} onBackdropClick={() => setRewardDialogOpen(false)}>\n          <DialogTitle onClose={() => setRewardDialogOpen(false)}>\n              REWARD\n            </DialogTitle>\n          <RewardBuilder reward={reward} openPopup={setRewardDialogOpen} updateBoard={updateBoardBuilder} />\n        </Dialog>\n      </div>\n  );\n}\n  \nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    // maxHeight: 650,\n    overflowY: 'scroll',\n    overflowX: 'overlay',\n    width: '60vw',\n    maxWidth: 800,\n    minWidth: 300,\n    paddingHorizontal: 'auto',\n    padding: '3% 5%',\n    marginTop: 12,\n  },\n};\n\nexport default BoardBuilder;"]},"metadata":{},"sourceType":"module"}