{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/pages/resetPassword/[userID]/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport FULL_URL from '../../../constants/constants'; // Style imports\n\nimport { MASTER, COLORS } from '../../../styles/masterStyles';\n\nconst ResetPassword = props => {\n  const router = useRouter();\n  const {\n    0: userID\n  } = useState(props.userID);\n  const {\n    0: checkingCurrPasswordMatch,\n    1: setCheckingCurrPasswordMatch\n  } = useState(true);\n  const {\n    0: incorrectPassword,\n    1: setIncorrectPassword\n  } = useState(false);\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: confirmPassword,\n    1: setConfirmPassword\n  } = useState('');\n  useEffect(() => {\n    checkCurrPassword(props.userID, props.currPassword);\n  }, []);\n\n  const openWarning = message => {\n    alert(`Woah there! ${message}`);\n  };\n\n  const updateUser = async () => {\n    if (!password) {\n      openWarning('Password cannot be empty!');\n      return;\n    }\n\n    if (password && password !== confirmPassword) {\n      openWarning('Passwords must match!');\n      return;\n    }\n\n    console.log({\n      userID\n    });\n\n    try {\n      const request = await fetch(`${FULL_URL}/users/${userID}/passwordReset`, {\n        method: 'PATCH',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: _JSON$stringify({\n          password\n        })\n      });\n      const res = await request.json();\n      console.log('from backend', {\n        res\n      });\n\n      if (res && res.success) {\n        router.push('/login');\n      } else {\n        alert('There was a problem saving your password...');\n      }\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const checkCurrPassword = async (userID, currPassword) => {\n    if (!currPassword || !userID) {\n      setCheckingCurrPasswordMatch(false);\n      setIncorrectPassword(true);\n      return;\n    }\n\n    console.log({\n      userID\n    });\n    console.log({\n      currPassword\n    });\n\n    try {\n      const request = await fetch(`${FULL_URL}/users/checkResetCredentials`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: _JSON$stringify({\n          password: currPassword,\n          userID\n        })\n      });\n      const res = await request.json();\n      console.log('from backend', {\n        res\n      });\n\n      if (res && !res.success) {\n        setCheckingCurrPasswordMatch(false);\n        setIncorrectPassword(true);\n        return;\n      } else {\n        setCheckingCurrPasswordMatch(false);\n        setIncorrectPassword(false);\n      }\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const goToLogin = () => {\n    router.push('/login');\n  };\n\n  if (checkingCurrPasswordMatch) {\n    return __jsx(\"div\", {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: styles.subcontainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Just making sure you've come to the right place...\")));\n  }\n\n  if (incorrectPassword) {\n    return __jsx(\"div\", {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: styles.subcontainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Looks like you came here with a bad link.\")));\n  }\n\n  return __jsx(\"div\", {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: styles.subcontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: MASTER.pageTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"RESET PASSWORD\"), __jsx(\"input\", {\n    style: MASTER.wideRoundInput,\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    type: \"password\",\n    placeholder: 'Password',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    style: MASTER.wideRoundInput,\n    value: confirmPassword,\n    onChange: e => setConfirmPassword(e.target.value),\n    type: \"password\",\n    placeholder: 'Confirm Password (passwords must match!)',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    style: _objectSpread({}, MASTER.wideRoundBtn, {\n      marginTop: 20\n    }),\n    onClick: () => updateUser(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    style: MASTER.wideRoundBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Save Password\")), __jsx(\"button\", {\n    style: _objectSpread({}, MASTER.wideRoundBtn, {\n      marginTop: 20\n    }),\n    onClick: () => goToLogin(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    style: MASTER.wideRoundBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Remembered your password? Login!\"))));\n};\n\nResetPassword.getInitialProps = async ({\n  query\n}) => {\n  return {\n    userID: query.userID,\n    currPassword: query.code\n  };\n};\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n    paddingTop: 40\n  },\n  subcontainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n    maxWidth: 400\n  }\n};\nexport default ResetPassword;","map":{"version":3,"sources":["/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/pages/resetPassword/[userID]/index.js"],"names":["useState","useEffect","useRouter","fetch","FULL_URL","MASTER","COLORS","ResetPassword","props","router","userID","checkingCurrPasswordMatch","setCheckingCurrPasswordMatch","incorrectPassword","setIncorrectPassword","password","setPassword","confirmPassword","setConfirmPassword","checkCurrPassword","currPassword","openWarning","message","alert","updateUser","console","log","request","method","headers","body","res","json","success","push","err","goToLogin","styles","container","subcontainer","pageTitle","wideRoundInput","e","target","value","wideRoundBtn","marginTop","wideRoundBtnText","getInitialProps","query","code","display","flexDirection","justifyContent","alignItems","width","height","paddingTop","maxWidth"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport FULL_URL from '../../../constants/constants';\n\n// Style imports\nimport { MASTER, COLORS } from '../../../styles/masterStyles';\n\nconst ResetPassword = (props) => {\n\n    const router = useRouter()\n\n    const [userID] = useState(props.userID);\n    const [ checkingCurrPasswordMatch, setCheckingCurrPasswordMatch ] = useState(true);\n    const [ incorrectPassword, setIncorrectPassword ] = useState(false);\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    useEffect(() => {\n        checkCurrPassword(props.userID, props.currPassword);\n    }, [])\n\n    const openWarning = (message) => {\n        alert(\n            `Woah there! ${message}`,\n        );\n    }\n\n    const updateUser = async () => {\n        if(!password){\n            openWarning('Password cannot be empty!');\n            return;\n        }\n        if(password && password !== confirmPassword){\n            openWarning('Passwords must match!');\n            return;\n        }\n        console.log({userID})\n        try {\n            const request = await fetch(`${FULL_URL}/users/${userID}/passwordReset`, {\n                method: 'PATCH',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    password,\n                })\n              })\n              const res = await request.json();\n              console.log('from backend', {res})\n              if(res && res.success){\n                router.push('/login');\n              } else {\n                  alert('There was a problem saving your password...');\n              }\n        } catch (err) { alert( err ) }\n    }\n\n    const checkCurrPassword = async (userID, currPassword) => {\n        if(!currPassword || !userID){\n            setCheckingCurrPasswordMatch(false);\n            setIncorrectPassword(true);\n            return;\n        }\n        console.log({userID})\n        console.log({currPassword})\n        try {\n            const request = await fetch(`${FULL_URL}/users/checkResetCredentials`, {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    password: currPassword,\n                    userID\n                })\n              })\n              const res = await request.json();\n              console.log('from backend', {res})\n              if(res && !res.success){\n                setCheckingCurrPasswordMatch(false);\n                setIncorrectPassword(true);\n                return;\n              } else {\n                setCheckingCurrPasswordMatch(false);\n                setIncorrectPassword(false);\n              }\n        } catch (err) { alert( err ) }\n    }\n\n    const goToLogin = () => {\n        router.push('/login');\n    }\n\n    if(checkingCurrPasswordMatch){\n        return (<div style={styles.container}>\n            <div style={styles.subcontainer}>\n                <div>Just making sure you've come to the right place...</div>\n            </div>\n        </div>)\n    }\n\n    if(incorrectPassword){\n        return (<div style={styles.container}>\n            <div style={styles.subcontainer}>\n                <div>Looks like you came here with a bad link.</div>\n            </div>\n        </div>)\n    }\n\n\n    return (\n        <div style={styles.container}>\n            <div style={styles.subcontainer}>\n                <div style={MASTER.pageTitle}>RESET PASSWORD</div>\n                <input \n                    style={MASTER.wideRoundInput} \n                    value={password} \n                    onChange={e => setPassword(e.target.value)} \n                    type='password'\n                    placeholder={'Password'}\n                />\n                <input \n                    style={MASTER.wideRoundInput} \n                    value={confirmPassword} \n                    onChange={e => setConfirmPassword(e.target.value)} \n                    type='password'\n                    placeholder={'Confirm Password (passwords must match!)'}\n                />\n                <button \n                    style={{ ...MASTER.wideRoundBtn, marginTop: 20 }} \n                    onClick={() => updateUser()}\n                >\n                    <span style={MASTER.wideRoundBtnText}>Save Password</span>\n                </button>\n                <button \n                    style={{ ...MASTER.wideRoundBtn, marginTop: 20 }} \n                    onClick={() => goToLogin()}\n                >\n                    <span style={MASTER.wideRoundBtnText}>Remembered your password? Login!</span>\n                </button>\n            </div>\n        </div>\n    )\n  };\n\n  ResetPassword.getInitialProps = async ({ query }) => {\n    return { userID: query.userID, currPassword: query.code }\n  }\n\n  const styles = {\n      container: {\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          width: '100%',\n          height: '100%',\n          paddingTop: 40,\n      },\n      subcontainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n        maxWidth: 400,\n    }\n  }\n  \n  export default ResetPassword;"]},"metadata":{},"sourceType":"module"}