{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/contexts/orgContext.js\";\nvar __jsx = React.createElement;\nimport React, { createContext, useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch'; // import FULL_URL from '../constants/constants';\n\nexport var OrgContext = createContext();\n\nvar OrgContextProvider = function OrgContextProvider(props) {\n  var _useState = useState({}),\n      org = _useState[0],\n      setOrg = _useState[1];\n\n  var _useState2 = useState(false),\n      stuffToSave = _useState2[0],\n      setStuffToSave = _useState2[1];\n\n  var getOrg =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(orgID) {\n      var request, _org;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('in get org', orgID);\n              _context.prev = 1;\n              _context.next = 4;\n              return fetch(\"http://localhost:8000/orgs/\".concat(orgID), {\n                method: 'GET',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json',\n                  'Authorization': \"Bearer \".concat(localStorage.getItem('bingo_token'))\n                }\n              });\n\n            case 4:\n              request = _context.sent;\n              _context.next = 7;\n              return request.json();\n\n            case 7:\n              _org = _context.sent;\n              setOrg(_org);\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              alert(_context.t0);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 11]]);\n    }));\n\n    return function getOrg(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var saveOrg =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(orgToSave) {\n      var request, _org2;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log('in save org', orgToSave);\n              _context2.prev = 1;\n              _context2.next = 4;\n              return fetch(\"http://localhost:8000/orgs/\".concat(orgToSave._id), {\n                method: 'PATCH',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json',\n                  'Authorization': \"Bearer \".concat(localStorage.getItem('bingo_token'))\n                },\n                body: _JSON$stringify(orgToSave)\n              });\n\n            case 4:\n              request = _context2.sent;\n              _context2.next = 7;\n              return request.json();\n\n            case 7:\n              _org2 = _context2.sent;\n              setOrg(_org2);\n              setStuffToSave(false);\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](1);\n              alert(_context2.t0);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 12]]);\n    }));\n\n    return function saveOrg(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(OrgContext.Provider, {\n    value: {\n      contextOrg: org,\n      updateOrg: setOrg,\n      getOrg: getOrg,\n      saveOrg: saveOrg,\n      setStuffToSave: setStuffToSave,\n      stuffToSave: stuffToSave\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default OrgContextProvider;","map":{"version":3,"sources":["/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/contexts/orgContext.js"],"names":["React","createContext","useState","useEffect","fetch","OrgContext","OrgContextProvider","props","org","setOrg","stuffToSave","setStuffToSave","getOrg","orgID","console","log","method","headers","localStorage","getItem","request","json","alert","saveOrg","orgToSave","_id","body","contextOrg","updateOrg","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;;AAEA,OAAO,IAAMC,UAAU,GAAGJ,aAAa,EAAhC;;AAEP,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AAAA,kBACVL,QAAQ,CAAC,EAAD,CADE;AAAA,MAC1BM,GAD0B;AAAA,MACrBC,MADqB;;AAAA,mBAEMP,QAAQ,CAAC,KAAD,CAFd;AAAA,MAE1BQ,WAF0B;AAAA,MAEbC,cAFa;;AAKlC,MAAMC,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,iBAAOC,KAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACXC,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;AADW;AAAA;AAAA,qBAGeT,KAAK,sCAA+BS,KAA/B,GAAwC;AAC/DG,gBAAAA,MAAM,EAAE,KADuD;AAE/DC,gBAAAA,OAAO,EAAE;AACP,4BAAU,kBADH;AAEP,kCAAgB,kBAFT;AAGP,oDAA2BC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAA3B;AAHO;AAFsD,eAAxC,CAHpB;;AAAA;AAGDC,cAAAA,OAHC;AAAA;AAAA,qBAWaA,OAAO,CAACC,IAAR,EAXb;;AAAA;AAWCb,cAAAA,IAXD;AAYLC,cAAAA,MAAM,CAACD,IAAD,CAAN;AAZK;AAAA;;AAAA;AAAA;AAAA;AAaOc,cAAAA,KAAK,aAAL;;AAbP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAANV,MAAM;AAAA;AAAA;AAAA,KAAZ;;AAgBA,MAAMW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,kBAAOC,SAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACZV,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BS,SAA3B;AADY;AAAA;AAAA,qBAGcpB,KAAK,sCAA+BoB,SAAS,CAACC,GAAzC,GAAgD;AACvET,gBAAAA,MAAM,EAAE,OAD+D;AAEvEC,gBAAAA,OAAO,EAAE;AACP,4BAAU,kBADH;AAEP,kCAAgB,kBAFT;AAGP,oDAA2BC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAA3B;AAHO,iBAF8D;AAOvEO,gBAAAA,IAAI,EAAE,gBAAeF,SAAf;AAPiE,eAAhD,CAHnB;;AAAA;AAGFJ,cAAAA,OAHE;AAAA;AAAA,qBAYYA,OAAO,CAACC,IAAR,EAZZ;;AAAA;AAYAb,cAAAA,KAZA;AAaNC,cAAAA,MAAM,CAACD,KAAD,CAAN;AACAG,cAAAA,cAAc,CAAC,KAAD,CAAd;AAdM;AAAA;;AAAA;AAAA;AAAA;AAeMW,cAAAA,KAAK,cAAL;;AAfN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPC,OAAO;AAAA;AAAA;AAAA,KAAb;;AAkBA,SACI,MAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AACxBI,MAAAA,UAAU,EAAEnB,GADY;AAExBoB,MAAAA,SAAS,EAAEnB,MAFa;AAGxBG,MAAAA,MAAM,EAAEA,MAHgB;AAIxBW,MAAAA,OAAO,EAAPA,OAJwB;AAKxBZ,MAAAA,cAAc,EAAdA,cALwB;AAMxBD,MAAAA,WAAW,EAAXA;AANwB,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKH,KAAK,CAACsB,QARX,CADJ;AAYH,CAnDD;;AAqDA,eAAevB,kBAAf","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\n// import FULL_URL from '../constants/constants';\n\nexport const OrgContext = createContext();\n\nconst OrgContextProvider = (props) => {\n    const [ org, setOrg ] = useState({});\n    const [ stuffToSave, setStuffToSave ] = useState(false);\n\n\n    const getOrg = async (orgID) => {\n        console.log('in get org', orgID)\n        try {\n            const request = await fetch(`http://localhost:8000/orgs/${orgID}`, {\n                method: 'GET',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${localStorage.getItem('bingo_token')}`\n                },\n              })\n              const org = await request.json();\n              setOrg(org);\n            } catch(err) {alert(err)}\n    }\n\n    const saveOrg = async (orgToSave) => {\n        console.log('in save org', orgToSave)\n        try {\n            const request = await fetch(`http://localhost:8000/orgs/${orgToSave._id}`, {\n                method: 'PATCH',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${localStorage.getItem('bingo_token')}`\n                },\n                body: JSON.stringify(orgToSave),\n              })\n              const org = await request.json();\n              setOrg(org);\n              setStuffToSave(false);\n            } catch(err) {alert(err)}\n    }\n\n    return (\n        <OrgContext.Provider value={{ \n            contextOrg: org, \n            updateOrg: setOrg, \n            getOrg: getOrg, \n            saveOrg, \n            setStuffToSave,\n            stuffToSave,\n        }}>\n            {props.children}\n        </OrgContext.Provider>\n    )\n}\n\nexport default OrgContextProvider;"]},"metadata":{},"sourceType":"module"}