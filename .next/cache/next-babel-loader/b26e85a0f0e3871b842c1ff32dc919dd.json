{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/components/orgAndUsers/editUser.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useContext } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport FULL_URL from '../../constants/constants'; // context imports\n// Style imports\n\nimport { MASTER, COLORS } from '../../styles/masterStyles';\n\nvar EditUser = function EditUser(props) {\n  var _useState = useState(props.user.userAlias),\n      userAlias = _useState[0],\n      setUserName = _useState[1];\n\n  var _useState2 = useState(props.user.email),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      password = _useState3[0],\n      setPassword = _useState3[1];\n\n  var _useState4 = useState(''),\n      confirmPassword = _useState4[0],\n      setConfirmPassword = _useState4[1];\n\n  var openWarning = function openWarning(message) {\n    alert(\"Woah there! \".concat(message));\n  };\n\n  var validEmail = function validEmail(email) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  var signup =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var request, user;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (userAlias) {\n                _context.next = 3;\n                break;\n              }\n\n              openWarning('Must have a userAlias!');\n              return _context.abrupt(\"return\");\n\n            case 3:\n              if (!(!email || !validEmail(email))) {\n                _context.next = 6;\n                break;\n              }\n\n              openWarning('Must have a valid email!');\n              return _context.abrupt(\"return\");\n\n            case 6:\n              if (!(!password || password !== confirmPassword)) {\n                _context.next = 9;\n                break;\n              }\n\n              openWarning('Passwords must match!');\n              return _context.abrupt(\"return\");\n\n            case 9:\n              _context.prev = 9;\n              _context.next = 12;\n              return fetch(\"\".concat(FULL_URL, \"/users/signup\"), {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: _JSON$stringify({\n                  userAlias: userAlias,\n                  email: email,\n                  password: password,\n                  roleLevel: 2,\n                  org: props.orgID\n                })\n              });\n\n            case 12:\n              request = _context.sent;\n              _context.next = 15;\n              return request.json();\n\n            case 15:\n              user = _context.sent;\n\n              if (user && user.id) {\n                props.openPopup(false, false);\n                props.updateUsers('new', user);\n              } else {\n                alert('There was a problem creating this user...');\n              }\n\n              _context.next = 22;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](9);\n              alert(_context.t0);\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[9, 19]]);\n    }));\n\n    return function signup() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var updateUser =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var request, user;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (userAlias) {\n                _context2.next = 3;\n                break;\n              }\n\n              openWarning('Must have a user name!');\n              return _context2.abrupt(\"return\");\n\n            case 3:\n              if (!(!email || !validEmail(email))) {\n                _context2.next = 6;\n                break;\n              }\n\n              openWarning('Must have a valid email!');\n              return _context2.abrupt(\"return\");\n\n            case 6:\n              if (!(password && password !== confirmPassword)) {\n                _context2.next = 9;\n                break;\n              }\n\n              openWarning('Passwords must match!');\n              return _context2.abrupt(\"return\");\n\n            case 9:\n              console.log('user updating', props.user);\n              _context2.prev = 10;\n              _context2.next = 13;\n              return fetch(\"\".concat(FULL_URL, \"/users/update/\").concat(props.user.id), {\n                method: 'POST',\n                // headers: {\n                //   'Accept': 'application/json',\n                //   'Content-Type': 'application/json',\n                //   'Authorization': `Bearer ${localStorage.getItem('bingo_token')}`\n                // },\n                body: _JSON$stringify({\n                  id: props.user.id,\n                  userAlias: userAlias,\n                  email: email,\n                  password: password,\n                  org: props.org.id,\n                  orgName: props.org.orgName,\n                  roleLevel: 2\n                })\n              });\n\n            case 13:\n              request = _context2.sent;\n              _context2.next = 16;\n              return request.json();\n\n            case 16:\n              user = _context2.sent;\n              console.log('from backend', {\n                user: user\n              });\n\n              if (user && user.id) {\n                props.openPopup(false, false);\n                props.updateUsers('edit', user);\n              } else {\n                alert('There was a problem updating this user...');\n              }\n\n              _context2.next = 24;\n              break;\n\n            case 21:\n              _context2.prev = 21;\n              _context2.t0 = _context2[\"catch\"](10);\n              alert(_context2.t0);\n\n            case 24:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[10, 21]]);\n    }));\n\n    return function updateUser() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var deleteUser =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(id) {\n      var request, response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!confirm(\"Are you sure? This will delete \".concat(userAlias, \" forever!\"))) {\n                _context3.next = 14;\n                break;\n              }\n\n              _context3.prev = 1;\n              _context3.next = 4;\n              return fetch(\"\".concat(FULL_URL, \"/users/delete\").concat(props.user.id), {\n                method: 'POST' // headers: {\n                //   'Accept': 'application/json',\n                //   'Content-Type': 'application/json',\n                //   'Authorization': `Bearer ${localStorage.getItem('bingo_token')}`\n                // },\n\n              });\n\n            case 4:\n              request = _context3.sent;\n              _context3.next = 7;\n              return request.json();\n\n            case 7:\n              response = _context3.sent;\n\n              if (response && response.id) {\n                props.updateUsers('delete', id);\n                props.openPopup(false, false);\n              } else {\n                alert('There was a problem deleting this user...');\n              }\n\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](1);\n              alert(_context3.t0);\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 11]]);\n    }));\n\n    return function deleteUser(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: styles.subcontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    style: MASTER.wideRoundInput,\n    value: userAlias,\n    onChange: function onChange(e) {\n      return setUserName(e.target.value);\n    },\n    placeholder: 'User Name',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    style: MASTER.wideRoundInput,\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    placeholder: 'Email',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    style: MASTER.wideRoundInput,\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    type: \"password\",\n    placeholder: 'New Password',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    style: MASTER.wideRoundInput,\n    value: confirmPassword,\n    onChange: function onChange(e) {\n      return setConfirmPassword(e.target.value);\n    },\n    type: \"password\",\n    placeholder: 'Confirm New Password',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), props.newUser ? __jsx(\"button\", {\n    style: _objectSpread({}, MASTER.wideRoundBtn, {\n      marginTop: 20\n    }),\n    onClick: function onClick() {\n      return signup();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    style: MASTER.wideRoundBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Save\")) : __jsx(\"div\", {\n    style: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    style: _objectSpread({}, MASTER.wideRoundBtn, {\n      backgroundColor: 'red',\n      marginTop: 20\n    }),\n    onClick: function onClick() {\n      return deleteUser(props.user.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    style: MASTER.wideRoundBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"Delete User\")), __jsx(\"button\", {\n    style: _objectSpread({}, MASTER.wideRoundBtn, {\n      marginTop: 20\n    }),\n    onClick: function onClick() {\n      return updateUser();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    style: MASTER.wideRoundBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"Save\")))));\n};\n\nvar styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n    paddingBottom: 10,\n    minWidth: 300\n  },\n  subcontainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n    maxWidth: 400\n  }\n};\nexport default EditUser;","map":{"version":3,"sources":["/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/components/orgAndUsers/editUser.js"],"names":["useState","useEffect","useContext","fetch","FULL_URL","MASTER","COLORS","EditUser","props","user","userAlias","setUserName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","openWarning","message","alert","validEmail","re","test","String","toLowerCase","signup","method","headers","body","roleLevel","org","orgID","request","json","id","openPopup","updateUsers","updateUser","console","log","orgName","deleteUser","confirm","response","styles","container","subcontainer","wideRoundInput","e","target","value","newUser","wideRoundBtn","marginTop","wideRoundBtnText","width","display","flexDirection","alignItems","backgroundColor","justifyContent","height","paddingBottom","minWidth","maxWidth"],"mappings":"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","sourcesContent":["\n\nimport { useState, useEffect, useContext } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport FULL_URL from '../../constants/constants';\n\n// context imports\n\n// Style imports\nimport { MASTER, COLORS } from '../../styles/masterStyles';\n\nconst EditUser = (props) => {\n\n    const [userAlias, setUserName] = useState(props.user.userAlias);\n    const [email, setEmail] = useState(props.user.email);\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const openWarning = (message) => {\n            alert(\n                `Woah there! ${message}`,\n            );\n    }\n\n    const validEmail = email => {\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    }\n    \n    const signup = async () => {\n        if(!userAlias){\n            openWarning('Must have a userAlias!');\n            return;\n        }\n        if(!email || !validEmail(email)){\n            openWarning('Must have a valid email!');\n            return;\n        }\n        if(!password || password !== confirmPassword){\n            openWarning('Passwords must match!');\n            return;\n        }\n        try {\n            const request = await fetch(`${FULL_URL}/users/signup`, {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    userAlias,\n                    email,\n                    password,\n                    roleLevel: 2,\n                    org: props.orgID,\n                })\n              })\n              const user = await request.json();\n              if(user && user.id){\n                props.openPopup(false, false);\n                props.updateUsers('new', user);\n              } else {\n                  alert('There was a problem creating this user...');\n              }\n        } catch (err) { alert( err ) }\n    }\n\n    const updateUser = async () => {\n        if(!userAlias){\n            openWarning('Must have a user name!');\n            return;\n        }\n        if(!email || !validEmail(email)){\n            openWarning('Must have a valid email!');\n            return;\n        }\n        if(password && password !== confirmPassword){\n            openWarning('Passwords must match!');\n            return;\n        }\n        console.log('user updating', props.user)\n        try {\n            const request = await fetch(`${FULL_URL}/users/update/${props.user.id}`, {\n                method: 'POST',\n                // headers: {\n                //   'Accept': 'application/json',\n                //   'Content-Type': 'application/json',\n                //   'Authorization': `Bearer ${localStorage.getItem('bingo_token')}`\n                // },\n                body: JSON.stringify({\n                    id: props.user.id,\n                    userAlias,\n                    email,\n                    password,\n                    org: props.org.id,\n                    orgName: props.org.orgName,\n                    roleLevel: 2\n                })\n              })\n              const user = await request.json();\n              console.log('from backend', {user})\n              if(user && user.id){\n                props.openPopup(false, false);\n                props.updateUsers('edit', user);\n              } else {\n                  alert('There was a problem updating this user...');\n              }\n        } catch (err) { alert( err ) }\n    }\n\n    const deleteUser = async id => {\n        if(confirm(`Are you sure? This will delete ${userAlias} forever!`)){\n            try {\n                const request = await fetch(`${FULL_URL}/users/delete${props.user.id}`, {\n                    method: 'POST',\n                    // headers: {\n                    //   'Accept': 'application/json',\n                    //   'Content-Type': 'application/json',\n                    //   'Authorization': `Bearer ${localStorage.getItem('bingo_token')}`\n                    // },\n                  })\n                  const response = await request.json();\n                  if(response && response.id){\n                    props.updateUsers('delete', id);\n                    props.openPopup(false, false);\n                  } else {\n                      alert('There was a problem deleting this user...');\n                  }\n            } catch (err) { alert( err ) }\n        }\n    }\n\n\n    return (\n        <div style={styles.container}>\n            <div style={styles.subcontainer}>\n                <input \n                    style={MASTER.wideRoundInput} \n                    value={userAlias} \n                    onChange={e => setUserName(e.target.value)} \n                    placeholder={'User Name'}\n                />\n                <input \n                    style={MASTER.wideRoundInput} \n                    value={email} \n                    onChange={e => setEmail(e.target.value)} \n                    placeholder={'Email'}\n                />\n                <input \n                    style={MASTER.wideRoundInput} \n                    value={password} \n                    onChange={e => setPassword(e.target.value)} \n                    type='password'\n                    placeholder={'New Password'}\n                />\n                <input \n                    style={MASTER.wideRoundInput} \n                    value={confirmPassword} \n                    onChange={e => setConfirmPassword(e.target.value)} \n                    type='password'\n                    placeholder={'Confirm New Password'}\n                />\n                {props.newUser ?\n                    <button \n                        style={{ ...MASTER.wideRoundBtn, marginTop: 20 }} \n                        onClick={() => signup()}\n                    >\n                        <span style={MASTER.wideRoundBtnText}>Save</span>\n                    </button> :\n                    <div style={{ width: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                        <button \n                            style={{ ...MASTER.wideRoundBtn, backgroundColor: 'red', marginTop: 20 }} \n                            onClick={() => deleteUser(props.user.id)}\n                        >\n                            <span style={MASTER.wideRoundBtnText}>Delete User</span>\n                        </button>\n                        <button \n                            style={{ ...MASTER.wideRoundBtn, marginTop: 20 }} \n                            onClick={() => updateUser()}\n                        >\n                            <span style={MASTER.wideRoundBtnText}>Save</span>\n                        </button>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n  };\n\n  const styles = {\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n        paddingBottom: 10,\n        minWidth: 300\n    },\n    subcontainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n        maxWidth: 400,\n    }\n}\n  \n  export default EditUser;"]},"metadata":{},"sourceType":"module"}