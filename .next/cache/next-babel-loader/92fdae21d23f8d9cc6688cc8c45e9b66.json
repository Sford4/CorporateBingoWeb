{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/pages/forgotPassword.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport FULL_URL from '../constants/constants'; // context imports\n\nimport { UserContext } from '../contexts/userContext'; // Style imports\n\nimport { MASTER } from '../styles/masterStyles';\n\nvar ForgotPassword = function ForgotPassword() {\n  var _useContext = useContext(UserContext),\n      user = _useContext.user;\n\n  var router = useRouter();\n\n  var _useState = useState(''),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(false),\n      confirmationMessage = _useState2[0],\n      setConfirmationMessage = _useState2[1];\n\n  useEffect(function () {\n    if (user._id && localStorage.getItem('bingo_token')) {\n      router.push('/joinGame');\n    }\n  }, [user]);\n\n  var submitEmail =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var request, success;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (email) {\n                _context.next = 3;\n                break;\n              }\n\n              alert('Must have a valid email!');\n              return _context.abrupt(\"return\");\n\n            case 3:\n              _context.next = 5;\n              return fetch(\"\".concat(FULL_URL, \"/users/forgotPassword\"), {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: _JSON$stringify({\n                  email: email\n                })\n              });\n\n            case 5:\n              request = _context.sent;\n              _context.next = 8;\n              return request.json();\n\n            case 8:\n              success = _context.sent;\n              console.log({\n                success: success\n              });\n\n              if (!success.error) {\n                _context.next = 13;\n                break;\n              }\n\n              alert(\"Yikes... \".concat(success.error));\n              return _context.abrupt(\"return\");\n\n            case 13:\n              if (success) {\n                _context.next = 16;\n                break;\n              }\n\n              alert('Something went wrong... please try again later');\n              return _context.abrupt(\"return\");\n\n            case 16:\n              setConfirmationMessage(true);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function submitEmail() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  if (confirmationMessage) {\n    return __jsx(\"div\", {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: MASTER.pageTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"PASSWORD RESET\"), __jsx(\"div\", {\n      style: styles.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Your password reset email has been sent, check your inbox!\"));\n  }\n\n  return __jsx(\"div\", {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: styles.subcontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: MASTER.pageTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"PASSWORD RESET\"), __jsx(\"div\", {\n    style: styles.message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Submit your email address and we'll send you a password reset email.\"), __jsx(\"input\", {\n    style: MASTER.wideRoundInput,\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    placeholder: 'Email',\n    type: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    style: _objectSpread({}, MASTER.wideRoundBtn, {\n      marginTop: 20\n    }),\n    onClick: function onClick() {\n      return submitEmail();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    style: MASTER.wideRoundBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Submit\"))));\n};\n\nvar styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n    paddingTop: 40\n  },\n  subcontainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n    maxWidth: 400\n  },\n  message: {\n    textAlign: 'center',\n    marginTop: 10\n  }\n};\nexport default ForgotPassword;","map":{"version":3,"sources":["/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/pages/forgotPassword.js"],"names":["useState","useEffect","useContext","useRouter","fetch","FULL_URL","UserContext","MASTER","ForgotPassword","user","router","email","setEmail","confirmationMessage","setConfirmationMessage","_id","localStorage","getItem","push","submitEmail","alert","method","headers","body","request","json","success","console","log","error","styles","container","pageTitle","message","subcontainer","wideRoundInput","e","target","value","wideRoundBtn","marginTop","wideRoundBtnText","display","flexDirection","justifyContent","alignItems","width","height","paddingTop","maxWidth","textAlign"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport FULL_URL from '../constants/constants';\n\n// context imports\nimport { UserContext } from '../contexts/userContext';\n\n// Style imports\nimport { MASTER } from '../styles/masterStyles';\n\nconst ForgotPassword = () => {\n\n    const { user } = useContext(UserContext);\n\n    const router = useRouter()\n\n    const [email, setEmail] = useState('');\n  const [confirmationMessage, setConfirmationMessage] = useState(false);\n\n    useEffect(() => {\n        if(user._id && localStorage.getItem('bingo_token')){\n            router.push('/joinGame');\n        }\n      }, [user])\n\n      const submitEmail = async () => {\n        if(!email){\n            alert(\n              'Must have a valid email!',\n            );\n            return;\n        }\n          const request = await fetch(`${FULL_URL}/users/forgotPassword`, {\n              method: 'POST',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({ \n                  email,\n              })\n            }) \n            const success = await request.json();\n            console.log({success})\n            if(success.error){\n                alert(\n                    `Yikes... ${success.error}`\n                  );\n                return; \n            }\n            if(!success){\n              alert(\n                'Something went wrong... please try again later',\n              );\n              return;\n            }\n            setConfirmationMessage(true);\n      }\n\n      if(confirmationMessage){\n        return (<div style={styles.container}>\n          <div style={MASTER.pageTitle}>PASSWORD RESET</div>\n          <div style={styles.message}>Your password reset email has been sent, check your inbox!</div>\n        </div>);\n      }\n\n    return (\n        <div style={styles.container}>\n            <div style={styles.subcontainer}>\n                <div style={MASTER.pageTitle}>PASSWORD RESET</div>\n                <div style={styles.message}>Submit your email address and we'll send you a password reset email.</div>\n                <input \n                    style={MASTER.wideRoundInput} \n                    value={email} \n                    onChange={e => setEmail(e.target.value)} \n                    placeholder={'Email'}\n                    type='email'\n                />\n                \n                <button \n                    style={{ ...MASTER.wideRoundBtn, marginTop: 20 }} \n                    onClick={() => submitEmail()}\n                >\n                    <span style={MASTER.wideRoundBtnText}>Submit</span>\n                </button>\n                \n            </div>\n        </div>\n    )\n  };\n\n  const styles = {\n      container: {\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          width: '100%',\n          height: '100%',\n          paddingTop: 40,\n      },\n      subcontainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n        maxWidth: 400,\n    },\n    message: {\n        textAlign: 'center',\n        marginTop: 10,\n    }\n  }\n  \n  export default ForgotPassword;"]},"metadata":{},"sourceType":"module"}