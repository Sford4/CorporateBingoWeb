{"ast":null,"code":"var _jsxFileName = \"/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/components/Play/RewardDetail.js\";\nvar __jsx = React.createElement;\nimport React from 'react'; // Style imports\n\nimport { MASTER, COLORS } from '../../styles/masterStyles'; // Component imports\n\nconst RewardDetail = props => {\n  const reward = props.reward;\n\n  const generateHowToEarn = position => {\n    if (position === 'wholeBoard') {\n      return 'Complete every task on the board!';\n    } else if (position.substring(0, 3) === 'row') {\n      return `Complete every task in row ${position.slice(-1)}.`;\n    } else if (position.substring(0, 3) === 'col') {\n      return `Complete every task in column ${position.slice(-1)}.`;\n    } else if (position === 'diagonalUpRight') {\n      return 'Complete every task in the diagonal from the bottom left square to the top right.';\n    }\n\n    return 'Complete every task in the diagonal from the top left square to the bottom right.';\n  };\n\n  return __jsx(\"div\", {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      height: reward.img ? 200 : 0,\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, console.log(reward.img, reward.img.length), reward.img && __jsx(\"img\", {\n    style: styles.pic,\n    src: reward.img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), reward.earned && __jsx(\"div\", {\n    style: styles.earnedContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: styles.earnedText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"EARNED\"))), __jsx(\"div\", {\n    style: {\n      fontSize: 24,\n      marginVertical: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, reward.title), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, reward.description), __jsx(\"div\", {\n    style: styles.howTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"How to earn:\"), __jsx(\"div\", {\n    style: styles.howText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, generateHowToEarn(reward.position)));\n};\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    padding: 30\n  },\n  pic: {\n    width: 200,\n    height: 200\n  },\n  earnedContainer: {\n    position: 'absolute',\n    left: '50%',\n    top: '50%'\n  },\n  earnedText: {\n    color: COLORS.green,\n    position: 'relative',\n    left: '-50%',\n    top: '-50%',\n    fontSize: 45,\n    transform: 'rotateZ(345deg)'\n  },\n  howTitle: {\n    fontSize: 20,\n    width: '90%',\n    marginTop: 30,\n    textAlign: 'center'\n  },\n  howText: {\n    width: '90%',\n    marginTop: 5,\n    textAlign: 'center'\n  }\n};\nexport default RewardDetail;","map":{"version":3,"sources":["/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/components/Play/RewardDetail.js"],"names":["React","MASTER","COLORS","RewardDetail","props","reward","generateHowToEarn","position","substring","slice","styles","container","height","img","width","display","justifyContent","alignItems","marginTop","console","log","length","pic","earned","earnedContainer","earnedText","fontSize","marginVertical","title","description","howTitle","howText","flexDirection","backgroundColor","padding","left","top","color","green","transform","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\n// Style imports\nimport { MASTER, COLORS } from '../../styles/masterStyles';\n\n// Component imports\n\nconst RewardDetail = (props) => {\n\n  const reward = props.reward;\n\n  const generateHowToEarn = position => {\n    if(position === 'wholeBoard'){\n      return 'Complete every task on the board!';\n    } else if (position.substring(0, 3) === 'row'){\n      return `Complete every task in row ${position.slice(-1)}.`; \n    } else if (position.substring(0, 3) === 'col'){\n      return `Complete every task in column ${position.slice(-1)}.`;\n    } else if (position === 'diagonalUpRight'){\n      return 'Complete every task in the diagonal from the bottom left square to the top right.'\n    }\n    return 'Complete every task in the diagonal from the top left square to the bottom right.'\n  }\n\n  return (\n    <div style={styles.container}>\n      <div style={{ height: reward.img ? 200 : 0, width: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', marginTop: 10 }}>\n        {console.log(reward.img, reward.img.length)}\n        {reward.img && \n          <img \n            style={styles.pic} \n            src={reward.img} \n          />\n        }\n        {reward.earned && \n          <div style={styles.earnedContainer}>\n            <div style={styles.earnedText}>EARNED</div>\n          </div>\n        }\n      </div>\n      <div style={{fontSize: 24, marginVertical: 10}}>{reward.title}</div>\n      <div>{reward.description}</div>\n      <div style={styles.howTitle}>How to earn:</div> \n      <div style={styles.howText}>{generateHowToEarn(reward.position)}</div>\n    </div>\n  );\n}\n  \nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    padding: 30,\n  },\n  pic: {\n    width: 200,\n    height: 200\n  },\n  earnedContainer: { \n    position: 'absolute', \n    left: '50%', \n    top: '50%' \n  },\n  earnedText: { \n    color: COLORS.green, \n    position: 'relative', \n    left: '-50%', \n    top: '-50%', \n    fontSize: 45, \n    transform: 'rotateZ(345deg)',\n  },\n  howTitle: { \n    fontSize: 20, \n    width: '90%', \n    marginTop: 30, \n    textAlign: 'center' \n  },\n  howText: { \n    width: '90%', \n    marginTop: 5, \n    textAlign: 'center' \n  }\n\n};\n\nexport default RewardDetail;"]},"metadata":{},"sourceType":"module"}