{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/components/Play/Tasks/TaskClick.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react'; // context imports\n// Style imports\n// import { MASTER } from '../../../styles/masterStyles';\n// Component Imports\n\nimport Switch from '@material-ui/core/Switch';\n\nvar TaskClick = function TaskClick(props) {\n  var _useState = useState(props.task.complete),\n      isClicked = _useState[0],\n      setIsClicked = _useState[1];\n\n  var handleSwitchChange = function handleSwitchChange(val) {\n    props.updateTask(_objectSpread({}, props.task, {\n      complete: val,\n      task: {\n        taskType: 'click',\n        answer: val ? 'done' : ''\n      }\n    }));\n    props.completeSquare(val);\n    setIsClicked(val);\n  };\n\n  return __jsx(\"div\", {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      marginRight: 5,\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Just flip this switch:\"), __jsx(Switch, {\n    onChange: function onChange() {\n      return handleSwitchChange(!isClicked);\n    },\n    value: isClicked,\n    checked: isClicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};\n\nvar styles = {\n  container: {\n    height: 200,\n    backgroundColor: '#fff',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center'\n  }\n};\nexport default TaskClick;","map":{"version":3,"sources":["/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/components/Play/Tasks/TaskClick.js"],"names":["React","useState","useEffect","Switch","TaskClick","props","task","complete","isClicked","setIsClicked","handleSwitchChange","val","updateTask","taskType","answer","completeSquare","styles","container","marginRight","fontWeight","height","backgroundColor","display","flexDirection","alignItems"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;AAEA;AACA;AAEA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAAA,kBAESJ,QAAQ,CAACI,KAAK,CAACC,IAAN,CAAWC,QAAZ,CAFjB;AAAA,MAElBC,SAFkB;AAAA,MAEPC,YAFO;;AAIzB,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,GAAG,EAAI;AAC9BN,IAAAA,KAAK,CAACO,UAAN,mBACOP,KAAK,CAACC,IADb;AAEIC,MAAAA,QAAQ,EAAEI,GAFd;AAGIL,MAAAA,IAAI,EAAE;AACFO,QAAAA,QAAQ,EAAE,OADR;AAEFC,QAAAA,MAAM,EAAEH,GAAG,GAAG,MAAH,GAAY;AAFrB;AAHV;AAQAN,IAAAA,KAAK,CAACU,cAAN,CAAqBJ,GAArB;AACAF,IAAAA,YAAY,CAACE,GAAD,CAAZ;AACH,GAXD;;AAaF,SACE;AAAK,IAAA,KAAK,EAAEK,MAAM,CAACC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,WAAW,EAAE,CAAd;AAAiBC,MAAAA,UAAU,EAAE;AAA7B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI,MAAC,MAAD;AACI,IAAA,QAAQ,EAAI;AAAA,aAAMT,kBAAkB,CAAC,CAACF,SAAF,CAAxB;AAAA,KADhB;AAEI,IAAA,KAAK,EAAIA,SAFb;AAGI,IAAA,OAAO,EAAEA,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF;AAUD,CA3BD;;AA6BA,IAAMQ,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE;AACTG,IAAAA,MAAM,EAAE,GADC;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,OAAO,EAAE,MAHA;AAITC,IAAAA,aAAa,EAAE,KAJN;AAKTC,IAAAA,UAAU,EAAE;AALH;AADE,CAAf;AAUA,eAAepB,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n// context imports\n\n// Style imports\n// import { MASTER } from '../../../styles/masterStyles';\n\n// Component Imports\nimport Switch from '@material-ui/core/Switch';\n\nconst TaskClick = (props) => {\n\n    const [isClicked, setIsClicked] = useState(props.task.complete);\n\n    const handleSwitchChange = val => {\n        props.updateTask({\n            ...props.task,\n            complete: val,\n            task: {\n                taskType: 'click',\n                answer: val ? 'done' : '',\n            }\n        })\n        props.completeSquare(val);\n        setIsClicked(val)\n    }\n\n  return (\n    <div style={styles.container}>\n        <div style={{marginRight: 5, fontWeight: 'bold'}}>Just flip this switch:</div>\n        <Switch\n            onChange = {() => handleSwitchChange(!isClicked)}\n            value = {isClicked}\n            checked={isClicked}\n        />\n    </div>\n  );\n}\n  \nconst styles = {\n  container: {\n    height: 200,\n    backgroundColor: '#fff',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n};\n\nexport default TaskClick;"]},"metadata":{},"sourceType":"module"}