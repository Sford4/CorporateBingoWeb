{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/contexts/userContext.js\";\nvar __jsx = React.createElement;\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nexport const UserContext = createContext();\n\nconst UserContextProvider = props => {\n  const {\n    0: user,\n    1: setUser\n  } = useState({});\n  const router = useRouter();\n\n  const storeUserAndToken = user => {\n    if (!user.token && !localStorage.getItem('bingo_token')) {\n      alert('Something went wrong logging you in, please try again!');\n      return;\n    }\n\n    if (localStorage) {\n      if (user.token) {\n        localStorage.setItem('bingo_token', user.token);\n      }\n\n      localStorage.setItem('bingo_user', _JSON$stringify({\n        userAlias: user.userAlias,\n        email: user.email,\n        roleLevel: user.roleLevel,\n        org: user.org,\n        orgName: user.orgName,\n        id: user.id\n      }));\n      setUser({\n        userAlias: user.userAlias,\n        email: user.email,\n        roleLevel: user.roleLevel,\n        org: user.org,\n        orgName: user.orgName,\n        id: user.id\n      });\n    } else {\n      alert('Something went wrong logging you in, please try again!');\n      return;\n    }\n  };\n\n  const logout = () => {\n    localStorage.clear();\n    setUser({});\n    router.push('/login');\n  };\n\n  return __jsx(UserContext.Provider, {\n    value: {\n      user,\n      updateBoard: setUser,\n      storeUser: storeUserAndToken,\n      logout: logout\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default UserContextProvider;","map":{"version":3,"sources":["/Users/spencerford/Documents/DEVyall/PersonalProjects/CorporateBingoWeb/contexts/userContext.js"],"names":["React","createContext","useState","useEffect","useRouter","UserContext","UserContextProvider","props","user","setUser","router","storeUserAndToken","token","localStorage","getItem","alert","setItem","userAlias","email","roleLevel","org","orgName","id","logout","clear","push","updateBoard","storeUser","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,EAAjC;;AAEP,MAAMK,mBAAmB,GAAIC,KAAD,IAAW;AAEnC,QAAM;AAAA,OAAEC,IAAF;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMQ,MAAM,GAAGN,SAAS,EAAxB;;AAEA,QAAMO,iBAAiB,GAAGH,IAAI,IAAI;AAC9B,QAAG,CAACA,IAAI,CAACI,KAAN,IAAe,CAACC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAnB,EAAuD;AACnDC,MAAAA,KAAK,CAAC,wDAAD,CAAL;AACA;AACH;;AACD,QAAGF,YAAH,EAAgB;AACZ,UAAGL,IAAI,CAACI,KAAR,EAAc;AACVC,QAAAA,YAAY,CAACG,OAAb,CAAqB,aAArB,EAAoCR,IAAI,CAACI,KAAzC;AACH;;AACDC,MAAAA,YAAY,CAACG,OAAb,CAAqB,YAArB,EAAmC,gBAAe;AAC9CC,QAAAA,SAAS,EAAET,IAAI,CAACS,SAD8B;AAE9CC,QAAAA,KAAK,EAAEV,IAAI,CAACU,KAFkC;AAG9CC,QAAAA,SAAS,EAAEX,IAAI,CAACW,SAH8B;AAI9CC,QAAAA,GAAG,EAAEZ,IAAI,CAACY,GAJoC;AAK9CC,QAAAA,OAAO,EAAEb,IAAI,CAACa,OALgC;AAM9CC,QAAAA,EAAE,EAAEd,IAAI,CAACc;AANqC,OAAf,CAAnC;AAQAb,MAAAA,OAAO,CAAC;AACJQ,QAAAA,SAAS,EAAET,IAAI,CAACS,SADZ;AAEJC,QAAAA,KAAK,EAAEV,IAAI,CAACU,KAFR;AAGJC,QAAAA,SAAS,EAAEX,IAAI,CAACW,SAHZ;AAIJC,QAAAA,GAAG,EAAEZ,IAAI,CAACY,GAJN;AAKJC,QAAAA,OAAO,EAAEb,IAAI,CAACa,OALV;AAMJC,QAAAA,EAAE,EAAEd,IAAI,CAACc;AANL,OAAD,CAAP;AAQH,KApBD,MAoBO;AACHP,MAAAA,KAAK,CAAC,wDAAD,CAAL;AACA;AACH;AACJ,GA7BD;;AA+BA,QAAMQ,MAAM,GAAG,MAAM;AACjBV,IAAAA,YAAY,CAACW,KAAb;AACAf,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAC,IAAAA,MAAM,CAACe,IAAP,CAAY,QAAZ;AACH,GAJD;;AAOA,SACI,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEjB,MAAAA,IAAF;AAAQkB,MAAAA,WAAW,EAAEjB,OAArB;AAA8BkB,MAAAA,SAAS,EAAEhB,iBAAzC;AAA4DY,MAAAA,MAAM,EAAEA;AAApE,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhB,KAAK,CAACqB,QADX,CADJ;AAKH,CAjDD;;AAmDA,eAAetB,mBAAf","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { useRouter } from 'next/router'\n\nexport const UserContext = createContext();\n\nconst UserContextProvider = (props) => {\n\n    const [ user, setUser ] = useState({});\n      \n    const router = useRouter();\n\n    const storeUserAndToken = user => {\n        if(!user.token && !localStorage.getItem('bingo_token')){\n            alert('Something went wrong logging you in, please try again!');\n            return;\n        }\n        if(localStorage){\n            if(user.token){\n                localStorage.setItem('bingo_token', user.token);\n            }\n            localStorage.setItem('bingo_user', JSON.stringify({\n                userAlias: user.userAlias,\n                email: user.email,\n                roleLevel: user.roleLevel,\n                org: user.org,\n                orgName: user.orgName,\n                id: user.id,\n            }));\n            setUser({\n                userAlias: user.userAlias,\n                email: user.email,\n                roleLevel: user.roleLevel,\n                org: user.org,\n                orgName: user.orgName,\n                id: user.id,\n            })\n        } else {\n            alert('Something went wrong logging you in, please try again!');\n            return;\n        }\n    }\n\n    const logout = () => {\n        localStorage.clear();\n        setUser({});\n        router.push('/login');\n    }\n\n\n    return (\n        <UserContext.Provider value={{ user, updateBoard: setUser, storeUser: storeUserAndToken, logout: logout }}>\n            {props.children}\n        </UserContext.Provider>\n    )\n}\n\nexport default UserContextProvider;"]},"metadata":{},"sourceType":"module"}