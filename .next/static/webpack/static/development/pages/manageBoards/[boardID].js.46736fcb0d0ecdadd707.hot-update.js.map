{"version":3,"file":"static/webpack/static/development/pages/manageBoards/[boardID].js.46736fcb0d0ecdadd707.hot-update.js","sources":["webpack:///./components/ManageBoard/BoardBuilder/BoardBuilder.js","webpack:///./components/ManageBoard/ManageBoardContainer.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\n\n// context imports\nimport { ManageBoardsContext } from '../../../contexts/manageBoardsContext';\n\n// Style imports\nimport { MASTER, COLORS } from '../../../styles/masterStyles';\n\n// Component imports\nimport BoardBuilderBoard from './BoardBuilderBoard';\nimport RewardBuilder from './RewardBuilder';\n\n// Material ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}))(MuiDialogActions);\n\nconst materialStyles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n    fontSize: 32,\n    color: COLORS.primary,\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(materialStyles)(props => {\n  const { children, classes, onClose } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root}>\n      <Typography variant=\"h6\">{children}</Typography>\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n    </MuiDialogTitle>\n  );\n});\n\n\nconst BoardBuilder = (props) => { \n\n  const { contextBoard, updateBoard } = useContext(ManageBoardsContext);\n\n  const [board, setBoard] = useState(contextBoard);\n  const [rewardDialogOpen, setRewardDialogOpen] = useState(false);\n  const [reward, setReward] = useState({});\n  \n  const openRewardBuilderPopup = (reward) => {\n    setRewardDialogOpen(true);\n    setReward(reward);\n  }\n\n  const updateBoardBuilder = (board) => {\n    updateBoard(board);\n  }\n\n  useEffect(() => {\n    setBoard(contextBoard)\n  }, [contextBoard])\n\n  const generateWholeBoardRewardIcon = (reward) => {\n\n      return (\n          <img \n            alt=\"Whole board completion reward\" \n            onClick={() => openRewardBuilderPopup(reward)} \n            style={{width: '10vw', height: '10vw', maxHeight: 200, maxWidth: 200, cursor: 'pointer', }} \n            src={!reward.title && !reward.description && !reward.img ? '../../static/gift_light_gray.png' : '../../static/gift_gray.png'}\n          />\n      );\n  }\n\n  return (\n      <div style={styles.container}>\n        {board.rewards.length && board.rewards[board.rewards.length - 1].position.includes('wholeBoard') ? generateWholeBoardRewardIcon(board.rewards[board.rewards.length - 1]) : null}\n        <BoardBuilderBoard \n          board={board}\n          navigation={props.navigation}\n          size={`size${board.numSquares}`}\n          updateBoard={updateBoardBuilder}\n        />\n        <Dialog open={rewardDialogOpen} onBackdropClick={() => setRewardDialogOpen(false)}>\n          <DialogTitle onClose={() => setRewardDialogOpen(false)}>\n              REWARD\n            </DialogTitle>\n          <RewardBuilder reward={reward} openPopup={setRewardDialogOpen} updateBoard={updateBoardBuilder} />\n        </Dialog>\n      </div>\n  );\n}\n  \nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    // maxHeight: 650,\n    overflowY: 'scroll',\n    overflowX: 'overlay',\n    width: '60vw',\n    maxWidth: 800,\n    minWidth: 300,\n    paddingHorizontal: 'auto',\n    padding: '0 5%',\n    marginTop: 12,\n  },\n};\n\nexport default BoardBuilder;","import { useState } from 'react';\n\n// context imports\n\n// Style imports\nimport { MASTER, COLORS } from '../../styles/masterStyles';\n\n// Component imports\nimport BoardSettings from './BoardSettings';\nimport BoardTeamsOrPlayers from './TeamOrPlayers/BoardTeamsOrPlayers';\nimport BoardBuilder from './BoardBuilder/BoardBuilder';\nimport BoardRewards from './BoardRewards';\n\n// Material UI\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nconst ManageBoardContainer = (props) => {\n    const [tab, setTab] = useState(0);\n    const [component, setComponent] = useState(<BoardSettings changesMade={props.changesMade} board={props.board} />)\n\n    const selectTab = tab => {\n        setTab(tab);\n        switch (tab) {\n            case 0:\n                setComponent(<BoardSettings changesMade={props.changesMade} board={props.board} />);\n                return;\n            case 1:\n                setComponent(<BoardBuilder changesMade={props.changesMade} board={props.board} />);\n                return;\n            case 2:\n                setComponent(<BoardTeamsOrPlayers changesMade={props.changesMade} boardID={props.board._id} />);\n                return;\n            case 3:\n                setComponent(<BoardRewards changesMade={props.changesMade} board={props.board} />);\n                return;\n            default:\n                setComponent(<BoardSettings changesMade={props.changesMade} board={props.board} />);\n                return;\n        }\n    }\n    \n\n\n    return (\n        <Paper>\n            <Tabs\n                value={tab}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                onChange={(e, val) => selectTab(val)}\n                aria-label=\"manage boards views tabs\"\n                variant='fullWidth'\n                centered\n            >\n                <Tab label=\"Settings\" />\n                <Tab label=\"Board\" />\n                <Tab label=\"Games\" />\n                <Tab label=\"Rewards\" />\n            </Tabs>\n            <div style={{ borderTop: `1px solid ${COLORS.primary}`, maxHeight: 800, display: 'flex', justifyContent: 'center', overflowY: 'scroll' }}>\n                {component}\n            </div>\n\n        </Paper>\n    )\n  };\n  \n  export default ManageBoardContainer;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAAA;AACA;AASA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAPA;AAAA;AACA;AAcA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAsBA;;;;;;;;;;;;;;;;;;;;;;;;;;ACtIA;AAIA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAfA;AAiBA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;A","sourceRoot":""}