{"version":3,"file":"static/webpack/static/development/pages/usersAndOrg.js.dedf4ac61a29298e62f4.hot-update.js","sources":["webpack:///./components/orgAndUsers/usersDetails.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport moment from 'moment';\n\n// context imports\n\n// Style imports\nimport { MASTER, COLORS } from '../../styles/masterStyles';\n\n// component imports\nimport EditUser from './editUser';\n\n// Material UI\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\n// context imports\nimport { OrgContext } from '../../contexts/orgContext';\nimport { UserContext } from '../../contexts/userContext';\n  \n  const materialStyles = theme => ({\n    root: {\n      margin: 0,\n      padding: 20,\n      fontSize: 32,\n      color: COLORS.primary,\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n  });\n  \n  const DialogTitle = withStyles(materialStyles)(props => {\n    const { children, classes, onClose } = props;\n    return (\n      <MuiDialogTitle disableTypography className={classes.root}>\n        <Typography variant=\"h6\">{children}</Typography>\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n      </MuiDialogTitle>\n    );\n  });\n\nconst UsersDetails = (props) => {\n\n    const { contextOrg, getOrg, contextOrgUsers, contextSetUsers } = useContext(OrgContext);\n    const { user, } = useContext(UserContext);\n\n  const [searchText, setSearchText] = useState('');\n  const [users, setUsers] = useState(contextOrgUsers || []);\n  const [userToEdit, setUserToEdit] = useState(false);\n  const [newUser, setNewUser] = useState(false);\n\n  const openUserPopup = (user, isNew) => {\n      setNewUser(isNew);\n      setUserToEdit(user)\n  }\n\n  const searchForBoard = () => {\n    setSearchText('');\n    setUsers(dummyBoards)\n  }\n\n  const updateUsers = (type, user) => {\n    if(type === 'delete'){\n        console.log(user)\n        contextSetUsers(users.filter(oldUser => oldUser.id !== user))\n    } else if(type === 'new'){\n        const users = contextOrgUsers;\n        users.push(user);\n        contextSetUsers(users);\n    } else if(type === 'edit'){\n        console.log('updating user', user)\n        let usersToSave = contextOrgUsers.map(oldUser => {\n            if(oldUser.id === user.id){\n                return user;\n            } \n            return oldUser;\n        })\n        contextSetUsers(usersToSave);\n    }\n  }\n\n  useEffect(() => {\n    if(!contextOrg.id && user && user.org){\n        getOrg(user.org);\n    }\n    if(contextOrg && contextOrg.id && contextOrgUsers){\n        console.log('users after update', contextOrgUsers)\n        setUsers(contextOrgUsers);\n    }\n  }, [contextOrg, user])\n\n  const generateBoardRows = () => {\n\t\tif(users.length){\n\t\t\treturn users.map((user, index) => {\n\t\t\t\treturn (\n                    <TableRow style={{ cursor: 'pointer' }} onClick={() => setUserToEdit(user, false)} key={index}>\n                        <TableCell>{user.userAlias}</TableCell>\n                        <TableCell>{user.email}</TableCell>\n                        <TableCell>{moment(user.modified).format(\"MMM Do, YYYY\")}</TableCell>\n                    </TableRow>\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\t\treturn <TableRow style={{width: '100%'}}><TableCell>No users yet... click NEW USER to make one!</TableCell><TableCell></TableCell><TableCell></TableCell><TableCell></TableCell></TableRow>\n  }\n\n  return (\n        <div style={styles.container}>\n            <div style={MASTER.pageTitle}>Admins for {contextOrg.name} (click to edit)</div>\n            {/* <input \n                style={{ ...MASTER.wideRoundInput, maxWidth: 300 }} \n                value={searchText} \n                onChange={(e) => setSearchText(e.target.value)} \n                placeholder={'Search by user name or email'}\n            /> */}\n            <Table style={{ width:\"100%\" }}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>USER NAME</TableCell>\n                        <TableCell>EMAIL</TableCell>\n                        <TableCell>MODIFIED</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {generateBoardRows()}\n                </TableBody>\n            </Table>\n            <button \n                style={{ ...MASTER.wideRoundBtn, width: 150, position: 'absolute', bottom: 30, right: 20, height: 45 }} \n                onClick={() => openUserPopup(true, true)}\n            >\n                <div style={MASTER.wideRoundBtnText}>NEW USER</div>\n            </button>\n            <Dialog open={!!userToEdit} onBackdropClick={() => openUserPopup(false, false)}>\n                <DialogTitle onClose={() => openUserPopup(false, false)}>\n                    {newUser ? 'New User' : `Editing User: ${userToEdit && userToEdit.userAlias}`}\n                </DialogTitle>\n                <EditUser user={userToEdit} openPopup={openUserPopup} newUser={newUser} org={contextOrg} updateUsers={updateUsers} />\n            </Dialog>\n        </div>\n  );\n}\n  \nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#fff',\n    width: '100%',\n    padding: 20,\n  },\n};\n\nexport default UsersDetails;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAPA;AAAA;AACA;AAcA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAUA;;;;A","sourceRoot":""}